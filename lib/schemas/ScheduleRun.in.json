{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "Represents a request to the schedule run operation.",
            "example": {
                "devicePoolArn": "arn:aws:devicefarm:us-west-2:123456789101:pool:EXAMPLE-GUID-123-456",
                "name": "MyRun",
                "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                "test": {
                    "testPackageArn": "arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456",
                    "type": "APPIUM_JAVA_JUNIT"
                }
            },
            "properties": {
                "appArn": {
                    "description": "The ARN of the app to schedule a run.",
                    "minLength": 32,
                    "type": "string"
                },
                "configuration": {
                    "description": "Information about the settings for the run to be scheduled.",
                    "properties": {
                        "auxiliaryApps": {
                            "description": "A list of auxiliary apps for the run.",
                            "items": {
                                "minLength": 32,
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "billingMethod": {
                            "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                            "enum": [
                                "METERED",
                                "UNMETERED"
                            ],
                            "type": "string"
                        },
                        "customerArtifactPaths": {
                            "description": "Input <code>CustomerArtifactPaths</code> object for the scheduled run configuration.",
                            "properties": {
                                "androidPaths": {
                                    "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "deviceHostPaths": {
                                    "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "iosPaths": {
                                    "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "extraDataPackageArn": {
                            "description": "The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm will extract to external data for Android or the app's sandbox for iOS.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "locale": {
                            "description": "Information about the locale that is used for the run.",
                            "type": "string"
                        },
                        "location": {
                            "description": "Information about the location that is used for the run.",
                            "properties": {
                                "latitude": {
                                    "description": "The latitude.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "longitude": {
                                    "description": "The longitude.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "latitude",
                                "longitude"
                            ],
                            "type": "object"
                        },
                        "networkProfileArn": {
                            "description": "Reserved for internal use.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "radios": {
                            "description": "Information about the radio states for the run.",
                            "properties": {
                                "bluetooth": {
                                    "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                    "type": "boolean"
                                },
                                "gps": {
                                    "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                    "type": "boolean"
                                },
                                "nfc": {
                                    "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                    "type": "boolean"
                                },
                                "wifi": {
                                    "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "vpceConfigurationArns": {
                            "description": "An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.",
                            "items": {
                                "minLength": 32,
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "devicePoolArn": {
                    "description": "The ARN of the device pool for the run to be scheduled.",
                    "minLength": 32,
                    "type": "string"
                },
                "deviceSelectionConfiguration": {
                    "description": "<p>The filter criteria used to dynamically select a set of devices for a test run, as well as the maximum number of devices to be included in the run.</p> <p>Either <b> <code>devicePoolArn</code> </b> or <b> <code>deviceSelectionConfiguration</code> </b> is required in a request.</p>",
                    "properties": {
                        "filters": {
                            "description": "<p>Used to dynamically select a set of devices for a test run. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p> <b>Attribute</b> </p> <p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> </li> <li> <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> </li> <li> <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p> </li> <li> <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> </li> <li> <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> <li> <p> <b>Operator</b> </p> <p>The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p> <b>Values</b> </p> <p>An array of one or more filter values.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> </ul>",
                            "items": {
                                "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                "properties": {
                                    "attribute": {
                                        "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                        "enum": [
                                            "ARN",
                                            "PLATFORM",
                                            "OS_VERSION",
                                            "MODEL",
                                            "AVAILABILITY",
                                            "FORM_FACTOR",
                                            "MANUFACTURER",
                                            "REMOTE_ACCESS_ENABLED",
                                            "REMOTE_DEBUG_ENABLED",
                                            "INSTANCE_ARN",
                                            "INSTANCE_LABELS",
                                            "FLEET_TYPE"
                                        ],
                                        "type": "string"
                                    },
                                    "operator": {
                                        "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                        "enum": [
                                            "EQUALS",
                                            "LESS_THAN",
                                            "LESS_THAN_OR_EQUALS",
                                            "GREATER_THAN",
                                            "GREATER_THAN_OR_EQUALS",
                                            "IN",
                                            "NOT_IN",
                                            "CONTAINS"
                                        ],
                                        "type": "string"
                                    },
                                    "values": {
                                        "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "maxDevices": {
                            "description": "The maximum number of devices to be included in a test run.",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "filters",
                        "maxDevices"
                    ],
                    "type": "object"
                },
                "executionConfiguration": {
                    "description": "Specifies configuration information about a test run, such as the execution timeout (in minutes).",
                    "properties": {
                        "accountsCleanup": {
                            "description": "True if account cleanup is enabled at the beginning of the test; otherwise, false.",
                            "type": "boolean"
                        },
                        "appPackagesCleanup": {
                            "description": "True if app package cleanup is enabled at the beginning of the test; otherwise, false.",
                            "type": "boolean"
                        },
                        "jobTimeoutMinutes": {
                            "description": "The number of minutes a test run will execute before it times out.",
                            "type": "integer"
                        },
                        "skipAppResign": {
                            "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                            "type": "boolean"
                        },
                        "videoCapture": {
                            "description": "Set to true to enable video capture; otherwise, set to false. The default is true.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "name": {
                    "description": "The name for the run to be scheduled.",
                    "maxLength": 256,
                    "minLength": 0,
                    "type": "string"
                },
                "projectArn": {
                    "description": "The ARN of the project for the run to be scheduled.",
                    "minLength": 32,
                    "type": "string"
                },
                "test": {
                    "description": "Information about the test for the run to be scheduled.",
                    "properties": {
                        "filter": {
                            "description": "The test's filter.",
                            "maxLength": 8192,
                            "minLength": 0,
                            "type": "string"
                        },
                        "parameters": {
                            "description": "<p>The test's parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.</p> <p>For all tests:</p> <ul> <li> <p>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to \"false\" to disable it.</p> </li> </ul> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile, for example, \"my_profile_name\".</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don't have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are \"1.6.5\" (and higher), \"latest\", and \"default\".</p> <ul> <li> <p>“latest” will run the latest Appium version supported by Device Farm (1.9.1).</p> </li> <li> <p>For “default”, Device Farm will choose a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For Fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A username to use if the Explorer encounters a login form. If not supplied, no username will be inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password will be inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: \"LoginTests\"</p> </li> <li> <p>Running a multiple test classes: \"LoginTests,SmokeTests\"</p> </li> <li> <p>Running a single test: \"LoginTests/testValid\"</p> </li> <li> <p>Running multiple tests: \"LoginTests/testValid,LoginTests/testInvalid\"</p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul>",
                            "items": {
                                "properties": {
                                    "key": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "testPackageArn": {
                            "description": "The ARN of the uploaded test that will be run.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "testSpecArn": {
                            "description": "The ARN of the YAML-formatted test specification.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "type": {
                            "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                            "enum": [
                                "BUILTIN_FUZZ",
                                "BUILTIN_EXPLORER",
                                "WEB_PERFORMANCE_PROFILE",
                                "APPIUM_JAVA_JUNIT",
                                "APPIUM_JAVA_TESTNG",
                                "APPIUM_PYTHON",
                                "APPIUM_NODE",
                                "APPIUM_RUBY",
                                "APPIUM_WEB_JAVA_JUNIT",
                                "APPIUM_WEB_JAVA_TESTNG",
                                "APPIUM_WEB_PYTHON",
                                "APPIUM_WEB_NODE",
                                "APPIUM_WEB_RUBY",
                                "CALABASH",
                                "INSTRUMENTATION",
                                "UIAUTOMATION",
                                "UIAUTOMATOR",
                                "XCTEST",
                                "XCTEST_UI",
                                "REMOTE_ACCESS_RECORD",
                                "REMOTE_ACCESS_REPLAY"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "projectArn",
                "test"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}