{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://devicefarm.amazonaws.com/"
        },
        {
            "url": "http://devicefarm.amazonaws.com/"
        }
    ],
    "x-hasEquivalentPaths": true,
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "AWS Device Farm is a service that enables mobile app developers to test Android, iOS, and Fire OS apps on physical phones, tablets, and other devices in the cloud.",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "AWS Device Farm",
        "version": "2015-06-23",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/devicefarm-2015-06-23.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "devicefarm"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/devicefarm/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a device pool.",
                "operationId": "CreateDevicePool",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a create device pool request.",
                                    "example": {
                                        "devicePool": {}
                                    },
                                    "properties": {
                                        "devicePool": {
                                            "description": "The newly created device pool.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The device pool's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The device pool's description.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "maxDevices": {
                                                    "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "The device pool's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "rules": {
                                                    "description": "Information about the device pool's rules.",
                                                    "items": {
                                                        "description": "Represents a condition for a device pool.",
                                                        "properties": {
                                                            "attribute": {
                                                                "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                                "enum": [
                                                                    "ARN",
                                                                    "PLATFORM",
                                                                    "FORM_FACTOR",
                                                                    "MANUFACTURER",
                                                                    "REMOTE_ACCESS_ENABLED",
                                                                    "REMOTE_DEBUG_ENABLED",
                                                                    "APPIUM_VERSION",
                                                                    "INSTANCE_ARN",
                                                                    "INSTANCE_LABELS",
                                                                    "FLEET_TYPE",
                                                                    "OS_VERSION",
                                                                    "MODEL",
                                                                    "AVAILABILITY"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "operator": {
                                                                "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                                "enum": [
                                                                    "EQUALS",
                                                                    "LESS_THAN",
                                                                    "LESS_THAN_OR_EQUALS",
                                                                    "GREATER_THAN",
                                                                    "GREATER_THAN_OR_EQUALS",
                                                                    "IN",
                                                                    "NOT_IN",
                                                                    "CONTAINS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "description": "The rule's value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the create device pool operation.",
                                "example": {
                                    "description": "My Android devices",
                                    "name": "MyDevicePool",
                                    "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                                    "rules": []
                                },
                                "properties": {
                                    "description": {
                                        "description": "The device pool's description.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "maxDevices": {
                                        "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "The device pool's name.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "projectArn": {
                                        "description": "The ARN of the project for the device pool.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "rules": {
                                        "description": "The device pool's rules.",
                                        "items": {
                                            "description": "Represents a condition for a device pool.",
                                            "properties": {
                                                "attribute": {
                                                    "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                    "enum": [
                                                        "ARN",
                                                        "PLATFORM",
                                                        "FORM_FACTOR",
                                                        "MANUFACTURER",
                                                        "REMOTE_ACCESS_ENABLED",
                                                        "REMOTE_DEBUG_ENABLED",
                                                        "APPIUM_VERSION",
                                                        "INSTANCE_ARN",
                                                        "INSTANCE_LABELS",
                                                        "FLEET_TYPE",
                                                        "OS_VERSION",
                                                        "MODEL",
                                                        "AVAILABILITY"
                                                    ],
                                                    "type": "string"
                                                },
                                                "operator": {
                                                    "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                    "enum": [
                                                        "EQUALS",
                                                        "LESS_THAN",
                                                        "LESS_THAN_OR_EQUALS",
                                                        "GREATER_THAN",
                                                        "GREATER_THAN_OR_EQUALS",
                                                        "IN",
                                                        "NOT_IN",
                                                        "CONTAINS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The rule's value.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "projectArn",
                                    "name",
                                    "rules"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateInstanceProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a profile that can be applied to one or more private fleet device instances.",
                "operationId": "CreateInstanceProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "instanceProfile": {
                                            "description": "An object containing information about your instance profile.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the instance profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "excludeAppPackagesFromCleanup": {
                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the instance profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "packageCleanup": {
                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                    "type": "boolean"
                                                },
                                                "rebootAfterUse": {
                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "description": "The description of your instance profile.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "excludeAppPackagesFromCleanup": {
                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "The name of your instance profile.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "packageCleanup": {
                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                        "type": "boolean"
                                    },
                                    "rebootAfterUse": {
                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateNetworkProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a network profile.",
                "operationId": "CreateNetworkProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "networkProfile": {
                                            "description": "The network profile that is returned by the create network profile request.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the network profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the network profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "downlinkBandwidthBits": {
                                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                    "type": "integer"
                                                },
                                                "downlinkDelayMs": {
                                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "downlinkJitterMs": {
                                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "downlinkLossPercent": {
                                                    "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                                    "maximum": 100,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "The name of the network profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "The type of network profile. Valid values are listed below.",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "uplinkBandwidthBits": {
                                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                    "type": "integer"
                                                },
                                                "uplinkDelayMs": {
                                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "uplinkJitterMs": {
                                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "uplinkLossPercent": {
                                                    "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                                    "maximum": 100,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "description": "The description of the network profile.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "downlinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "downlinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkLossPercent": {
                                        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "The name you wish to specify for the new network profile.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "projectArn": {
                                        "description": "The Amazon Resource Name (ARN) of the project for which you want to create a network profile.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "The type of network profile you wish to create. Valid values are listed below.",
                                        "enum": [
                                            "CURATED",
                                            "PRIVATE"
                                        ],
                                        "type": "string"
                                    },
                                    "uplinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "uplinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkLossPercent": {
                                        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "projectArn",
                                    "name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateProject": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new project.",
                "operationId": "CreateProject",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a create project request.",
                                    "example": {
                                        "project": {
                                            "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE",
                                            "created": "1472660939.152",
                                            "name": "MyProject"
                                        }
                                    },
                                    "properties": {
                                        "project": {
                                            "description": "The newly created project.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The project's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "When the project was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "defaultJobTimeoutMinutes": {
                                                    "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "The project's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the create project operation.",
                                "example": {
                                    "name": "MyProject"
                                },
                                "properties": {
                                    "defaultJobTimeoutMinutes": {
                                        "description": "Sets the execution timeout value (in minutes) for a project. All test runs in this project will use the specified execution timeout value unless overridden when scheduling a run.",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "The project's name.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateRemoteAccessSession": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Specifies and starts a remote access session.",
                "operationId": "CreateRemoteAccessSession",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the server response from a request to create a remote access session.",
                                    "example": {
                                        "remoteAccessSession": {}
                                    },
                                    "properties": {
                                        "remoteAccessSession": {
                                            "description": "A container that describes the remote access session when the request to create a remote access session is sent.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the remote access session.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "billingMethod": {
                                                    "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                                                    "enum": [
                                                        "METERED",
                                                        "UNMETERED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "clientId": {
                                                    "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "The date and time the remote access session was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "device": {
                                                    "description": "The device (phone or tablet) used in the remote access session.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The device's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "availability": {
                                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                            "enum": [
                                                                "TEMPORARY_NOT_AVAILABLE",
                                                                "BUSY",
                                                                "AVAILABLE",
                                                                "HIGHLY_AVAILABLE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "carrier": {
                                                            "description": "The device's carrier.",
                                                            "type": "string"
                                                        },
                                                        "cpu": {
                                                            "description": "Information about the device's CPU.",
                                                            "properties": {
                                                                "architecture": {
                                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                                    "type": "string"
                                                                },
                                                                "clock": {
                                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "frequency": {
                                                                    "description": "The CPU's frequency.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "fleetName": {
                                                            "description": "The name of the fleet to which this device belongs.",
                                                            "type": "string"
                                                        },
                                                        "fleetType": {
                                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                            "type": "string"
                                                        },
                                                        "formFactor": {
                                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                            "enum": [
                                                                "PHONE",
                                                                "TABLET"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "heapSize": {
                                                            "description": "The device's heap size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "image": {
                                                            "description": "The device's image name.",
                                                            "type": "string"
                                                        },
                                                        "instances": {
                                                            "description": "The instances belonging to this device.",
                                                            "items": {
                                                                "description": "Represents the device instance.",
                                                                "properties": {
                                                                    "arn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "deviceArn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "instanceProfile": {
                                                                        "description": "A object containing information about the instance profile.",
                                                                        "properties": {
                                                                            "arn": {
                                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                "minLength": 32,
                                                                                "type": "string"
                                                                            },
                                                                            "description": {
                                                                                "description": "The description of the instance profile.",
                                                                                "maxLength": 16384,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "excludeAppPackagesFromCleanup": {
                                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "name": {
                                                                                "description": "The name of the instance profile.",
                                                                                "maxLength": 256,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "packageCleanup": {
                                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "rebootAfterUse": {
                                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "An array of strings describing the device instance.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "status": {
                                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                                        "enum": [
                                                                            "IN_USE",
                                                                            "PREPARING",
                                                                            "AVAILABLE",
                                                                            "NOT_AVAILABLE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "udid": {
                                                                        "description": "Unique device identifier for the device instance.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "manufacturer": {
                                                            "description": "The device's manufacturer name.",
                                                            "type": "string"
                                                        },
                                                        "memory": {
                                                            "description": "The device's total memory size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "model": {
                                                            "description": "The device's model name.",
                                                            "type": "string"
                                                        },
                                                        "modelId": {
                                                            "description": "The device's model ID.",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The device's display name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "os": {
                                                            "description": "The device's operating system type.",
                                                            "type": "string"
                                                        },
                                                        "platform": {
                                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                            "enum": [
                                                                "ANDROID",
                                                                "IOS"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "radio": {
                                                            "description": "The device's radio.",
                                                            "type": "string"
                                                        },
                                                        "remoteAccessEnabled": {
                                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                                            "type": "boolean"
                                                        },
                                                        "remoteDebugEnabled": {
                                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                            "type": "boolean"
                                                        },
                                                        "resolution": {
                                                            "description": "The resolution of the device.",
                                                            "properties": {
                                                                "height": {
                                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                                    "type": "integer"
                                                                },
                                                                "width": {
                                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceMinutes": {
                                                    "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceUdid": {
                                                    "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                                                    "type": "string"
                                                },
                                                "endpoint": {
                                                    "description": "The endpoint for the remote access sesssion.",
                                                    "type": "string"
                                                },
                                                "hostAddress": {
                                                    "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                                                    "maxLength": 1024,
                                                    "type": "string"
                                                },
                                                "instanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "interactionMode": {
                                                    "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                                                    "enum": [
                                                        "INTERACTIVE",
                                                        "NO_VIDEO",
                                                        "VIDEO_ONLY"
                                                    ],
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "A message about the remote access session.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the remote access session.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "remoteDebugEnabled": {
                                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                                                    "type": "boolean"
                                                },
                                                "remoteRecordAppArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "remoteRecordEnabled": {
                                                    "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                                                    "type": "boolean"
                                                },
                                                "result": {
                                                    "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "skipAppResign": {
                                                    "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                    "type": "boolean"
                                                },
                                                "started": {
                                                    "description": "The date and time the remote access session was started.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The date and time the remote access session was stopped.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Creates and submits a request to start a remote access session.",
                                "example": {
                                    "configuration": {
                                        "billingMethod": "METERED"
                                    },
                                    "deviceArn": "arn:aws:devicefarm:us-west-2::device:123EXAMPLE",
                                    "name": "MySession",
                                    "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "clientId": {
                                        "description": "Unique identifier for the client. If you want access to multiple devices on the same client, you should pass the same <code>clientId</code> value in each call to <code>CreateRemoteAccessSession</code>. This is required only if <code>remoteDebugEnabled</code> is set to <code>true</code>.",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "configuration": {
                                        "description": "The configuration information for the remote access session request.",
                                        "properties": {
                                            "billingMethod": {
                                                "description": "The billing method for the remote access session.",
                                                "enum": [
                                                    "METERED",
                                                    "UNMETERED"
                                                ],
                                                "type": "string"
                                            },
                                            "vpceConfigurationArns": {
                                                "description": "An array of Amazon Resource Names (ARNs) included in the VPC endpoint configuration.",
                                                "items": {
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "deviceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the device for which you want to create a remote access session.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "instanceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the device instance for which you want to create a remote access session.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "interactionMode": {
                                        "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                                        "enum": [
                                            "INTERACTIVE",
                                            "NO_VIDEO",
                                            "VIDEO_ONLY"
                                        ],
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The name of the remote access session that you wish to create.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "projectArn": {
                                        "description": "The Amazon Resource Name (ARN) of the project for which you want to create a remote access session.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "remoteDebugEnabled": {
                                        "description": "Set to <code>true</code> if you want to access devices remotely for debugging in your remote access session.",
                                        "type": "boolean"
                                    },
                                    "remoteRecordAppArn": {
                                        "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "remoteRecordEnabled": {
                                        "description": "Set to <code>true</code> to enable remote recording for the remote access session.",
                                        "type": "boolean"
                                    },
                                    "skipAppResign": {
                                        "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                        "type": "boolean"
                                    },
                                    "sshPublicKey": {
                                        "description": "The public key of the <code>ssh</code> key pair you want to use for connecting to remote devices in your remote debugging session. This is only required if <code>remoteDebugEnabled</code> is set to <code>true</code>.",
                                        "maxLength": 8192,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "projectArn",
                                    "deviceArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateUpload": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Uploads an app or test scripts.",
                "operationId": "CreateUpload",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a create upload request.",
                                    "example": {
                                        "upload": {
                                            "arn": "arn:aws:devicefarm:us-west-2:123456789101:upload:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE",
                                            "created": "1472661404.186",
                                            "name": "MyAppiumPythonUpload",
                                            "status": "INITIALIZED",
                                            "type": "APPIUM_PYTHON_TEST_PACKAGE",
                                            "url": "https://prod-us-west-2-uploads.s3-us-west-2.amazonaws.com/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aproject%3A5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE/uploads/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aupload%3A5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE/MyAppiumPythonUpload?AWSAccessKeyId=1234567891011EXAMPLE&Expires=1472747804&Signature=1234567891011EXAMPLE"
                                        }
                                    },
                                    "properties": {
                                        "upload": {
                                            "description": "The newly created upload.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The upload's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "category": {
                                                    "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "contentType": {
                                                    "description": "The upload's content type (for example, \"application/octet-stream\").",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "When the upload was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "A message about the upload's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                                    "maxLength": 8192,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The upload's file name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                                    "enum": [
                                                        "INITIALIZED",
                                                        "PROCESSING",
                                                        "SUCCEEDED",
                                                        "FAILED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                                    "enum": [
                                                        "ANDROID_APP",
                                                        "IOS_APP",
                                                        "WEB_APP",
                                                        "EXTERNAL_DATA",
                                                        "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                                        "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                                        "APPIUM_PYTHON_TEST_PACKAGE",
                                                        "APPIUM_NODE_TEST_PACKAGE",
                                                        "APPIUM_RUBY_TEST_PACKAGE",
                                                        "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                                        "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                                        "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                                        "APPIUM_WEB_NODE_TEST_PACKAGE",
                                                        "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                                        "CALABASH_TEST_PACKAGE",
                                                        "INSTRUMENTATION_TEST_PACKAGE",
                                                        "UIAUTOMATION_TEST_PACKAGE",
                                                        "UIAUTOMATOR_TEST_PACKAGE",
                                                        "XCTEST_TEST_PACKAGE",
                                                        "XCTEST_UI_TEST_PACKAGE",
                                                        "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                                        "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                                        "APPIUM_PYTHON_TEST_SPEC",
                                                        "APPIUM_NODE_TEST_SPEC",
                                                        "APPIUM_RUBY_TEST_SPEC",
                                                        "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                                        "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                                        "APPIUM_WEB_PYTHON_TEST_SPEC",
                                                        "APPIUM_WEB_NODE_TEST_SPEC",
                                                        "APPIUM_WEB_RUBY_TEST_SPEC",
                                                        "INSTRUMENTATION_TEST_SPEC",
                                                        "XCTEST_UI_TEST_SPEC"
                                                    ],
                                                    "type": "string"
                                                },
                                                "url": {
                                                    "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the create upload operation.",
                                "example": {
                                    "name": "MyAppiumPythonUpload",
                                    "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                                    "type": "APPIUM_PYTHON_TEST_PACKAGE"
                                },
                                "properties": {
                                    "contentType": {
                                        "description": "The upload's content type (for example, \"application/octet-stream\").",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The upload's file name. The name should not contain the '/' character. If uploading an iOS app, the file name needs to end with the <code>.ipa</code> extension. If uploading an Android app, the file name needs to end with the <code>.apk</code> extension. For all others, the file name must end with the <code>.zip</code> file extension.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "projectArn": {
                                        "description": "The ARN of the project for the upload.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "<p>The upload's upload type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web application upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for a web app.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul> <p> <b>Note</b> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified, AWS Device Farm throws an <code>ArgumentException</code> error.</p>",
                                        "enum": [
                                            "ANDROID_APP",
                                            "IOS_APP",
                                            "WEB_APP",
                                            "EXTERNAL_DATA",
                                            "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                            "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                            "APPIUM_PYTHON_TEST_PACKAGE",
                                            "APPIUM_NODE_TEST_PACKAGE",
                                            "APPIUM_RUBY_TEST_PACKAGE",
                                            "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                            "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                            "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                            "APPIUM_WEB_NODE_TEST_PACKAGE",
                                            "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                            "CALABASH_TEST_PACKAGE",
                                            "INSTRUMENTATION_TEST_PACKAGE",
                                            "UIAUTOMATION_TEST_PACKAGE",
                                            "UIAUTOMATOR_TEST_PACKAGE",
                                            "XCTEST_TEST_PACKAGE",
                                            "XCTEST_UI_TEST_PACKAGE",
                                            "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                            "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                            "APPIUM_PYTHON_TEST_SPEC",
                                            "APPIUM_NODE_TEST_SPEC",
                                            "APPIUM_RUBY_TEST_SPEC",
                                            "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                            "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                            "APPIUM_WEB_PYTHON_TEST_SPEC",
                                            "APPIUM_WEB_NODE_TEST_SPEC",
                                            "APPIUM_WEB_RUBY_TEST_SPEC",
                                            "INSTRUMENTATION_TEST_SPEC",
                                            "XCTEST_UI_TEST_SPEC"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "projectArn",
                                    "name",
                                    "type"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#CreateVPCEConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a configuration record in Device Farm for your Amazon Virtual Private Cloud (VPC) endpoint.",
                "operationId": "CreateVPCEConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vpceConfiguration": {
                                            "description": "An object containing information about your VPC endpoint configuration.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "serviceDnsName": {
                                                    "description": "The DNS name that maps to the private IP address of the service you want to access.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "vpceConfigurationDescription": {
                                                    "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "vpceConfigurationName": {
                                                    "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                                    "maxLength": 1024,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "vpceServiceName": {
                                                    "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "serviceDnsName": {
                                        "description": "The DNS name of the service running in your VPC that you want Device Farm to test.",
                                        "maxLength": 2048,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "vpceConfigurationDescription": {
                                        "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                        "maxLength": 2048,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "vpceConfigurationName": {
                                        "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                        "maxLength": 1024,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "vpceServiceName": {
                                        "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                        "maxLength": 2048,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "vpceConfigurationName",
                                    "vpceServiceName",
                                    "serviceDnsName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteDevicePool": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a device pool given the pool ARN. Does not allow deletion of curated pools owned by the system.",
                "operationId": "DeleteDevicePool",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a delete device pool request.",
                                    "example": {},
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the delete device pool operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2::devicepool:123-456-EXAMPLE-GUID"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm device pool you wish to delete.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteInstanceProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a profile that can be applied to one or more private device instances.",
                "operationId": "DeleteInstanceProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the instance profile you are requesting to delete.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteNetworkProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a network profile.",
                "operationId": "DeleteNetworkProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the network profile you want to delete.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteProject": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes an AWS Device Farm project, given the project ARN.</p> <p> <b>Note</b> Deleting this resource does not stop an in-progress run.</p>",
                "operationId": "DeleteProject",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a delete project request.",
                                    "example": {},
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the delete project operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm project you wish to delete.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteRemoteAccessSession": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a completed remote access session and its results.",
                "operationId": "DeleteRemoteAccessSession",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The response from the server when a request is made to delete the remote access session.",
                                    "example": {},
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request to delete the specified remote access session.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the sesssion for which you want to delete remote access.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteRun": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes the run, given the run ARN.</p> <p> <b>Note</b> Deleting this resource does not stop an in-progress run.</p>",
                "operationId": "DeleteRun",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a delete run request.",
                                    "example": {},
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the delete run operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) for the run you wish to delete.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteUpload": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes an upload given the upload ARN.",
                "operationId": "DeleteUpload",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a delete upload request.",
                                    "example": {},
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the delete upload operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:upload:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm upload you wish to delete.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#DeleteVPCEConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Deletes a configuration for your Amazon Virtual Private Cloud (VPC) endpoint.",
                "operationId": "DeleteVPCEConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to delete.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetAccountSettings": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns the number of unmetered iOS and/or unmetered Android devices that have been purchased by the account.",
                "operationId": "GetAccountSettings",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the account settings return values from the <code>GetAccountSettings</code> request.",
                                    "example": {
                                        "accountSettings": {
                                            "awsAccountNumber": "123456789101",
                                            "unmeteredDevices": {
                                                "ANDROID": 1,
                                                "IOS": 2
                                            }
                                        }
                                    },
                                    "properties": {
                                        "accountSettings": {
                                            "description": "The account settings.",
                                            "properties": {
                                                "awsAccountNumber": {
                                                    "description": "The AWS account number specified in the <code>AccountSettings</code> container.",
                                                    "maxLength": 16,
                                                    "minLength": 2,
                                                    "type": "string"
                                                },
                                                "defaultJobTimeoutMinutes": {
                                                    "description": "The default number of minutes (at the account level) a test run will execute before it times out. Default value is 60 minutes.",
                                                    "type": "integer"
                                                },
                                                "maxJobTimeoutMinutes": {
                                                    "description": "The maximum number of minutes a test run will execute before it times out.",
                                                    "type": "integer"
                                                },
                                                "maxSlots": {
                                                    "description": "The maximum number of device slots that the AWS account can purchase. Each maximum is expressed as an <code>offering-id:number</code> pair, where the <code>offering-id</code> represents one of the IDs returned by the <code>ListOfferings</code> command.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "skipAppResign": {
                                                    "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                    "type": "boolean"
                                                },
                                                "trialMinutes": {
                                                    "description": "Information about an AWS account's usage of free trial device minutes.",
                                                    "properties": {
                                                        "remaining": {
                                                            "description": "The number of free trial minutes remaining in the account.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "The total number of free trial minutes that the account started with.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "unmeteredDevices": {
                                                    "description": "Returns the unmetered devices you have purchased or want to purchase.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "enum": [
                                                                    "ANDROID",
                                                                    "IOS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "unmeteredRemoteAccessDevices": {
                                                    "description": "Returns the unmetered remote access devices you have purchased or want to purchase.",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "enum": [
                                                                    "ANDROID",
                                                                    "IOS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request sent to retrieve the account settings.",
                                "example": {},
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetDevice": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about a unique device type.",
                "operationId": "GetDevice",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a get device request.",
                                    "example": {
                                        "device": {
                                            "arn": "arn:aws:devicefarm:us-west-2::device:A0E6E6E1059E45918208DF75B2B7EF6C",
                                            "cpu": {
                                                "architecture": "armeabi-v7a",
                                                "clock": 2265.6,
                                                "frequency": "MHz"
                                            },
                                            "formFactor": "PHONE",
                                            "heapSize": 256000000,
                                            "image": "75B2B7EF6C12345EXAMPLE",
                                            "manufacturer": "LG",
                                            "memory": 16000000000,
                                            "model": "G2 (Sprint)",
                                            "name": "LG G2 (Sprint)",
                                            "os": "4.2.2",
                                            "platform": "ANDROID",
                                            "resolution": {
                                                "height": 1920,
                                                "width": 1080
                                            }
                                        }
                                    },
                                    "properties": {
                                        "device": {
                                            "description": "An object containing information about the requested device.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The device's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "availability": {
                                                    "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                    "enum": [
                                                        "TEMPORARY_NOT_AVAILABLE",
                                                        "BUSY",
                                                        "AVAILABLE",
                                                        "HIGHLY_AVAILABLE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "carrier": {
                                                    "description": "The device's carrier.",
                                                    "type": "string"
                                                },
                                                "cpu": {
                                                    "description": "Information about the device's CPU.",
                                                    "properties": {
                                                        "architecture": {
                                                            "description": "The CPU's architecture, for example x86 or ARM.",
                                                            "type": "string"
                                                        },
                                                        "clock": {
                                                            "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "frequency": {
                                                            "description": "The CPU's frequency.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "fleetName": {
                                                    "description": "The name of the fleet to which this device belongs.",
                                                    "type": "string"
                                                },
                                                "fleetType": {
                                                    "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                    "type": "string"
                                                },
                                                "formFactor": {
                                                    "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                    "enum": [
                                                        "PHONE",
                                                        "TABLET"
                                                    ],
                                                    "type": "string"
                                                },
                                                "heapSize": {
                                                    "description": "The device's heap size, expressed in bytes.",
                                                    "type": "integer"
                                                },
                                                "image": {
                                                    "description": "The device's image name.",
                                                    "type": "string"
                                                },
                                                "instances": {
                                                    "description": "The instances belonging to this device.",
                                                    "items": {
                                                        "description": "Represents the device instance.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "deviceArn": {
                                                                "description": "The Amazon Resource Name (ARN) of the device.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "instanceProfile": {
                                                                "description": "A object containing information about the instance profile.",
                                                                "properties": {
                                                                    "arn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "description": {
                                                                        "description": "The description of the instance profile.",
                                                                        "maxLength": 16384,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "excludeAppPackagesFromCleanup": {
                                                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the instance profile.",
                                                                        "maxLength": 256,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "packageCleanup": {
                                                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "rebootAfterUse": {
                                                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "labels": {
                                                                "description": "An array of strings describing the device instance.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "status": {
                                                                "description": "The status of the device instance. Valid values are listed below.",
                                                                "enum": [
                                                                    "IN_USE",
                                                                    "PREPARING",
                                                                    "AVAILABLE",
                                                                    "NOT_AVAILABLE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "udid": {
                                                                "description": "Unique device identifier for the device instance.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "manufacturer": {
                                                    "description": "The device's manufacturer name.",
                                                    "type": "string"
                                                },
                                                "memory": {
                                                    "description": "The device's total memory size, expressed in bytes.",
                                                    "type": "integer"
                                                },
                                                "model": {
                                                    "description": "The device's model name.",
                                                    "type": "string"
                                                },
                                                "modelId": {
                                                    "description": "The device's model ID.",
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The device's display name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "os": {
                                                    "description": "The device's operating system type.",
                                                    "type": "string"
                                                },
                                                "platform": {
                                                    "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                    "enum": [
                                                        "ANDROID",
                                                        "IOS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "radio": {
                                                    "description": "The device's radio.",
                                                    "type": "string"
                                                },
                                                "remoteAccessEnabled": {
                                                    "description": "Specifies whether remote access has been enabled for the specified device.",
                                                    "type": "boolean"
                                                },
                                                "remoteDebugEnabled": {
                                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                    "type": "boolean"
                                                },
                                                "resolution": {
                                                    "description": "The resolution of the device.",
                                                    "properties": {
                                                        "height": {
                                                            "description": "The screen resolution's height, expressed in pixels.",
                                                            "type": "integer"
                                                        },
                                                        "width": {
                                                            "description": "The screen resolution's width, expressed in pixels.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the get device request.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2::device:123EXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The device type's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetDeviceInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about a device instance belonging to a private device fleet.",
                "operationId": "GetDeviceInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "deviceInstance": {
                                            "description": "An object containing information about your device instance.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "instanceProfile": {
                                                    "description": "A object containing information about the instance profile.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the instance profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "excludeAppPackagesFromCleanup": {
                                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the instance profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "packageCleanup": {
                                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                            "type": "boolean"
                                                        },
                                                        "rebootAfterUse": {
                                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "labels": {
                                                    "description": "An array of strings describing the device instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "status": {
                                                    "description": "The status of the device instance. Valid values are listed below.",
                                                    "enum": [
                                                        "IN_USE",
                                                        "PREPARING",
                                                        "AVAILABLE",
                                                        "NOT_AVAILABLE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "udid": {
                                                    "description": "Unique device identifier for the device instance.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the instance you're requesting information about.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetDevicePool": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about a device pool.",
                "operationId": "GetDevicePool",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a get device pool request.",
                                    "example": {
                                        "devicePool": {}
                                    },
                                    "properties": {
                                        "devicePool": {
                                            "description": "An object containing information about the requested device pool.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The device pool's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The device pool's description.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "maxDevices": {
                                                    "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "The device pool's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "rules": {
                                                    "description": "Information about the device pool's rules.",
                                                    "items": {
                                                        "description": "Represents a condition for a device pool.",
                                                        "properties": {
                                                            "attribute": {
                                                                "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                                "enum": [
                                                                    "ARN",
                                                                    "PLATFORM",
                                                                    "FORM_FACTOR",
                                                                    "MANUFACTURER",
                                                                    "REMOTE_ACCESS_ENABLED",
                                                                    "REMOTE_DEBUG_ENABLED",
                                                                    "APPIUM_VERSION",
                                                                    "INSTANCE_ARN",
                                                                    "INSTANCE_LABELS",
                                                                    "FLEET_TYPE",
                                                                    "OS_VERSION",
                                                                    "MODEL",
                                                                    "AVAILABILITY"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "operator": {
                                                                "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                                "enum": [
                                                                    "EQUALS",
                                                                    "LESS_THAN",
                                                                    "LESS_THAN_OR_EQUALS",
                                                                    "GREATER_THAN",
                                                                    "GREATER_THAN_OR_EQUALS",
                                                                    "IN",
                                                                    "NOT_IN",
                                                                    "CONTAINS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "description": "The rule's value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the get device pool operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The device pool's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetDevicePoolCompatibility": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about compatibility with a device pool.",
                "operationId": "GetDevicePoolCompatibility",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of describe device pool compatibility request.",
                                    "example": {
                                        "compatibleDevices": [],
                                        "incompatibleDevices": []
                                    },
                                    "properties": {
                                        "compatibleDevices": {
                                            "description": "Information about compatible devices.",
                                            "items": {
                                                "description": "Represents a device pool compatibility result.",
                                                "properties": {
                                                    "compatible": {
                                                        "description": "Whether the result was compatible with the device pool.",
                                                        "type": "boolean"
                                                    },
                                                    "device": {
                                                        "description": "The device (phone or tablet) that you wish to return information about.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The device's ARN.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "availability": {
                                                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                                "enum": [
                                                                    "TEMPORARY_NOT_AVAILABLE",
                                                                    "BUSY",
                                                                    "AVAILABLE",
                                                                    "HIGHLY_AVAILABLE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "carrier": {
                                                                "description": "The device's carrier.",
                                                                "type": "string"
                                                            },
                                                            "cpu": {
                                                                "description": "Information about the device's CPU.",
                                                                "properties": {
                                                                    "architecture": {
                                                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                                                        "type": "string"
                                                                    },
                                                                    "clock": {
                                                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "frequency": {
                                                                        "description": "The CPU's frequency.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "fleetName": {
                                                                "description": "The name of the fleet to which this device belongs.",
                                                                "type": "string"
                                                            },
                                                            "fleetType": {
                                                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                                "type": "string"
                                                            },
                                                            "formFactor": {
                                                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                                "enum": [
                                                                    "PHONE",
                                                                    "TABLET"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "heapSize": {
                                                                "description": "The device's heap size, expressed in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "image": {
                                                                "description": "The device's image name.",
                                                                "type": "string"
                                                            },
                                                            "instances": {
                                                                "description": "The instances belonging to this device.",
                                                                "items": {
                                                                    "description": "Represents the device instance.",
                                                                    "properties": {
                                                                        "arn": {
                                                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                            "minLength": 32,
                                                                            "type": "string"
                                                                        },
                                                                        "deviceArn": {
                                                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                                                            "minLength": 32,
                                                                            "type": "string"
                                                                        },
                                                                        "instanceProfile": {
                                                                            "description": "A object containing information about the instance profile.",
                                                                            "properties": {
                                                                                "arn": {
                                                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                    "minLength": 32,
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "description": "The description of the instance profile.",
                                                                                    "maxLength": 16384,
                                                                                    "minLength": 0,
                                                                                    "type": "string"
                                                                                },
                                                                                "excludeAppPackagesFromCleanup": {
                                                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The name of the instance profile.",
                                                                                    "maxLength": 256,
                                                                                    "minLength": 0,
                                                                                    "type": "string"
                                                                                },
                                                                                "packageCleanup": {
                                                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "rebootAfterUse": {
                                                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "labels": {
                                                                            "description": "An array of strings describing the device instance.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "status": {
                                                                            "description": "The status of the device instance. Valid values are listed below.",
                                                                            "enum": [
                                                                                "IN_USE",
                                                                                "PREPARING",
                                                                                "AVAILABLE",
                                                                                "NOT_AVAILABLE"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "udid": {
                                                                            "description": "Unique device identifier for the device instance.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "manufacturer": {
                                                                "description": "The device's manufacturer name.",
                                                                "type": "string"
                                                            },
                                                            "memory": {
                                                                "description": "The device's total memory size, expressed in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "model": {
                                                                "description": "The device's model name.",
                                                                "type": "string"
                                                            },
                                                            "modelId": {
                                                                "description": "The device's model ID.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The device's display name.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "os": {
                                                                "description": "The device's operating system type.",
                                                                "type": "string"
                                                            },
                                                            "platform": {
                                                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                                "enum": [
                                                                    "ANDROID",
                                                                    "IOS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "radio": {
                                                                "description": "The device's radio.",
                                                                "type": "string"
                                                            },
                                                            "remoteAccessEnabled": {
                                                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                                                "type": "boolean"
                                                            },
                                                            "remoteDebugEnabled": {
                                                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                                "type": "boolean"
                                                            },
                                                            "resolution": {
                                                                "description": "The resolution of the device.",
                                                                "properties": {
                                                                    "height": {
                                                                        "description": "The screen resolution's height, expressed in pixels.",
                                                                        "type": "integer"
                                                                    },
                                                                    "width": {
                                                                        "description": "The screen resolution's width, expressed in pixels.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "incompatibilityMessages": {
                                                        "description": "Information about the compatibility.",
                                                        "items": {
                                                            "description": "Represents information about incompatibility.",
                                                            "properties": {
                                                                "message": {
                                                                    "description": "A message about the incompatibility.",
                                                                    "maxLength": 16384,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>",
                                                                    "enum": [
                                                                        "ARN",
                                                                        "PLATFORM",
                                                                        "FORM_FACTOR",
                                                                        "MANUFACTURER",
                                                                        "REMOTE_ACCESS_ENABLED",
                                                                        "REMOTE_DEBUG_ENABLED",
                                                                        "APPIUM_VERSION",
                                                                        "INSTANCE_ARN",
                                                                        "INSTANCE_LABELS",
                                                                        "FLEET_TYPE",
                                                                        "OS_VERSION",
                                                                        "MODEL",
                                                                        "AVAILABILITY"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "incompatibleDevices": {
                                            "description": "Information about incompatible devices.",
                                            "items": {
                                                "description": "Represents a device pool compatibility result.",
                                                "properties": {
                                                    "compatible": {
                                                        "description": "Whether the result was compatible with the device pool.",
                                                        "type": "boolean"
                                                    },
                                                    "device": {
                                                        "description": "The device (phone or tablet) that you wish to return information about.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The device's ARN.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "availability": {
                                                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                                "enum": [
                                                                    "TEMPORARY_NOT_AVAILABLE",
                                                                    "BUSY",
                                                                    "AVAILABLE",
                                                                    "HIGHLY_AVAILABLE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "carrier": {
                                                                "description": "The device's carrier.",
                                                                "type": "string"
                                                            },
                                                            "cpu": {
                                                                "description": "Information about the device's CPU.",
                                                                "properties": {
                                                                    "architecture": {
                                                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                                                        "type": "string"
                                                                    },
                                                                    "clock": {
                                                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "frequency": {
                                                                        "description": "The CPU's frequency.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "fleetName": {
                                                                "description": "The name of the fleet to which this device belongs.",
                                                                "type": "string"
                                                            },
                                                            "fleetType": {
                                                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                                "type": "string"
                                                            },
                                                            "formFactor": {
                                                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                                "enum": [
                                                                    "PHONE",
                                                                    "TABLET"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "heapSize": {
                                                                "description": "The device's heap size, expressed in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "image": {
                                                                "description": "The device's image name.",
                                                                "type": "string"
                                                            },
                                                            "instances": {
                                                                "description": "The instances belonging to this device.",
                                                                "items": {
                                                                    "description": "Represents the device instance.",
                                                                    "properties": {
                                                                        "arn": {
                                                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                            "minLength": 32,
                                                                            "type": "string"
                                                                        },
                                                                        "deviceArn": {
                                                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                                                            "minLength": 32,
                                                                            "type": "string"
                                                                        },
                                                                        "instanceProfile": {
                                                                            "description": "A object containing information about the instance profile.",
                                                                            "properties": {
                                                                                "arn": {
                                                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                    "minLength": 32,
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "description": "The description of the instance profile.",
                                                                                    "maxLength": 16384,
                                                                                    "minLength": 0,
                                                                                    "type": "string"
                                                                                },
                                                                                "excludeAppPackagesFromCleanup": {
                                                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The name of the instance profile.",
                                                                                    "maxLength": 256,
                                                                                    "minLength": 0,
                                                                                    "type": "string"
                                                                                },
                                                                                "packageCleanup": {
                                                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "rebootAfterUse": {
                                                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "labels": {
                                                                            "description": "An array of strings describing the device instance.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "status": {
                                                                            "description": "The status of the device instance. Valid values are listed below.",
                                                                            "enum": [
                                                                                "IN_USE",
                                                                                "PREPARING",
                                                                                "AVAILABLE",
                                                                                "NOT_AVAILABLE"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "udid": {
                                                                            "description": "Unique device identifier for the device instance.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "manufacturer": {
                                                                "description": "The device's manufacturer name.",
                                                                "type": "string"
                                                            },
                                                            "memory": {
                                                                "description": "The device's total memory size, expressed in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "model": {
                                                                "description": "The device's model name.",
                                                                "type": "string"
                                                            },
                                                            "modelId": {
                                                                "description": "The device's model ID.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The device's display name.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "os": {
                                                                "description": "The device's operating system type.",
                                                                "type": "string"
                                                            },
                                                            "platform": {
                                                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                                "enum": [
                                                                    "ANDROID",
                                                                    "IOS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "radio": {
                                                                "description": "The device's radio.",
                                                                "type": "string"
                                                            },
                                                            "remoteAccessEnabled": {
                                                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                                                "type": "boolean"
                                                            },
                                                            "remoteDebugEnabled": {
                                                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                                "type": "boolean"
                                                            },
                                                            "resolution": {
                                                                "description": "The resolution of the device.",
                                                                "properties": {
                                                                    "height": {
                                                                        "description": "The screen resolution's height, expressed in pixels.",
                                                                        "type": "integer"
                                                                    },
                                                                    "width": {
                                                                        "description": "The screen resolution's width, expressed in pixels.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "incompatibilityMessages": {
                                                        "description": "Information about the compatibility.",
                                                        "items": {
                                                            "description": "Represents information about incompatibility.",
                                                            "properties": {
                                                                "message": {
                                                                    "description": "A message about the incompatibility.",
                                                                    "maxLength": 16384,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>",
                                                                    "enum": [
                                                                        "ARN",
                                                                        "PLATFORM",
                                                                        "FORM_FACTOR",
                                                                        "MANUFACTURER",
                                                                        "REMOTE_ACCESS_ENABLED",
                                                                        "REMOTE_DEBUG_ENABLED",
                                                                        "APPIUM_VERSION",
                                                                        "INSTANCE_ARN",
                                                                        "INSTANCE_LABELS",
                                                                        "FLEET_TYPE",
                                                                        "OS_VERSION",
                                                                        "MODEL",
                                                                        "AVAILABILITY"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the get device pool compatibility operation.",
                                "example": {
                                    "appArn": "arn:aws:devicefarm:us-west-2::app:123-456-EXAMPLE-GUID",
                                    "devicePoolArn": "arn:aws:devicefarm:us-west-2::devicepool:123-456-EXAMPLE-GUID",
                                    "testType": "APPIUM_PYTHON"
                                },
                                "properties": {
                                    "appArn": {
                                        "description": "The ARN of the app that is associated with the specified device pool.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "configuration": {
                                        "description": "An object containing information about the settings for a run.",
                                        "properties": {
                                            "auxiliaryApps": {
                                                "description": "A list of auxiliary apps for the run.",
                                                "items": {
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "billingMethod": {
                                                "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                                "enum": [
                                                    "METERED",
                                                    "UNMETERED"
                                                ],
                                                "type": "string"
                                            },
                                            "customerArtifactPaths": {
                                                "description": "Input <code>CustomerArtifactPaths</code> object for the scheduled run configuration.",
                                                "properties": {
                                                    "androidPaths": {
                                                        "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "deviceHostPaths": {
                                                        "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "iosPaths": {
                                                        "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "extraDataPackageArn": {
                                                "description": "The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm will extract to external data for Android or the app's sandbox for iOS.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "locale": {
                                                "description": "Information about the locale that is used for the run.",
                                                "type": "string"
                                            },
                                            "location": {
                                                "description": "Information about the location that is used for the run.",
                                                "properties": {
                                                    "latitude": {
                                                        "description": "The latitude.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "longitude": {
                                                        "description": "The longitude.",
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "latitude",
                                                    "longitude"
                                                ],
                                                "type": "object"
                                            },
                                            "networkProfileArn": {
                                                "description": "Reserved for internal use.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "radios": {
                                                "description": "Information about the radio states for the run.",
                                                "properties": {
                                                    "bluetooth": {
                                                        "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                                        "type": "boolean"
                                                    },
                                                    "gps": {
                                                        "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                                        "type": "boolean"
                                                    },
                                                    "nfc": {
                                                        "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                                        "type": "boolean"
                                                    },
                                                    "wifi": {
                                                        "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "vpceConfigurationArns": {
                                                "description": "An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.",
                                                "items": {
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "devicePoolArn": {
                                        "description": "The device pool's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "test": {
                                        "description": "Information about the uploaded test to be run against the device pool.",
                                        "properties": {
                                            "filter": {
                                                "description": "The test's filter.",
                                                "maxLength": 8192,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "parameters": {
                                                "description": "<p>The test's parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.</p> <p>For all tests:</p> <ul> <li> <p>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to \"false\" to disable it.</p> </li> </ul> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile, for example, \"my_profile_name\".</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don't have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are \"1.6.5\" (and higher), \"latest\", and \"default\".</p> <ul> <li> <p>“latest” will run the latest Appium version supported by Device Farm (1.9.1).</p> </li> <li> <p>For “default”, Device Farm will choose a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For Fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A username to use if the Explorer encounters a login form. If not supplied, no username will be inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password will be inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: \"LoginTests\"</p> </li> <li> <p>Running a multiple test classes: \"LoginTests,SmokeTests\"</p> </li> <li> <p>Running a single test: \"LoginTests/testValid\"</p> </li> <li> <p>Running multiple tests: \"LoginTests/testValid,LoginTests/testInvalid\"</p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul>",
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "testPackageArn": {
                                                "description": "The ARN of the uploaded test that will be run.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "testSpecArn": {
                                                "description": "The ARN of the YAML-formatted test specification.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "type": {
                                                "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                "enum": [
                                                    "BUILTIN_FUZZ",
                                                    "BUILTIN_EXPLORER",
                                                    "WEB_PERFORMANCE_PROFILE",
                                                    "APPIUM_JAVA_JUNIT",
                                                    "APPIUM_JAVA_TESTNG",
                                                    "APPIUM_PYTHON",
                                                    "APPIUM_NODE",
                                                    "APPIUM_RUBY",
                                                    "APPIUM_WEB_JAVA_JUNIT",
                                                    "APPIUM_WEB_JAVA_TESTNG",
                                                    "APPIUM_WEB_PYTHON",
                                                    "APPIUM_WEB_NODE",
                                                    "APPIUM_WEB_RUBY",
                                                    "CALABASH",
                                                    "INSTRUMENTATION",
                                                    "UIAUTOMATION",
                                                    "UIAUTOMATOR",
                                                    "XCTEST",
                                                    "XCTEST_UI",
                                                    "REMOTE_ACCESS_RECORD",
                                                    "REMOTE_ACCESS_REPLAY"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "type": "object"
                                    },
                                    "testType": {
                                        "description": "<p>The test type for the specified device pool.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                        "enum": [
                                            "BUILTIN_FUZZ",
                                            "BUILTIN_EXPLORER",
                                            "WEB_PERFORMANCE_PROFILE",
                                            "APPIUM_JAVA_JUNIT",
                                            "APPIUM_JAVA_TESTNG",
                                            "APPIUM_PYTHON",
                                            "APPIUM_NODE",
                                            "APPIUM_RUBY",
                                            "APPIUM_WEB_JAVA_JUNIT",
                                            "APPIUM_WEB_JAVA_TESTNG",
                                            "APPIUM_WEB_PYTHON",
                                            "APPIUM_WEB_NODE",
                                            "APPIUM_WEB_RUBY",
                                            "CALABASH",
                                            "INSTRUMENTATION",
                                            "UIAUTOMATION",
                                            "UIAUTOMATOR",
                                            "XCTEST",
                                            "XCTEST_UI",
                                            "REMOTE_ACCESS_RECORD",
                                            "REMOTE_ACCESS_REPLAY"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "devicePoolArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetInstanceProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about the specified instance profile.",
                "operationId": "GetInstanceProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "instanceProfile": {
                                            "description": "An object containing information about your instance profile.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the instance profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "excludeAppPackagesFromCleanup": {
                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the instance profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "packageCleanup": {
                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                    "type": "boolean"
                                                },
                                                "rebootAfterUse": {
                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of your instance profile.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetJob": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about a job.",
                "operationId": "GetJob",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a get job request.",
                                    "example": {
                                        "job": {}
                                    },
                                    "properties": {
                                        "job": {
                                            "description": "An object containing information about the requested job.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The job's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "counters": {
                                                    "description": "The job's result counters.",
                                                    "properties": {
                                                        "errored": {
                                                            "description": "The number of errored entities.",
                                                            "type": "integer"
                                                        },
                                                        "failed": {
                                                            "description": "The number of failed entities.",
                                                            "type": "integer"
                                                        },
                                                        "passed": {
                                                            "description": "The number of passed entities.",
                                                            "type": "integer"
                                                        },
                                                        "skipped": {
                                                            "description": "The number of skipped entities.",
                                                            "type": "integer"
                                                        },
                                                        "stopped": {
                                                            "description": "The number of stopped entities.",
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "description": "The total number of entities.",
                                                            "type": "integer"
                                                        },
                                                        "warned": {
                                                            "description": "The number of warned entities.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created": {
                                                    "description": "When the job was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "device": {
                                                    "description": "The device (phone or tablet).",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The device's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "availability": {
                                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                            "enum": [
                                                                "TEMPORARY_NOT_AVAILABLE",
                                                                "BUSY",
                                                                "AVAILABLE",
                                                                "HIGHLY_AVAILABLE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "carrier": {
                                                            "description": "The device's carrier.",
                                                            "type": "string"
                                                        },
                                                        "cpu": {
                                                            "description": "Information about the device's CPU.",
                                                            "properties": {
                                                                "architecture": {
                                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                                    "type": "string"
                                                                },
                                                                "clock": {
                                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "frequency": {
                                                                    "description": "The CPU's frequency.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "fleetName": {
                                                            "description": "The name of the fleet to which this device belongs.",
                                                            "type": "string"
                                                        },
                                                        "fleetType": {
                                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                            "type": "string"
                                                        },
                                                        "formFactor": {
                                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                            "enum": [
                                                                "PHONE",
                                                                "TABLET"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "heapSize": {
                                                            "description": "The device's heap size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "image": {
                                                            "description": "The device's image name.",
                                                            "type": "string"
                                                        },
                                                        "instances": {
                                                            "description": "The instances belonging to this device.",
                                                            "items": {
                                                                "description": "Represents the device instance.",
                                                                "properties": {
                                                                    "arn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "deviceArn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "instanceProfile": {
                                                                        "description": "A object containing information about the instance profile.",
                                                                        "properties": {
                                                                            "arn": {
                                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                "minLength": 32,
                                                                                "type": "string"
                                                                            },
                                                                            "description": {
                                                                                "description": "The description of the instance profile.",
                                                                                "maxLength": 16384,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "excludeAppPackagesFromCleanup": {
                                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "name": {
                                                                                "description": "The name of the instance profile.",
                                                                                "maxLength": 256,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "packageCleanup": {
                                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "rebootAfterUse": {
                                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "An array of strings describing the device instance.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "status": {
                                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                                        "enum": [
                                                                            "IN_USE",
                                                                            "PREPARING",
                                                                            "AVAILABLE",
                                                                            "NOT_AVAILABLE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "udid": {
                                                                        "description": "Unique device identifier for the device instance.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "manufacturer": {
                                                            "description": "The device's manufacturer name.",
                                                            "type": "string"
                                                        },
                                                        "memory": {
                                                            "description": "The device's total memory size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "model": {
                                                            "description": "The device's model name.",
                                                            "type": "string"
                                                        },
                                                        "modelId": {
                                                            "description": "The device's model ID.",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The device's display name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "os": {
                                                            "description": "The device's operating system type.",
                                                            "type": "string"
                                                        },
                                                        "platform": {
                                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                            "enum": [
                                                                "ANDROID",
                                                                "IOS"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "radio": {
                                                            "description": "The device's radio.",
                                                            "type": "string"
                                                        },
                                                        "remoteAccessEnabled": {
                                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                                            "type": "boolean"
                                                        },
                                                        "remoteDebugEnabled": {
                                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                            "type": "boolean"
                                                        },
                                                        "resolution": {
                                                            "description": "The resolution of the device.",
                                                            "properties": {
                                                                "height": {
                                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                                    "type": "integer"
                                                                },
                                                                "width": {
                                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceMinutes": {
                                                    "description": "Represents the total (metered or unmetered) minutes used by the job.",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "instanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "A message about the job's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The job's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "result": {
                                                    "description": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "started": {
                                                    "description": "The job's start time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The job's stop time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby test type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                    "enum": [
                                                        "BUILTIN_FUZZ",
                                                        "BUILTIN_EXPLORER",
                                                        "WEB_PERFORMANCE_PROFILE",
                                                        "APPIUM_JAVA_JUNIT",
                                                        "APPIUM_JAVA_TESTNG",
                                                        "APPIUM_PYTHON",
                                                        "APPIUM_NODE",
                                                        "APPIUM_RUBY",
                                                        "APPIUM_WEB_JAVA_JUNIT",
                                                        "APPIUM_WEB_JAVA_TESTNG",
                                                        "APPIUM_WEB_PYTHON",
                                                        "APPIUM_WEB_NODE",
                                                        "APPIUM_WEB_RUBY",
                                                        "CALABASH",
                                                        "INSTRUMENTATION",
                                                        "UIAUTOMATION",
                                                        "UIAUTOMATOR",
                                                        "XCTEST",
                                                        "XCTEST_UI",
                                                        "REMOTE_ACCESS_RECORD",
                                                        "REMOTE_ACCESS_REPLAY"
                                                    ],
                                                    "type": "string"
                                                },
                                                "videoCapture": {
                                                    "description": "This value is set to true if video capture is enabled; otherwise, it is set to false.",
                                                    "type": "boolean"
                                                },
                                                "videoEndpoint": {
                                                    "description": "The endpoint for streaming device video.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the get job operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2::job:123-456-EXAMPLE-GUID"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The job's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetNetworkProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about a network profile.",
                "operationId": "GetNetworkProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "networkProfile": {
                                            "description": "The network profile.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the network profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the network profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "downlinkBandwidthBits": {
                                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                    "type": "integer"
                                                },
                                                "downlinkDelayMs": {
                                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "downlinkJitterMs": {
                                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "downlinkLossPercent": {
                                                    "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                                    "maximum": 100,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "The name of the network profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "The type of network profile. Valid values are listed below.",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "uplinkBandwidthBits": {
                                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                    "type": "integer"
                                                },
                                                "uplinkDelayMs": {
                                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "uplinkJitterMs": {
                                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "uplinkLossPercent": {
                                                    "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                                    "maximum": 100,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the network profile you want to return information about.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetOfferingStatus": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets the current status and future status of all offerings purchased by an AWS account. The response indicates how many offerings are currently available and the offerings that will be available in the next period. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.",
                "operationId": "GetOfferingStatus",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns the status result for a device offering.",
                                    "example": {
                                        "current": {
                                            "D68B3C05-1BA6-4360-BC69-12345EXAMPLE": {
                                                "offering": {
                                                    "description": "Android Remote Access Unmetered Device Slot",
                                                    "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                                    "platform": "ANDROID",
                                                    "type": "RECURRING"
                                                },
                                                "quantity": 1
                                            }
                                        },
                                        "nextPeriod": {
                                            "D68B3C05-1BA6-4360-BC69-12345EXAMPLE": {
                                                "effectiveOn": "1472688000",
                                                "offering": {
                                                    "description": "Android Remote Access Unmetered Device Slot",
                                                    "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                                    "platform": "ANDROID",
                                                    "type": "RECURRING"
                                                },
                                                "quantity": 1
                                            }
                                        }
                                    },
                                    "properties": {
                                        "current": {
                                            "description": "When specified, gets the offering status for the current period.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "description": "The status of the offering.",
                                                        "properties": {
                                                            "effectiveOn": {
                                                                "description": "The date on which the offering is effective.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "offering": {
                                                                "description": "Represents the metadata of an offering status.",
                                                                "properties": {
                                                                    "description": {
                                                                        "description": "A string describing the offering.",
                                                                        "maxLength": 16384,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "description": "The ID that corresponds to a device offering.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "platform": {
                                                                        "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                                        "enum": [
                                                                            "ANDROID",
                                                                            "IOS"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "recurringCharges": {
                                                                        "description": "Specifies whether there are recurring charges for the offering.",
                                                                        "items": {
                                                                            "description": "Specifies whether charges for devices will be recurring.",
                                                                            "properties": {
                                                                                "cost": {
                                                                                    "description": "The cost of the recurring charge.",
                                                                                    "properties": {
                                                                                        "amount": {
                                                                                            "description": "The numerical amount of an offering or transaction.",
                                                                                            "format": "double",
                                                                                            "type": "number"
                                                                                        },
                                                                                        "currencyCode": {
                                                                                            "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                                            "enum": [
                                                                                                "USD"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "frequency": {
                                                                                    "description": "The frequency in which charges will recur.",
                                                                                    "enum": [
                                                                                        "MONTHLY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "type": {
                                                                        "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                                        "enum": [
                                                                            "RECURRING"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "quantity": {
                                                                "description": "The number of available devices in the offering.",
                                                                "type": "integer"
                                                            },
                                                            "type": {
                                                                "description": "The type specified for the offering status.",
                                                                "enum": [
                                                                    "PURCHASE",
                                                                    "RENEW",
                                                                    "SYSTEM"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextPeriod": {
                                            "description": "When specified, gets the offering status for the next period.",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "description": "The status of the offering.",
                                                        "properties": {
                                                            "effectiveOn": {
                                                                "description": "The date on which the offering is effective.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "offering": {
                                                                "description": "Represents the metadata of an offering status.",
                                                                "properties": {
                                                                    "description": {
                                                                        "description": "A string describing the offering.",
                                                                        "maxLength": 16384,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "description": "The ID that corresponds to a device offering.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "platform": {
                                                                        "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                                        "enum": [
                                                                            "ANDROID",
                                                                            "IOS"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "recurringCharges": {
                                                                        "description": "Specifies whether there are recurring charges for the offering.",
                                                                        "items": {
                                                                            "description": "Specifies whether charges for devices will be recurring.",
                                                                            "properties": {
                                                                                "cost": {
                                                                                    "description": "The cost of the recurring charge.",
                                                                                    "properties": {
                                                                                        "amount": {
                                                                                            "description": "The numerical amount of an offering or transaction.",
                                                                                            "format": "double",
                                                                                            "type": "number"
                                                                                        },
                                                                                        "currencyCode": {
                                                                                            "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                                            "enum": [
                                                                                                "USD"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "frequency": {
                                                                                    "description": "The frequency in which charges will recur.",
                                                                                    "enum": [
                                                                                        "MONTHLY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "type": {
                                                                        "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                                        "enum": [
                                                                            "RECURRING"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "quantity": {
                                                                "description": "The number of available devices in the offering.",
                                                                "type": "integer"
                                                            },
                                                            "type": {
                                                                "description": "The type specified for the offering status.",
                                                                "enum": [
                                                                    "PURCHASE",
                                                                    "RENEW",
                                                                    "SYSTEM"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotEligibleException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request to retrieve the offering status for the specified customer or account.",
                                "example": {
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
                                },
                                "properties": {
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetProject": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about a project.",
                "operationId": "GetProject",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a get project request.",
                                    "example": {
                                        "project": {
                                            "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE",
                                            "created": "1472660939.152",
                                            "name": "My Project"
                                        }
                                    },
                                    "properties": {
                                        "project": {
                                            "description": "The project you wish to get information about.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The project's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "When the project was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "defaultJobTimeoutMinutes": {
                                                    "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "The project's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the get project operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The project's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetRemoteAccessSession": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a link to a currently running remote access session.",
                "operationId": "GetRemoteAccessSession",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the response from the server that lists detailed information about the remote access session.",
                                    "example": {
                                        "remoteAccessSession": {}
                                    },
                                    "properties": {
                                        "remoteAccessSession": {
                                            "description": "A container that lists detailed information about the remote access session.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the remote access session.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "billingMethod": {
                                                    "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                                                    "enum": [
                                                        "METERED",
                                                        "UNMETERED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "clientId": {
                                                    "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "The date and time the remote access session was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "device": {
                                                    "description": "The device (phone or tablet) used in the remote access session.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The device's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "availability": {
                                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                            "enum": [
                                                                "TEMPORARY_NOT_AVAILABLE",
                                                                "BUSY",
                                                                "AVAILABLE",
                                                                "HIGHLY_AVAILABLE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "carrier": {
                                                            "description": "The device's carrier.",
                                                            "type": "string"
                                                        },
                                                        "cpu": {
                                                            "description": "Information about the device's CPU.",
                                                            "properties": {
                                                                "architecture": {
                                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                                    "type": "string"
                                                                },
                                                                "clock": {
                                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "frequency": {
                                                                    "description": "The CPU's frequency.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "fleetName": {
                                                            "description": "The name of the fleet to which this device belongs.",
                                                            "type": "string"
                                                        },
                                                        "fleetType": {
                                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                            "type": "string"
                                                        },
                                                        "formFactor": {
                                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                            "enum": [
                                                                "PHONE",
                                                                "TABLET"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "heapSize": {
                                                            "description": "The device's heap size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "image": {
                                                            "description": "The device's image name.",
                                                            "type": "string"
                                                        },
                                                        "instances": {
                                                            "description": "The instances belonging to this device.",
                                                            "items": {
                                                                "description": "Represents the device instance.",
                                                                "properties": {
                                                                    "arn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "deviceArn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "instanceProfile": {
                                                                        "description": "A object containing information about the instance profile.",
                                                                        "properties": {
                                                                            "arn": {
                                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                "minLength": 32,
                                                                                "type": "string"
                                                                            },
                                                                            "description": {
                                                                                "description": "The description of the instance profile.",
                                                                                "maxLength": 16384,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "excludeAppPackagesFromCleanup": {
                                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "name": {
                                                                                "description": "The name of the instance profile.",
                                                                                "maxLength": 256,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "packageCleanup": {
                                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "rebootAfterUse": {
                                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "An array of strings describing the device instance.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "status": {
                                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                                        "enum": [
                                                                            "IN_USE",
                                                                            "PREPARING",
                                                                            "AVAILABLE",
                                                                            "NOT_AVAILABLE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "udid": {
                                                                        "description": "Unique device identifier for the device instance.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "manufacturer": {
                                                            "description": "The device's manufacturer name.",
                                                            "type": "string"
                                                        },
                                                        "memory": {
                                                            "description": "The device's total memory size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "model": {
                                                            "description": "The device's model name.",
                                                            "type": "string"
                                                        },
                                                        "modelId": {
                                                            "description": "The device's model ID.",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The device's display name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "os": {
                                                            "description": "The device's operating system type.",
                                                            "type": "string"
                                                        },
                                                        "platform": {
                                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                            "enum": [
                                                                "ANDROID",
                                                                "IOS"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "radio": {
                                                            "description": "The device's radio.",
                                                            "type": "string"
                                                        },
                                                        "remoteAccessEnabled": {
                                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                                            "type": "boolean"
                                                        },
                                                        "remoteDebugEnabled": {
                                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                            "type": "boolean"
                                                        },
                                                        "resolution": {
                                                            "description": "The resolution of the device.",
                                                            "properties": {
                                                                "height": {
                                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                                    "type": "integer"
                                                                },
                                                                "width": {
                                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceMinutes": {
                                                    "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceUdid": {
                                                    "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                                                    "type": "string"
                                                },
                                                "endpoint": {
                                                    "description": "The endpoint for the remote access sesssion.",
                                                    "type": "string"
                                                },
                                                "hostAddress": {
                                                    "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                                                    "maxLength": 1024,
                                                    "type": "string"
                                                },
                                                "instanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "interactionMode": {
                                                    "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                                                    "enum": [
                                                        "INTERACTIVE",
                                                        "NO_VIDEO",
                                                        "VIDEO_ONLY"
                                                    ],
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "A message about the remote access session.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the remote access session.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "remoteDebugEnabled": {
                                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                                                    "type": "boolean"
                                                },
                                                "remoteRecordAppArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "remoteRecordEnabled": {
                                                    "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                                                    "type": "boolean"
                                                },
                                                "result": {
                                                    "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "skipAppResign": {
                                                    "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                    "type": "boolean"
                                                },
                                                "started": {
                                                    "description": "The date and time the remote access session was started.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The date and time the remote access session was stopped.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request to get information about the specified remote access session.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the remote access session about which you want to get session information.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetRun": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about a run.",
                "operationId": "GetRun",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a get run request.",
                                    "example": {
                                        "run": {
                                            "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE",
                                            "billingMethod": "METERED",
                                            "completedJobs": 0,
                                            "counters": {
                                                "errored": 0,
                                                "failed": 0,
                                                "passed": 0,
                                                "skipped": 0,
                                                "stopped": 0,
                                                "total": 0,
                                                "warned": 0
                                            },
                                            "created": "1472667509.852",
                                            "deviceMinutes": {
                                                "metered": 0,
                                                "total": 0,
                                                "unmetered": 0
                                            },
                                            "name": "My Test Run",
                                            "platform": "ANDROID",
                                            "result": "PENDING",
                                            "status": "RUNNING",
                                            "totalJobs": 3,
                                            "type": "BUILTIN_EXPLORER"
                                        }
                                    },
                                    "properties": {
                                        "run": {
                                            "description": "The run you wish to get results from.",
                                            "properties": {
                                                "appUpload": {
                                                    "description": "An app to upload or that has been uploaded.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "arn": {
                                                    "description": "The run's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "billingMethod": {
                                                    "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                                    "enum": [
                                                        "METERED",
                                                        "UNMETERED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "completedJobs": {
                                                    "description": "The total number of completed jobs.",
                                                    "type": "integer"
                                                },
                                                "counters": {
                                                    "description": "The run's result counters.",
                                                    "properties": {
                                                        "errored": {
                                                            "description": "The number of errored entities.",
                                                            "type": "integer"
                                                        },
                                                        "failed": {
                                                            "description": "The number of failed entities.",
                                                            "type": "integer"
                                                        },
                                                        "passed": {
                                                            "description": "The number of passed entities.",
                                                            "type": "integer"
                                                        },
                                                        "skipped": {
                                                            "description": "The number of skipped entities.",
                                                            "type": "integer"
                                                        },
                                                        "stopped": {
                                                            "description": "The number of stopped entities.",
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "description": "The total number of entities.",
                                                            "type": "integer"
                                                        },
                                                        "warned": {
                                                            "description": "The number of warned entities.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created": {
                                                    "description": "When the run was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "customerArtifactPaths": {
                                                    "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                                                    "properties": {
                                                        "androidPaths": {
                                                            "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "deviceHostPaths": {
                                                            "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "iosPaths": {
                                                            "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceMinutes": {
                                                    "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "devicePoolArn": {
                                                    "description": "The ARN of the device pool for the run.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceSelectionResult": {
                                                    "description": "The results of a device filter used to select the devices for a test run.",
                                                    "properties": {
                                                        "filters": {
                                                            "description": "The filters in a device selection result.",
                                                            "items": {
                                                                "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                                                "properties": {
                                                                    "attribute": {
                                                                        "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                                        "enum": [
                                                                            "ARN",
                                                                            "PLATFORM",
                                                                            "OS_VERSION",
                                                                            "MODEL",
                                                                            "AVAILABILITY",
                                                                            "FORM_FACTOR",
                                                                            "MANUFACTURER",
                                                                            "REMOTE_ACCESS_ENABLED",
                                                                            "REMOTE_DEBUG_ENABLED",
                                                                            "INSTANCE_ARN",
                                                                            "INSTANCE_LABELS",
                                                                            "FLEET_TYPE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "operator": {
                                                                        "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                                        "enum": [
                                                                            "EQUALS",
                                                                            "LESS_THAN",
                                                                            "LESS_THAN_OR_EQUALS",
                                                                            "GREATER_THAN",
                                                                            "GREATER_THAN_OR_EQUALS",
                                                                            "IN",
                                                                            "NOT_IN",
                                                                            "CONTAINS"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "values": {
                                                                        "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "matchedDevicesCount": {
                                                            "description": "The number of devices that matched the device filter selection criteria.",
                                                            "type": "integer"
                                                        },
                                                        "maxDevices": {
                                                            "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "eventCount": {
                                                    "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                                                    "type": "integer"
                                                },
                                                "jobTimeoutMinutes": {
                                                    "description": "The number of minutes the job will execute before it times out.",
                                                    "type": "integer"
                                                },
                                                "locale": {
                                                    "description": "Information about the locale that is used for the run.",
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "description": "Information about the location that is used for the run.",
                                                    "properties": {
                                                        "latitude": {
                                                            "description": "The latitude.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "longitude": {
                                                            "description": "The longitude.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "latitude",
                                                        "longitude"
                                                    ],
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "A message about the run's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The run's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "networkProfile": {
                                                    "description": "The network profile being used for a test run.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the network profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the network profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "downlinkBandwidthBits": {
                                                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                            "type": "integer"
                                                        },
                                                        "downlinkDelayMs": {
                                                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "downlinkJitterMs": {
                                                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "downlinkLossPercent": {
                                                            "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                                            "maximum": 100,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "description": "The name of the network profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The type of network profile. Valid values are listed below.",
                                                            "enum": [
                                                                "CURATED",
                                                                "PRIVATE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "uplinkBandwidthBits": {
                                                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                            "type": "integer"
                                                        },
                                                        "uplinkDelayMs": {
                                                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "uplinkJitterMs": {
                                                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "uplinkLossPercent": {
                                                            "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                                            "maximum": 100,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "parsingResultUrl": {
                                                    "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                                                    "type": "string"
                                                },
                                                "platform": {
                                                    "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                    "enum": [
                                                        "ANDROID",
                                                        "IOS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "radios": {
                                                    "description": "Information about the radio states for the run.",
                                                    "properties": {
                                                        "bluetooth": {
                                                            "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        },
                                                        "gps": {
                                                            "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        },
                                                        "nfc": {
                                                            "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        },
                                                        "wifi": {
                                                            "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "result": {
                                                    "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "resultCode": {
                                                    "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                                                    "enum": [
                                                        "PARSING_FAILED",
                                                        "VPC_ENDPOINT_SETUP_FAILED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "seed": {
                                                    "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                                                    "type": "integer"
                                                },
                                                "skipAppResign": {
                                                    "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                    "type": "boolean"
                                                },
                                                "started": {
                                                    "description": "The run's start time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The run's stop time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "testSpecArn": {
                                                    "description": "The ARN of the YAML-formatted test specification for the run.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "totalJobs": {
                                                    "description": "The total number of jobs for the run.",
                                                    "type": "integer"
                                                },
                                                "type": {
                                                    "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                    "enum": [
                                                        "BUILTIN_FUZZ",
                                                        "BUILTIN_EXPLORER",
                                                        "WEB_PERFORMANCE_PROFILE",
                                                        "APPIUM_JAVA_JUNIT",
                                                        "APPIUM_JAVA_TESTNG",
                                                        "APPIUM_PYTHON",
                                                        "APPIUM_NODE",
                                                        "APPIUM_RUBY",
                                                        "APPIUM_WEB_JAVA_JUNIT",
                                                        "APPIUM_WEB_JAVA_TESTNG",
                                                        "APPIUM_WEB_PYTHON",
                                                        "APPIUM_WEB_NODE",
                                                        "APPIUM_WEB_RUBY",
                                                        "CALABASH",
                                                        "INSTRUMENTATION",
                                                        "UIAUTOMATION",
                                                        "UIAUTOMATOR",
                                                        "XCTEST",
                                                        "XCTEST_UI",
                                                        "REMOTE_ACCESS_RECORD",
                                                        "REMOTE_ACCESS_REPLAY"
                                                    ],
                                                    "type": "string"
                                                },
                                                "webUrl": {
                                                    "description": "The Device Farm console URL for the recording of the run.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the get run operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The run's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetSuite": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about a suite.",
                "operationId": "GetSuite",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a get suite request.",
                                    "example": {
                                        "suite": {}
                                    },
                                    "properties": {
                                        "suite": {
                                            "description": "A collection of one or more tests.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The suite's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "counters": {
                                                    "description": "The suite's result counters.",
                                                    "properties": {
                                                        "errored": {
                                                            "description": "The number of errored entities.",
                                                            "type": "integer"
                                                        },
                                                        "failed": {
                                                            "description": "The number of failed entities.",
                                                            "type": "integer"
                                                        },
                                                        "passed": {
                                                            "description": "The number of passed entities.",
                                                            "type": "integer"
                                                        },
                                                        "skipped": {
                                                            "description": "The number of skipped entities.",
                                                            "type": "integer"
                                                        },
                                                        "stopped": {
                                                            "description": "The number of stopped entities.",
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "description": "The total number of entities.",
                                                            "type": "integer"
                                                        },
                                                        "warned": {
                                                            "description": "The number of warned entities.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created": {
                                                    "description": "When the suite was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "deviceMinutes": {
                                                    "description": "Represents the total (metered or unmetered) minutes used by the test suite.",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "A message about the suite's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The suite's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "result": {
                                                    "description": "<p>The suite's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "started": {
                                                    "description": "The suite's start time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The suite's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The suite's stop time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "<p>The suite's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                    "enum": [
                                                        "BUILTIN_FUZZ",
                                                        "BUILTIN_EXPLORER",
                                                        "WEB_PERFORMANCE_PROFILE",
                                                        "APPIUM_JAVA_JUNIT",
                                                        "APPIUM_JAVA_TESTNG",
                                                        "APPIUM_PYTHON",
                                                        "APPIUM_NODE",
                                                        "APPIUM_RUBY",
                                                        "APPIUM_WEB_JAVA_JUNIT",
                                                        "APPIUM_WEB_JAVA_TESTNG",
                                                        "APPIUM_WEB_PYTHON",
                                                        "APPIUM_WEB_NODE",
                                                        "APPIUM_WEB_RUBY",
                                                        "CALABASH",
                                                        "INSTRUMENTATION",
                                                        "UIAUTOMATION",
                                                        "UIAUTOMATOR",
                                                        "XCTEST",
                                                        "XCTEST_UI",
                                                        "REMOTE_ACCESS_RECORD",
                                                        "REMOTE_ACCESS_REPLAY"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the get suite operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:suite:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The suite's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetTest": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about a test.",
                "operationId": "GetTest",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a get test request.",
                                    "example": {
                                        "test": {}
                                    },
                                    "properties": {
                                        "test": {
                                            "description": "A test condition that is evaluated.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The test's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "counters": {
                                                    "description": "The test's result counters.",
                                                    "properties": {
                                                        "errored": {
                                                            "description": "The number of errored entities.",
                                                            "type": "integer"
                                                        },
                                                        "failed": {
                                                            "description": "The number of failed entities.",
                                                            "type": "integer"
                                                        },
                                                        "passed": {
                                                            "description": "The number of passed entities.",
                                                            "type": "integer"
                                                        },
                                                        "skipped": {
                                                            "description": "The number of skipped entities.",
                                                            "type": "integer"
                                                        },
                                                        "stopped": {
                                                            "description": "The number of stopped entities.",
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "description": "The total number of entities.",
                                                            "type": "integer"
                                                        },
                                                        "warned": {
                                                            "description": "The number of warned entities.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created": {
                                                    "description": "When the test was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "deviceMinutes": {
                                                    "description": "Represents the total (metered or unmetered) minutes used by the test.",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "A message about the test's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The test's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "result": {
                                                    "description": "<p>The test's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "started": {
                                                    "description": "The test's start time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The test's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The test's stop time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                    "enum": [
                                                        "BUILTIN_FUZZ",
                                                        "BUILTIN_EXPLORER",
                                                        "WEB_PERFORMANCE_PROFILE",
                                                        "APPIUM_JAVA_JUNIT",
                                                        "APPIUM_JAVA_TESTNG",
                                                        "APPIUM_PYTHON",
                                                        "APPIUM_NODE",
                                                        "APPIUM_RUBY",
                                                        "APPIUM_WEB_JAVA_JUNIT",
                                                        "APPIUM_WEB_JAVA_TESTNG",
                                                        "APPIUM_WEB_PYTHON",
                                                        "APPIUM_WEB_NODE",
                                                        "APPIUM_WEB_RUBY",
                                                        "CALABASH",
                                                        "INSTRUMENTATION",
                                                        "UIAUTOMATION",
                                                        "UIAUTOMATOR",
                                                        "XCTEST",
                                                        "XCTEST_UI",
                                                        "REMOTE_ACCESS_RECORD",
                                                        "REMOTE_ACCESS_REPLAY"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the get test operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The test's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetUpload": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about an upload.",
                "operationId": "GetUpload",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a get upload request.",
                                    "example": {
                                        "upload": {}
                                    },
                                    "properties": {
                                        "upload": {
                                            "description": "An app or a set of one or more tests to upload or that have been uploaded.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The upload's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "category": {
                                                    "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "contentType": {
                                                    "description": "The upload's content type (for example, \"application/octet-stream\").",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "When the upload was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "A message about the upload's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                                    "maxLength": 8192,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The upload's file name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                                    "enum": [
                                                        "INITIALIZED",
                                                        "PROCESSING",
                                                        "SUCCEEDED",
                                                        "FAILED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                                    "enum": [
                                                        "ANDROID_APP",
                                                        "IOS_APP",
                                                        "WEB_APP",
                                                        "EXTERNAL_DATA",
                                                        "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                                        "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                                        "APPIUM_PYTHON_TEST_PACKAGE",
                                                        "APPIUM_NODE_TEST_PACKAGE",
                                                        "APPIUM_RUBY_TEST_PACKAGE",
                                                        "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                                        "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                                        "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                                        "APPIUM_WEB_NODE_TEST_PACKAGE",
                                                        "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                                        "CALABASH_TEST_PACKAGE",
                                                        "INSTRUMENTATION_TEST_PACKAGE",
                                                        "UIAUTOMATION_TEST_PACKAGE",
                                                        "UIAUTOMATOR_TEST_PACKAGE",
                                                        "XCTEST_TEST_PACKAGE",
                                                        "XCTEST_UI_TEST_PACKAGE",
                                                        "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                                        "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                                        "APPIUM_PYTHON_TEST_SPEC",
                                                        "APPIUM_NODE_TEST_SPEC",
                                                        "APPIUM_RUBY_TEST_SPEC",
                                                        "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                                        "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                                        "APPIUM_WEB_PYTHON_TEST_SPEC",
                                                        "APPIUM_WEB_NODE_TEST_SPEC",
                                                        "APPIUM_WEB_RUBY_TEST_SPEC",
                                                        "INSTRUMENTATION_TEST_SPEC",
                                                        "XCTEST_UI_TEST_SPEC"
                                                    ],
                                                    "type": "string"
                                                },
                                                "url": {
                                                    "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the get upload operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:upload:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The upload's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#GetVPCEConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about the configuration settings for your Amazon Virtual Private Cloud (VPC) endpoint.",
                "operationId": "GetVPCEConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vpceConfiguration": {
                                            "description": "An object containing information about your VPC endpoint configuration.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "serviceDnsName": {
                                                    "description": "The DNS name that maps to the private IP address of the service you want to access.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "vpceConfigurationDescription": {
                                                    "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "vpceConfigurationName": {
                                                    "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                                    "maxLength": 1024,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "vpceServiceName": {
                                                    "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to describe.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#InstallToRemoteAccessSession": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Installs an application to the device in a remote access session. For Android applications, the file must be in .apk format. For iOS applications, the file must be in .ipa format.",
                "operationId": "InstallToRemoteAccessSession",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the response from the server after AWS Device Farm makes a request to install to a remote access session.",
                                    "example": {
                                        "appUpload": {}
                                    },
                                    "properties": {
                                        "appUpload": {
                                            "description": "An app to upload or that has been uploaded.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The upload's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "category": {
                                                    "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "contentType": {
                                                    "description": "The upload's content type (for example, \"application/octet-stream\").",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "When the upload was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "A message about the upload's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                                    "maxLength": 8192,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The upload's file name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                                    "enum": [
                                                        "INITIALIZED",
                                                        "PROCESSING",
                                                        "SUCCEEDED",
                                                        "FAILED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                                    "enum": [
                                                        "ANDROID_APP",
                                                        "IOS_APP",
                                                        "WEB_APP",
                                                        "EXTERNAL_DATA",
                                                        "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                                        "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                                        "APPIUM_PYTHON_TEST_PACKAGE",
                                                        "APPIUM_NODE_TEST_PACKAGE",
                                                        "APPIUM_RUBY_TEST_PACKAGE",
                                                        "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                                        "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                                        "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                                        "APPIUM_WEB_NODE_TEST_PACKAGE",
                                                        "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                                        "CALABASH_TEST_PACKAGE",
                                                        "INSTRUMENTATION_TEST_PACKAGE",
                                                        "UIAUTOMATION_TEST_PACKAGE",
                                                        "UIAUTOMATOR_TEST_PACKAGE",
                                                        "XCTEST_TEST_PACKAGE",
                                                        "XCTEST_UI_TEST_PACKAGE",
                                                        "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                                        "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                                        "APPIUM_PYTHON_TEST_SPEC",
                                                        "APPIUM_NODE_TEST_SPEC",
                                                        "APPIUM_RUBY_TEST_SPEC",
                                                        "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                                        "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                                        "APPIUM_WEB_PYTHON_TEST_SPEC",
                                                        "APPIUM_WEB_NODE_TEST_SPEC",
                                                        "APPIUM_WEB_RUBY_TEST_SPEC",
                                                        "INSTRUMENTATION_TEST_SPEC",
                                                        "XCTEST_UI_TEST_SPEC"
                                                    ],
                                                    "type": "string"
                                                },
                                                "url": {
                                                    "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request to install an Android application (in .apk format) or an iOS application (in .ipa format) as part of a remote access session.",
                                "example": {
                                    "appArn": "arn:aws:devicefarm:us-west-2:123456789101:app:EXAMPLE-GUID-123-456",
                                    "remoteAccessSessionArn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "appArn": {
                                        "description": "The Amazon Resource Name (ARN) of the app about which you are requesting information.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "remoteAccessSessionArn": {
                                        "description": "The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "remoteAccessSessionArn",
                                    "appArn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListArtifacts": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about artifacts.",
                "operationId": "ListArtifacts",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list artifacts operation.",
                                    "properties": {
                                        "artifacts": {
                                            "description": "Information about the artifacts.",
                                            "items": {
                                                "description": "Represents the output of a test. Examples of artifacts include logs and screenshots.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The artifact's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "extension": {
                                                        "description": "The artifact's file extension.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The artifact's name.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "<p>The artifact's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>UNKNOWN: An unknown type.</p> </li> <li> <p>SCREENSHOT: The screenshot type.</p> </li> <li> <p>DEVICE_LOG: The device log type.</p> </li> <li> <p>MESSAGE_LOG: The message log type.</p> </li> <li> <p>VIDEO_LOG: The video log type.</p> </li> <li> <p>RESULT_LOG: The result log type.</p> </li> <li> <p>SERVICE_LOG: The service log type.</p> </li> <li> <p>WEBKIT_LOG: The web kit log type.</p> </li> <li> <p>INSTRUMENTATION_OUTPUT: The instrumentation type.</p> </li> <li> <p>EXERCISER_MONKEY_OUTPUT: For Android, the artifact (log) generated by an Android fuzz test.</p> </li> <li> <p>CALABASH_JSON_OUTPUT: The Calabash JSON output type.</p> </li> <li> <p>CALABASH_PRETTY_OUTPUT: The Calabash pretty output type.</p> </li> <li> <p>CALABASH_STANDARD_OUTPUT: The Calabash standard output type.</p> </li> <li> <p>CALABASH_JAVA_XML_OUTPUT: The Calabash Java XML output type.</p> </li> <li> <p>AUTOMATION_OUTPUT: The automation output type.</p> </li> <li> <p>APPIUM_SERVER_OUTPUT: The Appium server output type.</p> </li> <li> <p>APPIUM_JAVA_OUTPUT: The Appium Java output type.</p> </li> <li> <p>APPIUM_JAVA_XML_OUTPUT: The Appium Java XML output type.</p> </li> <li> <p>APPIUM_PYTHON_OUTPUT: The Appium Python output type.</p> </li> <li> <p>APPIUM_PYTHON_XML_OUTPUT: The Appium Python XML output type.</p> </li> <li> <p>EXPLORER_EVENT_LOG: The Explorer event log output type.</p> </li> <li> <p>EXPLORER_SUMMARY_LOG: The Explorer summary log output type.</p> </li> <li> <p>APPLICATION_CRASH_REPORT: The application crash report output type.</p> </li> <li> <p>XCTEST_LOG: The XCode test output type.</p> </li> <li> <p>VIDEO: The Video output type.</p> </li> <li> <p>CUSTOMER_ARTIFACT:The Customer Artifact output type.</p> </li> <li> <p>CUSTOMER_ARTIFACT_LOG: The Customer Artifact Log output type.</p> </li> <li> <p>TESTSPEC_OUTPUT: The Test Spec Output type.</p> </li> </ul>",
                                                        "enum": [
                                                            "UNKNOWN",
                                                            "SCREENSHOT",
                                                            "DEVICE_LOG",
                                                            "MESSAGE_LOG",
                                                            "VIDEO_LOG",
                                                            "RESULT_LOG",
                                                            "SERVICE_LOG",
                                                            "WEBKIT_LOG",
                                                            "INSTRUMENTATION_OUTPUT",
                                                            "EXERCISER_MONKEY_OUTPUT",
                                                            "CALABASH_JSON_OUTPUT",
                                                            "CALABASH_PRETTY_OUTPUT",
                                                            "CALABASH_STANDARD_OUTPUT",
                                                            "CALABASH_JAVA_XML_OUTPUT",
                                                            "AUTOMATION_OUTPUT",
                                                            "APPIUM_SERVER_OUTPUT",
                                                            "APPIUM_JAVA_OUTPUT",
                                                            "APPIUM_JAVA_XML_OUTPUT",
                                                            "APPIUM_PYTHON_OUTPUT",
                                                            "APPIUM_PYTHON_XML_OUTPUT",
                                                            "EXPLORER_EVENT_LOG",
                                                            "EXPLORER_SUMMARY_LOG",
                                                            "APPLICATION_CRASH_REPORT",
                                                            "XCTEST_LOG",
                                                            "VIDEO",
                                                            "CUSTOMER_ARTIFACT",
                                                            "CUSTOMER_ARTIFACT_LOG",
                                                            "TESTSPEC_OUTPUT"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the artifact's file.",
                                                        "maxLength": 2048,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the list artifacts operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456",
                                    "type": "SCREENSHOT"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Run, Job, Suite, or Test ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "<p>The artifacts' type.</p> <p>Allowed values include:</p> <ul> <li> <p>FILE: The artifacts are files.</p> </li> <li> <p>LOG: The artifacts are logs.</p> </li> <li> <p>SCREENSHOT: The artifacts are screenshots.</p> </li> </ul>",
                                        "enum": [
                                            "SCREENSHOT",
                                            "FILE",
                                            "LOG"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn",
                                    "type"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListDeviceInstances": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about the private device instances associated with one or more AWS accounts.",
                "operationId": "ListDeviceInstances",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "deviceInstances": {
                                            "description": "An object containing information about your device instances.",
                                            "items": {
                                                "description": "Represents the device instance.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "deviceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "instanceProfile": {
                                                        "description": "A object containing information about the instance profile.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "description": "The description of the instance profile.",
                                                                "maxLength": 16384,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "excludeAppPackagesFromCleanup": {
                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "description": "The name of the instance profile.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "packageCleanup": {
                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                "type": "boolean"
                                                            },
                                                            "rebootAfterUse": {
                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "description": "An array of strings describing the device instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "status": {
                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                        "enum": [
                                                            "IN_USE",
                                                            "PREPARING",
                                                            "AVAILABLE",
                                                            "NOT_AVAILABLE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "udid": {
                                                        "description": "Unique device identifier for the device instance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "An identifier that can be used in the next call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "maxResults": {
                                        "description": "An integer specifying the maximum number of items you want to return in the API response.",
                                        "type": "integer"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListDevicePools": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about device pools.",
                "operationId": "ListDevicePools",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list device pools request.",
                                    "example": {
                                        "devicePools": [
                                            {
                                                "arn": "arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE",
                                                "description": "Top devices",
                                                "name": "Top Devices",
                                                "rules": [
                                                    {
                                                        "attribute": "ARN",
                                                        "operator": "IN",
                                                        "value": "[\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"]"
                                                    }
                                                ]
                                            },
                                            {
                                                "arn": "arn:aws:devicefarm:us-west-2:123456789101:devicepool:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/bf96e75a-28f6-4e61-b6a7-12345EXAMPLE",
                                                "description": "Samsung Galaxy Android devices",
                                                "name": "My Android Device Pool",
                                                "rules": [
                                                    {
                                                        "attribute": "ARN",
                                                        "operator": "IN",
                                                        "value": "[\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"]"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "devicePools": {
                                            "description": "Information about the device pools.",
                                            "items": {
                                                "description": "Represents a collection of device types.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The device pool's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "The device pool's description.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "maxDevices": {
                                                        "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "The device pool's name.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "rules": {
                                                        "description": "Information about the device pool's rules.",
                                                        "items": {
                                                            "description": "Represents a condition for a device pool.",
                                                            "properties": {
                                                                "attribute": {
                                                                    "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                                    "enum": [
                                                                        "ARN",
                                                                        "PLATFORM",
                                                                        "FORM_FACTOR",
                                                                        "MANUFACTURER",
                                                                        "REMOTE_ACCESS_ENABLED",
                                                                        "REMOTE_DEBUG_ENABLED",
                                                                        "APPIUM_VERSION",
                                                                        "INSTANCE_ARN",
                                                                        "INSTANCE_LABELS",
                                                                        "FLEET_TYPE",
                                                                        "OS_VERSION",
                                                                        "MODEL",
                                                                        "AVAILABILITY"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "operator": {
                                                                    "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                                    "enum": [
                                                                        "EQUALS",
                                                                        "LESS_THAN",
                                                                        "LESS_THAN_OR_EQUALS",
                                                                        "GREATER_THAN",
                                                                        "GREATER_THAN_OR_EQUALS",
                                                                        "IN",
                                                                        "NOT_IN",
                                                                        "CONTAINS"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The rule's value.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "type": {
                                                        "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                                                        "enum": [
                                                            "CURATED",
                                                            "PRIVATE"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the result of a list device pools request.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                                    "type": "PRIVATE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The project ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "<p>The device pools' type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                                        "enum": [
                                            "CURATED",
                                            "PRIVATE"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListDevices": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about unique device types.",
                "operationId": "ListDevices",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list devices operation.",
                                    "example": {},
                                    "properties": {
                                        "devices": {
                                            "description": "Information about the devices.",
                                            "items": {
                                                "description": "Represents a device type that an app is tested against.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The device's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "availability": {
                                                        "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                        "enum": [
                                                            "TEMPORARY_NOT_AVAILABLE",
                                                            "BUSY",
                                                            "AVAILABLE",
                                                            "HIGHLY_AVAILABLE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "carrier": {
                                                        "description": "The device's carrier.",
                                                        "type": "string"
                                                    },
                                                    "cpu": {
                                                        "description": "Information about the device's CPU.",
                                                        "properties": {
                                                            "architecture": {
                                                                "description": "The CPU's architecture, for example x86 or ARM.",
                                                                "type": "string"
                                                            },
                                                            "clock": {
                                                                "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "frequency": {
                                                                "description": "The CPU's frequency.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "fleetName": {
                                                        "description": "The name of the fleet to which this device belongs.",
                                                        "type": "string"
                                                    },
                                                    "fleetType": {
                                                        "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                        "type": "string"
                                                    },
                                                    "formFactor": {
                                                        "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                        "enum": [
                                                            "PHONE",
                                                            "TABLET"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "heapSize": {
                                                        "description": "The device's heap size, expressed in bytes.",
                                                        "type": "integer"
                                                    },
                                                    "image": {
                                                        "description": "The device's image name.",
                                                        "type": "string"
                                                    },
                                                    "instances": {
                                                        "description": "The instances belonging to this device.",
                                                        "items": {
                                                            "description": "Represents the device instance.",
                                                            "properties": {
                                                                "arn": {
                                                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "deviceArn": {
                                                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "instanceProfile": {
                                                                    "description": "A object containing information about the instance profile.",
                                                                    "properties": {
                                                                        "arn": {
                                                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                            "minLength": 32,
                                                                            "type": "string"
                                                                        },
                                                                        "description": {
                                                                            "description": "The description of the instance profile.",
                                                                            "maxLength": 16384,
                                                                            "minLength": 0,
                                                                            "type": "string"
                                                                        },
                                                                        "excludeAppPackagesFromCleanup": {
                                                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "name": {
                                                                            "description": "The name of the instance profile.",
                                                                            "maxLength": 256,
                                                                            "minLength": 0,
                                                                            "type": "string"
                                                                        },
                                                                        "packageCleanup": {
                                                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "rebootAfterUse": {
                                                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "labels": {
                                                                    "description": "An array of strings describing the device instance.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "status": {
                                                                    "description": "The status of the device instance. Valid values are listed below.",
                                                                    "enum": [
                                                                        "IN_USE",
                                                                        "PREPARING",
                                                                        "AVAILABLE",
                                                                        "NOT_AVAILABLE"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "udid": {
                                                                    "description": "Unique device identifier for the device instance.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "manufacturer": {
                                                        "description": "The device's manufacturer name.",
                                                        "type": "string"
                                                    },
                                                    "memory": {
                                                        "description": "The device's total memory size, expressed in bytes.",
                                                        "type": "integer"
                                                    },
                                                    "model": {
                                                        "description": "The device's model name.",
                                                        "type": "string"
                                                    },
                                                    "modelId": {
                                                        "description": "The device's model ID.",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The device's display name.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "os": {
                                                        "description": "The device's operating system type.",
                                                        "type": "string"
                                                    },
                                                    "platform": {
                                                        "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                        "enum": [
                                                            "ANDROID",
                                                            "IOS"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "radio": {
                                                        "description": "The device's radio.",
                                                        "type": "string"
                                                    },
                                                    "remoteAccessEnabled": {
                                                        "description": "Specifies whether remote access has been enabled for the specified device.",
                                                        "type": "boolean"
                                                    },
                                                    "remoteDebugEnabled": {
                                                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                        "type": "boolean"
                                                    },
                                                    "resolution": {
                                                        "description": "The resolution of the device.",
                                                        "properties": {
                                                            "height": {
                                                                "description": "The screen resolution's height, expressed in pixels.",
                                                                "type": "integer"
                                                            },
                                                            "width": {
                                                                "description": "The screen resolution's width, expressed in pixels.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the result of a list devices request.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the project.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "filters": {
                                        "description": "<p>Used to select a set of devices. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p>Attribute: The aspect of a device such as platform or model used as the selction criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> </li> <li> <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> </li> <li> <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p> </li> <li> <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> </li> <li> <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> <li> <p>Operator: The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p>Values: An array of one or more filter values.</p> <ul> <li> <p>The IN and NOT_IN operators take a values array that has one or more elements.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> <li> <p>In a request, the AVAILABILITY attribute takes \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\" as values.</p> </li> </ul> </li> </ul>",
                                        "items": {
                                            "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                            "properties": {
                                                "attribute": {
                                                    "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                    "enum": [
                                                        "ARN",
                                                        "PLATFORM",
                                                        "OS_VERSION",
                                                        "MODEL",
                                                        "AVAILABILITY",
                                                        "FORM_FACTOR",
                                                        "MANUFACTURER",
                                                        "REMOTE_ACCESS_ENABLED",
                                                        "REMOTE_DEBUG_ENABLED",
                                                        "INSTANCE_ARN",
                                                        "INSTANCE_LABELS",
                                                        "FLEET_TYPE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "operator": {
                                                    "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                    "enum": [
                                                        "EQUALS",
                                                        "LESS_THAN",
                                                        "LESS_THAN_OR_EQUALS",
                                                        "GREATER_THAN",
                                                        "GREATER_THAN_OR_EQUALS",
                                                        "IN",
                                                        "NOT_IN",
                                                        "CONTAINS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "values": {
                                                    "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListInstanceProfiles": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about all the instance profiles in an AWS account.",
                "operationId": "ListInstanceProfiles",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "instanceProfiles": {
                                            "description": "An object containing information about your instance profiles.",
                                            "items": {
                                                "description": "Represents the instance profile.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "The description of the instance profile.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "excludeAppPackagesFromCleanup": {
                                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "description": "The name of the instance profile.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "packageCleanup": {
                                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                        "type": "boolean"
                                                    },
                                                    "rebootAfterUse": {
                                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "An identifier that can be used in the next call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "maxResults": {
                                        "description": "An integer specifying the maximum number of items you want to return in the API response.",
                                        "type": "integer"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListJobs": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about jobs for a given test run.",
                "operationId": "ListJobs",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list jobs request.",
                                    "properties": {
                                        "jobs": {
                                            "description": "Information about the jobs.",
                                            "items": {
                                                "description": "Represents a device.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The job's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "counters": {
                                                        "description": "The job's result counters.",
                                                        "properties": {
                                                            "errored": {
                                                                "description": "The number of errored entities.",
                                                                "type": "integer"
                                                            },
                                                            "failed": {
                                                                "description": "The number of failed entities.",
                                                                "type": "integer"
                                                            },
                                                            "passed": {
                                                                "description": "The number of passed entities.",
                                                                "type": "integer"
                                                            },
                                                            "skipped": {
                                                                "description": "The number of skipped entities.",
                                                                "type": "integer"
                                                            },
                                                            "stopped": {
                                                                "description": "The number of stopped entities.",
                                                                "type": "integer"
                                                            },
                                                            "total": {
                                                                "description": "The total number of entities.",
                                                                "type": "integer"
                                                            },
                                                            "warned": {
                                                                "description": "The number of warned entities.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created": {
                                                        "description": "When the job was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "device": {
                                                        "description": "The device (phone or tablet).",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The device's ARN.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "availability": {
                                                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                                "enum": [
                                                                    "TEMPORARY_NOT_AVAILABLE",
                                                                    "BUSY",
                                                                    "AVAILABLE",
                                                                    "HIGHLY_AVAILABLE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "carrier": {
                                                                "description": "The device's carrier.",
                                                                "type": "string"
                                                            },
                                                            "cpu": {
                                                                "description": "Information about the device's CPU.",
                                                                "properties": {
                                                                    "architecture": {
                                                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                                                        "type": "string"
                                                                    },
                                                                    "clock": {
                                                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "frequency": {
                                                                        "description": "The CPU's frequency.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "fleetName": {
                                                                "description": "The name of the fleet to which this device belongs.",
                                                                "type": "string"
                                                            },
                                                            "fleetType": {
                                                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                                "type": "string"
                                                            },
                                                            "formFactor": {
                                                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                                "enum": [
                                                                    "PHONE",
                                                                    "TABLET"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "heapSize": {
                                                                "description": "The device's heap size, expressed in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "image": {
                                                                "description": "The device's image name.",
                                                                "type": "string"
                                                            },
                                                            "instances": {
                                                                "description": "The instances belonging to this device.",
                                                                "items": {
                                                                    "description": "Represents the device instance.",
                                                                    "properties": {
                                                                        "arn": {
                                                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                            "minLength": 32,
                                                                            "type": "string"
                                                                        },
                                                                        "deviceArn": {
                                                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                                                            "minLength": 32,
                                                                            "type": "string"
                                                                        },
                                                                        "instanceProfile": {
                                                                            "description": "A object containing information about the instance profile.",
                                                                            "properties": {
                                                                                "arn": {
                                                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                    "minLength": 32,
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "description": "The description of the instance profile.",
                                                                                    "maxLength": 16384,
                                                                                    "minLength": 0,
                                                                                    "type": "string"
                                                                                },
                                                                                "excludeAppPackagesFromCleanup": {
                                                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The name of the instance profile.",
                                                                                    "maxLength": 256,
                                                                                    "minLength": 0,
                                                                                    "type": "string"
                                                                                },
                                                                                "packageCleanup": {
                                                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "rebootAfterUse": {
                                                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "labels": {
                                                                            "description": "An array of strings describing the device instance.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "status": {
                                                                            "description": "The status of the device instance. Valid values are listed below.",
                                                                            "enum": [
                                                                                "IN_USE",
                                                                                "PREPARING",
                                                                                "AVAILABLE",
                                                                                "NOT_AVAILABLE"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "udid": {
                                                                            "description": "Unique device identifier for the device instance.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "manufacturer": {
                                                                "description": "The device's manufacturer name.",
                                                                "type": "string"
                                                            },
                                                            "memory": {
                                                                "description": "The device's total memory size, expressed in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "model": {
                                                                "description": "The device's model name.",
                                                                "type": "string"
                                                            },
                                                            "modelId": {
                                                                "description": "The device's model ID.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The device's display name.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "os": {
                                                                "description": "The device's operating system type.",
                                                                "type": "string"
                                                            },
                                                            "platform": {
                                                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                                "enum": [
                                                                    "ANDROID",
                                                                    "IOS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "radio": {
                                                                "description": "The device's radio.",
                                                                "type": "string"
                                                            },
                                                            "remoteAccessEnabled": {
                                                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                                                "type": "boolean"
                                                            },
                                                            "remoteDebugEnabled": {
                                                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                                "type": "boolean"
                                                            },
                                                            "resolution": {
                                                                "description": "The resolution of the device.",
                                                                "properties": {
                                                                    "height": {
                                                                        "description": "The screen resolution's height, expressed in pixels.",
                                                                        "type": "integer"
                                                                    },
                                                                    "width": {
                                                                        "description": "The screen resolution's width, expressed in pixels.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deviceMinutes": {
                                                        "description": "Represents the total (metered or unmetered) minutes used by the job.",
                                                        "properties": {
                                                            "metered": {
                                                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "total": {
                                                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "unmetered": {
                                                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "instanceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the instance.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "A message about the job's result.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The job's name.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "result": {
                                                        "description": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PASSED",
                                                            "WARNED",
                                                            "FAILED",
                                                            "SKIPPED",
                                                            "ERRORED",
                                                            "STOPPED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "started": {
                                                        "description": "The job's start time.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PENDING_CONCURRENCY",
                                                            "PENDING_DEVICE",
                                                            "PROCESSING",
                                                            "SCHEDULING",
                                                            "PREPARING",
                                                            "RUNNING",
                                                            "COMPLETED",
                                                            "STOPPING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stopped": {
                                                        "description": "The job's stop time.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby test type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                        "enum": [
                                                            "BUILTIN_FUZZ",
                                                            "BUILTIN_EXPLORER",
                                                            "WEB_PERFORMANCE_PROFILE",
                                                            "APPIUM_JAVA_JUNIT",
                                                            "APPIUM_JAVA_TESTNG",
                                                            "APPIUM_PYTHON",
                                                            "APPIUM_NODE",
                                                            "APPIUM_RUBY",
                                                            "APPIUM_WEB_JAVA_JUNIT",
                                                            "APPIUM_WEB_JAVA_TESTNG",
                                                            "APPIUM_WEB_PYTHON",
                                                            "APPIUM_WEB_NODE",
                                                            "APPIUM_WEB_RUBY",
                                                            "CALABASH",
                                                            "INSTRUMENTATION",
                                                            "UIAUTOMATION",
                                                            "UIAUTOMATOR",
                                                            "XCTEST",
                                                            "XCTEST_UI",
                                                            "REMOTE_ACCESS_RECORD",
                                                            "REMOTE_ACCESS_REPLAY"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "videoCapture": {
                                                        "description": "This value is set to true if video capture is enabled; otherwise, it is set to false.",
                                                        "type": "boolean"
                                                    },
                                                    "videoEndpoint": {
                                                        "description": "The endpoint for streaming device video.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the list jobs operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The run's Amazon Resource Name (ARN).",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListNetworkProfiles": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns the list of available network profiles.",
                "operationId": "ListNetworkProfiles",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "networkProfiles": {
                                            "description": "A list of the available network profiles.",
                                            "items": {
                                                "description": "An array of settings that describes characteristics of a network profile.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the network profile.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "The description of the network profile.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "downlinkBandwidthBits": {
                                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                        "type": "integer"
                                                    },
                                                    "downlinkDelayMs": {
                                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                        "type": "integer"
                                                    },
                                                    "downlinkJitterMs": {
                                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                        "type": "integer"
                                                    },
                                                    "downlinkLossPercent": {
                                                        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                                        "maximum": 100,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "The name of the network profile.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "The type of network profile. Valid values are listed below.",
                                                        "enum": [
                                                            "CURATED",
                                                            "PRIVATE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "uplinkBandwidthBits": {
                                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                        "type": "integer"
                                                    },
                                                    "uplinkDelayMs": {
                                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                        "type": "integer"
                                                    },
                                                    "uplinkJitterMs": {
                                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                        "type": "integer"
                                                    },
                                                    "uplinkLossPercent": {
                                                        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                                        "maximum": 100,
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "nextToken": {
                                            "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the project for which you want to list network profiles.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "The type of network profile you wish to return information about. Valid values are listed below.",
                                        "enum": [
                                            "CURATED",
                                            "PRIVATE"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListOfferingPromotions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of offering promotions. Each offering promotion record contains the ID and description of the promotion. The API returns a <code>NotEligible</code> error if the caller is not permitted to invoke the operation. Contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.",
                "operationId": "ListOfferingPromotions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "nextToken": {
                                            "description": "An identifier to be used in the next call to this operation, to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "offeringPromotions": {
                                            "description": "Information about the offering promotions.",
                                            "items": {
                                                "description": "Represents information about an offering promotion.",
                                                "properties": {
                                                    "description": {
                                                        "description": "A string describing the offering promotion.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "description": "The ID of the offering promotion.",
                                                        "minLength": 4,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotEligibleException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListOfferingTransactions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of all historical purchases, renewals, and system renewal transactions for an AWS account. The list is paginated and ordered by a descending timestamp (most recent transactions are first). The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.",
                "operationId": "ListOfferingTransactions",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Returns the transaction log of the specified offerings.",
                                    "example": {
                                        "offeringTransactions": [
                                            {
                                                "cost": {
                                                    "amount": 0,
                                                    "currencyCode": "USD"
                                                },
                                                "createdOn": "1470021420",
                                                "offeringStatus": {
                                                    "effectiveOn": "1472688000",
                                                    "offering": {
                                                        "description": "Android Remote Access Unmetered Device Slot",
                                                        "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                                        "platform": "ANDROID",
                                                        "type": "RECURRING"
                                                    },
                                                    "quantity": 0,
                                                    "type": "RENEW"
                                                },
                                                "transactionId": "03728003-d1ea-4851-abd6-12345EXAMPLE"
                                            },
                                            {
                                                "cost": {
                                                    "amount": 250,
                                                    "currencyCode": "USD"
                                                },
                                                "createdOn": "1470021420",
                                                "offeringStatus": {
                                                    "effectiveOn": "1470021420",
                                                    "offering": {
                                                        "description": "Android Remote Access Unmetered Device Slot",
                                                        "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                                        "platform": "ANDROID",
                                                        "type": "RECURRING"
                                                    },
                                                    "quantity": 1,
                                                    "type": "PURCHASE"
                                                },
                                                "transactionId": "56820b6e-06bd-473a-8ff8-12345EXAMPLE"
                                            },
                                            {
                                                "cost": {
                                                    "amount": 175,
                                                    "currencyCode": "USD"
                                                },
                                                "createdOn": "1465538520",
                                                "offeringStatus": {
                                                    "effectiveOn": "1465538520",
                                                    "offering": {
                                                        "description": "Android Unmetered Device Slot",
                                                        "id": "8980F81C-00D7-469D-8EC6-12345EXAMPLE",
                                                        "platform": "ANDROID",
                                                        "type": "RECURRING"
                                                    },
                                                    "quantity": 1,
                                                    "type": "PURCHASE"
                                                },
                                                "transactionId": "953ae2c6-d760-4a04-9597-12345EXAMPLE"
                                            },
                                            {
                                                "cost": {
                                                    "amount": 8.07,
                                                    "currencyCode": "USD"
                                                },
                                                "createdOn": "1459344300",
                                                "offeringStatus": {
                                                    "effectiveOn": "1459344300",
                                                    "offering": {
                                                        "description": "iOS Unmetered Device Slot",
                                                        "id": "A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE",
                                                        "platform": "IOS",
                                                        "type": "RECURRING"
                                                    },
                                                    "quantity": 1,
                                                    "type": "PURCHASE"
                                                },
                                                "transactionId": "2baf9021-ae3e-47f5-ab52-12345EXAMPLE"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "offeringTransactions": {
                                            "description": "The audit log of subscriptions you have purchased and modified through AWS Device Farm.",
                                            "items": {
                                                "description": "Represents the metadata of an offering transaction.",
                                                "properties": {
                                                    "cost": {
                                                        "description": "The cost of an offering transaction.",
                                                        "properties": {
                                                            "amount": {
                                                                "description": "The numerical amount of an offering or transaction.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "currencyCode": {
                                                                "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                "enum": [
                                                                    "USD"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "createdOn": {
                                                        "description": "The date on which an offering transaction was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "offeringPromotionId": {
                                                        "description": "The ID that corresponds to a device offering promotion.",
                                                        "minLength": 4,
                                                        "type": "string"
                                                    },
                                                    "offeringStatus": {
                                                        "description": "The status of an offering transaction.",
                                                        "properties": {
                                                            "effectiveOn": {
                                                                "description": "The date on which the offering is effective.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "offering": {
                                                                "description": "Represents the metadata of an offering status.",
                                                                "properties": {
                                                                    "description": {
                                                                        "description": "A string describing the offering.",
                                                                        "maxLength": 16384,
                                                                        "minLength": 0,
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "description": "The ID that corresponds to a device offering.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "platform": {
                                                                        "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                                        "enum": [
                                                                            "ANDROID",
                                                                            "IOS"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "recurringCharges": {
                                                                        "description": "Specifies whether there are recurring charges for the offering.",
                                                                        "items": {
                                                                            "description": "Specifies whether charges for devices will be recurring.",
                                                                            "properties": {
                                                                                "cost": {
                                                                                    "description": "The cost of the recurring charge.",
                                                                                    "properties": {
                                                                                        "amount": {
                                                                                            "description": "The numerical amount of an offering or transaction.",
                                                                                            "format": "double",
                                                                                            "type": "number"
                                                                                        },
                                                                                        "currencyCode": {
                                                                                            "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                                            "enum": [
                                                                                                "USD"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "frequency": {
                                                                                    "description": "The frequency in which charges will recur.",
                                                                                    "enum": [
                                                                                        "MONTHLY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "type": {
                                                                        "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                                        "enum": [
                                                                            "RECURRING"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "quantity": {
                                                                "description": "The number of available devices in the offering.",
                                                                "type": "integer"
                                                            },
                                                            "type": {
                                                                "description": "The type specified for the offering status.",
                                                                "enum": [
                                                                    "PURCHASE",
                                                                    "RENEW",
                                                                    "SYSTEM"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "transactionId": {
                                                        "description": "The transaction ID of the offering transaction.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotEligibleException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request to list the offering transaction history.",
                                "example": {
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
                                },
                                "properties": {
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListOfferings": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of products or offerings that the user can manage through the API. Each offering record indicates the recurring price per unit and the frequency for that offering. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.",
                "operationId": "ListOfferings",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the return values of the list of offerings.",
                                    "example": {
                                        "offerings": [
                                            {
                                                "description": "iOS Unmetered Device Slot",
                                                "id": "A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE",
                                                "platform": "IOS",
                                                "recurringCharges": [
                                                    {
                                                        "cost": {
                                                            "amount": 250,
                                                            "currencyCode": "USD"
                                                        },
                                                        "frequency": "MONTHLY"
                                                    }
                                                ],
                                                "type": "RECURRING"
                                            },
                                            {
                                                "description": "Android Unmetered Device Slot",
                                                "id": "8980F81C-00D7-469D-8EC6-12345EXAMPLE",
                                                "platform": "ANDROID",
                                                "recurringCharges": [
                                                    {
                                                        "cost": {
                                                            "amount": 250,
                                                            "currencyCode": "USD"
                                                        },
                                                        "frequency": "MONTHLY"
                                                    }
                                                ],
                                                "type": "RECURRING"
                                            },
                                            {
                                                "description": "Android Remote Access Unmetered Device Slot",
                                                "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                                "platform": "ANDROID",
                                                "recurringCharges": [
                                                    {
                                                        "cost": {
                                                            "amount": 250,
                                                            "currencyCode": "USD"
                                                        },
                                                        "frequency": "MONTHLY"
                                                    }
                                                ],
                                                "type": "RECURRING"
                                            },
                                            {
                                                "description": "iOS Remote Access Unmetered Device Slot",
                                                "id": "552B4DAD-A6C9-45C4-94FB-12345EXAMPLE",
                                                "platform": "IOS",
                                                "recurringCharges": [
                                                    {
                                                        "cost": {
                                                            "amount": 250,
                                                            "currencyCode": "USD"
                                                        },
                                                        "frequency": "MONTHLY"
                                                    }
                                                ],
                                                "type": "RECURRING"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "offerings": {
                                            "description": "A value representing the list offering results.",
                                            "items": {
                                                "description": "Represents the metadata of a device offering.",
                                                "properties": {
                                                    "description": {
                                                        "description": "A string describing the offering.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "description": "The ID that corresponds to a device offering.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "platform": {
                                                        "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                        "enum": [
                                                            "ANDROID",
                                                            "IOS"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "recurringCharges": {
                                                        "description": "Specifies whether there are recurring charges for the offering.",
                                                        "items": {
                                                            "description": "Specifies whether charges for devices will be recurring.",
                                                            "properties": {
                                                                "cost": {
                                                                    "description": "The cost of the recurring charge.",
                                                                    "properties": {
                                                                        "amount": {
                                                                            "description": "The numerical amount of an offering or transaction.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        },
                                                                        "currencyCode": {
                                                                            "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                            "enum": [
                                                                                "USD"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "frequency": {
                                                                    "description": "The frequency in which charges will recur.",
                                                                    "enum": [
                                                                        "MONTHLY"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "type": {
                                                        "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                        "enum": [
                                                            "RECURRING"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotEligibleException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request to list all offerings.",
                                "example": {
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
                                },
                                "properties": {
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListProjects": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about projects.",
                "operationId": "ListProjects",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list projects request.",
                                    "example": {
                                        "projects": [
                                            {
                                                "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE",
                                                "created": "1453163262.105",
                                                "name": "My Test Project"
                                            },
                                            {
                                                "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:d6b087d9-56db-4e44-b9ec-12345EXAMPLE",
                                                "created": "1470350112.439",
                                                "name": "Hello World"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "projects": {
                                            "description": "Information about the projects.",
                                            "items": {
                                                "description": "Represents an operating-system neutral workspace for running and managing tests.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The project's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "created": {
                                                        "description": "When the project was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "defaultJobTimeoutMinutes": {
                                                        "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "The project's name.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the list projects operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE",
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm returns a list of all projects for the AWS account. You can also specify a project ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListRemoteAccessSessions": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns a list of all currently running remote access sessions.",
                "operationId": "ListRemoteAccessSessions",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the response from the server after AWS Device Farm makes a request to return information about the remote access session.",
                                    "example": {
                                        "remoteAccessSessions": []
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "remoteAccessSessions": {
                                            "description": "A container representing the metadata from the service about each remote access session you are requesting.",
                                            "items": {
                                                "description": "Represents information about the remote access session.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the remote access session.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "billingMethod": {
                                                        "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                                                        "enum": [
                                                            "METERED",
                                                            "UNMETERED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "clientId": {
                                                        "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "created": {
                                                        "description": "The date and time the remote access session was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "device": {
                                                        "description": "The device (phone or tablet) used in the remote access session.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The device's ARN.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "availability": {
                                                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                                "enum": [
                                                                    "TEMPORARY_NOT_AVAILABLE",
                                                                    "BUSY",
                                                                    "AVAILABLE",
                                                                    "HIGHLY_AVAILABLE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "carrier": {
                                                                "description": "The device's carrier.",
                                                                "type": "string"
                                                            },
                                                            "cpu": {
                                                                "description": "Information about the device's CPU.",
                                                                "properties": {
                                                                    "architecture": {
                                                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                                                        "type": "string"
                                                                    },
                                                                    "clock": {
                                                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "frequency": {
                                                                        "description": "The CPU's frequency.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "fleetName": {
                                                                "description": "The name of the fleet to which this device belongs.",
                                                                "type": "string"
                                                            },
                                                            "fleetType": {
                                                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                                "type": "string"
                                                            },
                                                            "formFactor": {
                                                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                                "enum": [
                                                                    "PHONE",
                                                                    "TABLET"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "heapSize": {
                                                                "description": "The device's heap size, expressed in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "image": {
                                                                "description": "The device's image name.",
                                                                "type": "string"
                                                            },
                                                            "instances": {
                                                                "description": "The instances belonging to this device.",
                                                                "items": {
                                                                    "description": "Represents the device instance.",
                                                                    "properties": {
                                                                        "arn": {
                                                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                            "minLength": 32,
                                                                            "type": "string"
                                                                        },
                                                                        "deviceArn": {
                                                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                                                            "minLength": 32,
                                                                            "type": "string"
                                                                        },
                                                                        "instanceProfile": {
                                                                            "description": "A object containing information about the instance profile.",
                                                                            "properties": {
                                                                                "arn": {
                                                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                    "minLength": 32,
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "description": "The description of the instance profile.",
                                                                                    "maxLength": 16384,
                                                                                    "minLength": 0,
                                                                                    "type": "string"
                                                                                },
                                                                                "excludeAppPackagesFromCleanup": {
                                                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "name": {
                                                                                    "description": "The name of the instance profile.",
                                                                                    "maxLength": 256,
                                                                                    "minLength": 0,
                                                                                    "type": "string"
                                                                                },
                                                                                "packageCleanup": {
                                                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "rebootAfterUse": {
                                                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "labels": {
                                                                            "description": "An array of strings describing the device instance.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "status": {
                                                                            "description": "The status of the device instance. Valid values are listed below.",
                                                                            "enum": [
                                                                                "IN_USE",
                                                                                "PREPARING",
                                                                                "AVAILABLE",
                                                                                "NOT_AVAILABLE"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "udid": {
                                                                            "description": "Unique device identifier for the device instance.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "manufacturer": {
                                                                "description": "The device's manufacturer name.",
                                                                "type": "string"
                                                            },
                                                            "memory": {
                                                                "description": "The device's total memory size, expressed in bytes.",
                                                                "type": "integer"
                                                            },
                                                            "model": {
                                                                "description": "The device's model name.",
                                                                "type": "string"
                                                            },
                                                            "modelId": {
                                                                "description": "The device's model ID.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "The device's display name.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "os": {
                                                                "description": "The device's operating system type.",
                                                                "type": "string"
                                                            },
                                                            "platform": {
                                                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                                "enum": [
                                                                    "ANDROID",
                                                                    "IOS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "radio": {
                                                                "description": "The device's radio.",
                                                                "type": "string"
                                                            },
                                                            "remoteAccessEnabled": {
                                                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                                                "type": "boolean"
                                                            },
                                                            "remoteDebugEnabled": {
                                                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                                "type": "boolean"
                                                            },
                                                            "resolution": {
                                                                "description": "The resolution of the device.",
                                                                "properties": {
                                                                    "height": {
                                                                        "description": "The screen resolution's height, expressed in pixels.",
                                                                        "type": "integer"
                                                                    },
                                                                    "width": {
                                                                        "description": "The screen resolution's width, expressed in pixels.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deviceMinutes": {
                                                        "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                                                        "properties": {
                                                            "metered": {
                                                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "total": {
                                                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "unmetered": {
                                                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deviceUdid": {
                                                        "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                                                        "type": "string"
                                                    },
                                                    "endpoint": {
                                                        "description": "The endpoint for the remote access sesssion.",
                                                        "type": "string"
                                                    },
                                                    "hostAddress": {
                                                        "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                                                        "maxLength": 1024,
                                                        "type": "string"
                                                    },
                                                    "instanceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the instance.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "interactionMode": {
                                                        "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                                                        "enum": [
                                                            "INTERACTIVE",
                                                            "NO_VIDEO",
                                                            "VIDEO_ONLY"
                                                        ],
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "A message about the remote access session.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The name of the remote access session.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "remoteDebugEnabled": {
                                                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                                                        "type": "boolean"
                                                    },
                                                    "remoteRecordAppArn": {
                                                        "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "remoteRecordEnabled": {
                                                        "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                                                        "type": "boolean"
                                                    },
                                                    "result": {
                                                        "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PASSED",
                                                            "WARNED",
                                                            "FAILED",
                                                            "SKIPPED",
                                                            "ERRORED",
                                                            "STOPPED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "skipAppResign": {
                                                        "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                        "type": "boolean"
                                                    },
                                                    "started": {
                                                        "description": "The date and time the remote access session was started.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PENDING_CONCURRENCY",
                                                            "PENDING_DEVICE",
                                                            "PROCESSING",
                                                            "SCHEDULING",
                                                            "PREPARING",
                                                            "RUNNING",
                                                            "COMPLETED",
                                                            "STOPPING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stopped": {
                                                        "description": "The date and time the remote access session was stopped.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request to return information about the remote access session.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456",
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListRuns": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about runs, given an AWS Device Farm project ARN.",
                "operationId": "ListRuns",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list runs request.",
                                    "example": {
                                        "runs": [
                                            {
                                                "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE",
                                                "billingMethod": "METERED",
                                                "completedJobs": 0,
                                                "counters": {
                                                    "errored": 0,
                                                    "failed": 0,
                                                    "passed": 0,
                                                    "skipped": 0,
                                                    "stopped": 0,
                                                    "total": 0,
                                                    "warned": 0
                                                },
                                                "created": "1472667509.852",
                                                "deviceMinutes": {
                                                    "metered": 0,
                                                    "total": 0,
                                                    "unmetered": 0
                                                },
                                                "name": "My Test Run",
                                                "platform": "ANDROID",
                                                "result": "PENDING",
                                                "status": "RUNNING",
                                                "totalJobs": 3,
                                                "type": "BUILTIN_EXPLORER"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "runs": {
                                            "description": "Information about the runs.",
                                            "items": {
                                                "description": "Represents a test run on a set of devices with a given app package, test parameters, etc.",
                                                "properties": {
                                                    "appUpload": {
                                                        "description": "An app to upload or that has been uploaded.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "arn": {
                                                        "description": "The run's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "billingMethod": {
                                                        "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                                        "enum": [
                                                            "METERED",
                                                            "UNMETERED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "completedJobs": {
                                                        "description": "The total number of completed jobs.",
                                                        "type": "integer"
                                                    },
                                                    "counters": {
                                                        "description": "The run's result counters.",
                                                        "properties": {
                                                            "errored": {
                                                                "description": "The number of errored entities.",
                                                                "type": "integer"
                                                            },
                                                            "failed": {
                                                                "description": "The number of failed entities.",
                                                                "type": "integer"
                                                            },
                                                            "passed": {
                                                                "description": "The number of passed entities.",
                                                                "type": "integer"
                                                            },
                                                            "skipped": {
                                                                "description": "The number of skipped entities.",
                                                                "type": "integer"
                                                            },
                                                            "stopped": {
                                                                "description": "The number of stopped entities.",
                                                                "type": "integer"
                                                            },
                                                            "total": {
                                                                "description": "The total number of entities.",
                                                                "type": "integer"
                                                            },
                                                            "warned": {
                                                                "description": "The number of warned entities.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created": {
                                                        "description": "When the run was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "customerArtifactPaths": {
                                                        "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                                                        "properties": {
                                                            "androidPaths": {
                                                                "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "deviceHostPaths": {
                                                                "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "iosPaths": {
                                                                "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deviceMinutes": {
                                                        "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                                                        "properties": {
                                                            "metered": {
                                                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "total": {
                                                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "unmetered": {
                                                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "devicePoolArn": {
                                                        "description": "The ARN of the device pool for the run.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "deviceSelectionResult": {
                                                        "description": "The results of a device filter used to select the devices for a test run.",
                                                        "properties": {
                                                            "filters": {
                                                                "description": "The filters in a device selection result.",
                                                                "items": {
                                                                    "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                                                    "properties": {
                                                                        "attribute": {
                                                                            "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                                            "enum": [
                                                                                "ARN",
                                                                                "PLATFORM",
                                                                                "OS_VERSION",
                                                                                "MODEL",
                                                                                "AVAILABILITY",
                                                                                "FORM_FACTOR",
                                                                                "MANUFACTURER",
                                                                                "REMOTE_ACCESS_ENABLED",
                                                                                "REMOTE_DEBUG_ENABLED",
                                                                                "INSTANCE_ARN",
                                                                                "INSTANCE_LABELS",
                                                                                "FLEET_TYPE"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                                            "enum": [
                                                                                "EQUALS",
                                                                                "LESS_THAN",
                                                                                "LESS_THAN_OR_EQUALS",
                                                                                "GREATER_THAN",
                                                                                "GREATER_THAN_OR_EQUALS",
                                                                                "IN",
                                                                                "NOT_IN",
                                                                                "CONTAINS"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchedDevicesCount": {
                                                                "description": "The number of devices that matched the device filter selection criteria.",
                                                                "type": "integer"
                                                            },
                                                            "maxDevices": {
                                                                "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "eventCount": {
                                                        "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                                                        "type": "integer"
                                                    },
                                                    "jobTimeoutMinutes": {
                                                        "description": "The number of minutes the job will execute before it times out.",
                                                        "type": "integer"
                                                    },
                                                    "locale": {
                                                        "description": "Information about the locale that is used for the run.",
                                                        "type": "string"
                                                    },
                                                    "location": {
                                                        "description": "Information about the location that is used for the run.",
                                                        "properties": {
                                                            "latitude": {
                                                                "description": "The latitude.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "longitude": {
                                                                "description": "The longitude.",
                                                                "format": "double",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "required": [
                                                            "latitude",
                                                            "longitude"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "message": {
                                                        "description": "A message about the run's result.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The run's name.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "networkProfile": {
                                                        "description": "The network profile being used for a test run.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The Amazon Resource Name (ARN) of the network profile.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "description": "The description of the network profile.",
                                                                "maxLength": 16384,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "downlinkBandwidthBits": {
                                                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                                "type": "integer"
                                                            },
                                                            "downlinkDelayMs": {
                                                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                                "type": "integer"
                                                            },
                                                            "downlinkJitterMs": {
                                                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                                "type": "integer"
                                                            },
                                                            "downlinkLossPercent": {
                                                                "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                                                "maximum": 100,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "description": "The name of the network profile.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "The type of network profile. Valid values are listed below.",
                                                                "enum": [
                                                                    "CURATED",
                                                                    "PRIVATE"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "uplinkBandwidthBits": {
                                                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                                "type": "integer"
                                                            },
                                                            "uplinkDelayMs": {
                                                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                                "type": "integer"
                                                            },
                                                            "uplinkJitterMs": {
                                                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                                "type": "integer"
                                                            },
                                                            "uplinkLossPercent": {
                                                                "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                                                "maximum": 100,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "parsingResultUrl": {
                                                        "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                                                        "type": "string"
                                                    },
                                                    "platform": {
                                                        "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                        "enum": [
                                                            "ANDROID",
                                                            "IOS"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "radios": {
                                                        "description": "Information about the radio states for the run.",
                                                        "properties": {
                                                            "bluetooth": {
                                                                "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                                                "type": "boolean"
                                                            },
                                                            "gps": {
                                                                "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                                                "type": "boolean"
                                                            },
                                                            "nfc": {
                                                                "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                                                "type": "boolean"
                                                            },
                                                            "wifi": {
                                                                "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "result": {
                                                        "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PASSED",
                                                            "WARNED",
                                                            "FAILED",
                                                            "SKIPPED",
                                                            "ERRORED",
                                                            "STOPPED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "resultCode": {
                                                        "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                                                        "enum": [
                                                            "PARSING_FAILED",
                                                            "VPC_ENDPOINT_SETUP_FAILED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "seed": {
                                                        "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                                                        "type": "integer"
                                                    },
                                                    "skipAppResign": {
                                                        "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                        "type": "boolean"
                                                    },
                                                    "started": {
                                                        "description": "The run's start time.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PENDING_CONCURRENCY",
                                                            "PENDING_DEVICE",
                                                            "PROCESSING",
                                                            "SCHEDULING",
                                                            "PREPARING",
                                                            "RUNNING",
                                                            "COMPLETED",
                                                            "STOPPING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stopped": {
                                                        "description": "The run's stop time.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "testSpecArn": {
                                                        "description": "The ARN of the YAML-formatted test specification for the run.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "totalJobs": {
                                                        "description": "The total number of jobs for the run.",
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                        "enum": [
                                                            "BUILTIN_FUZZ",
                                                            "BUILTIN_EXPLORER",
                                                            "WEB_PERFORMANCE_PROFILE",
                                                            "APPIUM_JAVA_JUNIT",
                                                            "APPIUM_JAVA_TESTNG",
                                                            "APPIUM_PYTHON",
                                                            "APPIUM_NODE",
                                                            "APPIUM_RUBY",
                                                            "APPIUM_WEB_JAVA_JUNIT",
                                                            "APPIUM_WEB_JAVA_TESTNG",
                                                            "APPIUM_WEB_PYTHON",
                                                            "APPIUM_WEB_NODE",
                                                            "APPIUM_WEB_RUBY",
                                                            "CALABASH",
                                                            "INSTRUMENTATION",
                                                            "UIAUTOMATION",
                                                            "UIAUTOMATOR",
                                                            "XCTEST",
                                                            "XCTEST_UI",
                                                            "REMOTE_ACCESS_RECORD",
                                                            "REMOTE_ACCESS_REPLAY"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "webUrl": {
                                                        "description": "The Device Farm console URL for the recording of the run.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the list runs operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE",
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the project for which you want to list runs.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListSamples": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about samples, given an AWS Device Farm job ARN.",
                "operationId": "ListSamples",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list samples request.",
                                    "example": {
                                        "samples": []
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "samples": {
                                            "description": "Information about the samples.",
                                            "items": {
                                                "description": "Represents a sample of performance data.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The sample's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "<p>The sample's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>CPU: A CPU sample type. This is expressed as the app processing CPU time (including child processes) as reported by process, as a percentage.</p> </li> <li> <p>MEMORY: A memory usage sample type. This is expressed as the total proportional set size of an app process, in kilobytes.</p> </li> <li> <p>NATIVE_AVG_DRAWTIME</p> </li> <li> <p>NATIVE_FPS</p> </li> <li> <p>NATIVE_FRAMES</p> </li> <li> <p>NATIVE_MAX_DRAWTIME</p> </li> <li> <p>NATIVE_MIN_DRAWTIME</p> </li> <li> <p>OPENGL_AVG_DRAWTIME</p> </li> <li> <p>OPENGL_FPS</p> </li> <li> <p>OPENGL_FRAMES</p> </li> <li> <p>OPENGL_MAX_DRAWTIME</p> </li> <li> <p>OPENGL_MIN_DRAWTIME</p> </li> <li> <p>RX</p> </li> <li> <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app process.</p> </li> <li> <p>THREADS: A threads sample type. This is expressed as the total number of threads per app process.</p> </li> <li> <p>TX</p> </li> <li> <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are received, by app process.</p> </li> </ul>",
                                                        "enum": [
                                                            "CPU",
                                                            "MEMORY",
                                                            "THREADS",
                                                            "RX_RATE",
                                                            "TX_RATE",
                                                            "RX",
                                                            "TX",
                                                            "NATIVE_FRAMES",
                                                            "NATIVE_FPS",
                                                            "NATIVE_MIN_DRAWTIME",
                                                            "NATIVE_AVG_DRAWTIME",
                                                            "NATIVE_MAX_DRAWTIME",
                                                            "OPENGL_FRAMES",
                                                            "OPENGL_FPS",
                                                            "OPENGL_MIN_DRAWTIME",
                                                            "OPENGL_AVG_DRAWTIME",
                                                            "OPENGL_MAX_DRAWTIME"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the sample's file.",
                                                        "maxLength": 2048,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the list samples operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the job used to list samples.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListSuites": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about test suites for a given job.",
                "operationId": "ListSuites",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list suites request.",
                                    "example": {
                                        "suites": []
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "suites": {
                                            "description": "Information about the suites.",
                                            "items": {
                                                "description": "Represents a collection of one or more tests.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The suite's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "counters": {
                                                        "description": "The suite's result counters.",
                                                        "properties": {
                                                            "errored": {
                                                                "description": "The number of errored entities.",
                                                                "type": "integer"
                                                            },
                                                            "failed": {
                                                                "description": "The number of failed entities.",
                                                                "type": "integer"
                                                            },
                                                            "passed": {
                                                                "description": "The number of passed entities.",
                                                                "type": "integer"
                                                            },
                                                            "skipped": {
                                                                "description": "The number of skipped entities.",
                                                                "type": "integer"
                                                            },
                                                            "stopped": {
                                                                "description": "The number of stopped entities.",
                                                                "type": "integer"
                                                            },
                                                            "total": {
                                                                "description": "The total number of entities.",
                                                                "type": "integer"
                                                            },
                                                            "warned": {
                                                                "description": "The number of warned entities.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created": {
                                                        "description": "When the suite was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "deviceMinutes": {
                                                        "description": "Represents the total (metered or unmetered) minutes used by the test suite.",
                                                        "properties": {
                                                            "metered": {
                                                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "total": {
                                                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "unmetered": {
                                                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "message": {
                                                        "description": "A message about the suite's result.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The suite's name.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "result": {
                                                        "description": "<p>The suite's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PASSED",
                                                            "WARNED",
                                                            "FAILED",
                                                            "SKIPPED",
                                                            "ERRORED",
                                                            "STOPPED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "started": {
                                                        "description": "The suite's start time.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "<p>The suite's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PENDING_CONCURRENCY",
                                                            "PENDING_DEVICE",
                                                            "PROCESSING",
                                                            "SCHEDULING",
                                                            "PREPARING",
                                                            "RUNNING",
                                                            "COMPLETED",
                                                            "STOPPING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stopped": {
                                                        "description": "The suite's stop time.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "<p>The suite's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                        "enum": [
                                                            "BUILTIN_FUZZ",
                                                            "BUILTIN_EXPLORER",
                                                            "WEB_PERFORMANCE_PROFILE",
                                                            "APPIUM_JAVA_JUNIT",
                                                            "APPIUM_JAVA_TESTNG",
                                                            "APPIUM_PYTHON",
                                                            "APPIUM_NODE",
                                                            "APPIUM_RUBY",
                                                            "APPIUM_WEB_JAVA_JUNIT",
                                                            "APPIUM_WEB_JAVA_TESTNG",
                                                            "APPIUM_WEB_PYTHON",
                                                            "APPIUM_WEB_NODE",
                                                            "APPIUM_WEB_RUBY",
                                                            "CALABASH",
                                                            "INSTRUMENTATION",
                                                            "UIAUTOMATION",
                                                            "UIAUTOMATOR",
                                                            "XCTEST",
                                                            "XCTEST_UI",
                                                            "REMOTE_ACCESS_RECORD",
                                                            "REMOTE_ACCESS_REPLAY"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the list suites operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The job's Amazon Resource Name (ARN).",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListTests": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about tests in a given test suite.",
                "operationId": "ListTests",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list tests request.",
                                    "example": {
                                        "tests": []
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "tests": {
                                            "description": "Information about the tests.",
                                            "items": {
                                                "description": "Represents a condition that is evaluated.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The test's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "counters": {
                                                        "description": "The test's result counters.",
                                                        "properties": {
                                                            "errored": {
                                                                "description": "The number of errored entities.",
                                                                "type": "integer"
                                                            },
                                                            "failed": {
                                                                "description": "The number of failed entities.",
                                                                "type": "integer"
                                                            },
                                                            "passed": {
                                                                "description": "The number of passed entities.",
                                                                "type": "integer"
                                                            },
                                                            "skipped": {
                                                                "description": "The number of skipped entities.",
                                                                "type": "integer"
                                                            },
                                                            "stopped": {
                                                                "description": "The number of stopped entities.",
                                                                "type": "integer"
                                                            },
                                                            "total": {
                                                                "description": "The total number of entities.",
                                                                "type": "integer"
                                                            },
                                                            "warned": {
                                                                "description": "The number of warned entities.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created": {
                                                        "description": "When the test was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "deviceMinutes": {
                                                        "description": "Represents the total (metered or unmetered) minutes used by the test.",
                                                        "properties": {
                                                            "metered": {
                                                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "total": {
                                                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "unmetered": {
                                                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                                "format": "double",
                                                                "type": "number"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "message": {
                                                        "description": "A message about the test's result.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The test's name.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "result": {
                                                        "description": "<p>The test's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PASSED",
                                                            "WARNED",
                                                            "FAILED",
                                                            "SKIPPED",
                                                            "ERRORED",
                                                            "STOPPED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "started": {
                                                        "description": "The test's start time.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "<p>The test's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                        "enum": [
                                                            "PENDING",
                                                            "PENDING_CONCURRENCY",
                                                            "PENDING_DEVICE",
                                                            "PROCESSING",
                                                            "SCHEDULING",
                                                            "PREPARING",
                                                            "RUNNING",
                                                            "COMPLETED",
                                                            "STOPPING"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stopped": {
                                                        "description": "The test's stop time.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                        "enum": [
                                                            "BUILTIN_FUZZ",
                                                            "BUILTIN_EXPLORER",
                                                            "WEB_PERFORMANCE_PROFILE",
                                                            "APPIUM_JAVA_JUNIT",
                                                            "APPIUM_JAVA_TESTNG",
                                                            "APPIUM_PYTHON",
                                                            "APPIUM_NODE",
                                                            "APPIUM_RUBY",
                                                            "APPIUM_WEB_JAVA_JUNIT",
                                                            "APPIUM_WEB_JAVA_TESTNG",
                                                            "APPIUM_WEB_PYTHON",
                                                            "APPIUM_WEB_NODE",
                                                            "APPIUM_WEB_RUBY",
                                                            "CALABASH",
                                                            "INSTRUMENTATION",
                                                            "UIAUTOMATION",
                                                            "UIAUTOMATOR",
                                                            "XCTEST",
                                                            "XCTEST_UI",
                                                            "REMOTE_ACCESS_RECORD",
                                                            "REMOTE_ACCESS_REPLAY"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the list tests operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The test suite's Amazon Resource Name (ARN).",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListUniqueProblems": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about unique problems.",
                "operationId": "ListUniqueProblems",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list unique problems request.",
                                    "example": {
                                        "uniqueProblems": {}
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "uniqueProblems": {
                                            "description": "<p>Information about the unique problems.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "enum": [
                                                            "PENDING",
                                                            "PASSED",
                                                            "WARNED",
                                                            "FAILED",
                                                            "SKIPPED",
                                                            "ERRORED",
                                                            "STOPPED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "items": {
                                                            "description": "A collection of one or more problems, grouped by their result.",
                                                            "properties": {
                                                                "message": {
                                                                    "description": "A message about the unique problems' result.",
                                                                    "maxLength": 16384,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "problems": {
                                                                    "description": "Information about the problems.",
                                                                    "items": {
                                                                        "description": "Represents a specific warning or failure.",
                                                                        "properties": {
                                                                            "device": {
                                                                                "description": "Information about the associated device.",
                                                                                "properties": {
                                                                                    "arn": {
                                                                                        "description": "The device's ARN.",
                                                                                        "minLength": 32,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "availability": {
                                                                                        "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                                                        "enum": [
                                                                                            "TEMPORARY_NOT_AVAILABLE",
                                                                                            "BUSY",
                                                                                            "AVAILABLE",
                                                                                            "HIGHLY_AVAILABLE"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    },
                                                                                    "carrier": {
                                                                                        "description": "The device's carrier.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "cpu": {
                                                                                        "description": "Information about the device's CPU.",
                                                                                        "properties": {
                                                                                            "architecture": {
                                                                                                "description": "The CPU's architecture, for example x86 or ARM.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "clock": {
                                                                                                "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                                                "format": "double",
                                                                                                "type": "number"
                                                                                            },
                                                                                            "frequency": {
                                                                                                "description": "The CPU's frequency.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "fleetName": {
                                                                                        "description": "The name of the fleet to which this device belongs.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "fleetType": {
                                                                                        "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "formFactor": {
                                                                                        "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                                                        "enum": [
                                                                                            "PHONE",
                                                                                            "TABLET"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    },
                                                                                    "heapSize": {
                                                                                        "description": "The device's heap size, expressed in bytes.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "image": {
                                                                                        "description": "The device's image name.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "instances": {
                                                                                        "description": "The instances belonging to this device.",
                                                                                        "items": {
                                                                                            "description": "Represents the device instance.",
                                                                                            "properties": {
                                                                                                "arn": {
                                                                                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                                                    "minLength": 32,
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "deviceArn": {
                                                                                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                                                                                    "minLength": 32,
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "instanceProfile": {
                                                                                                    "description": "A object containing information about the instance profile.",
                                                                                                    "properties": {
                                                                                                        "arn": {
                                                                                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                                            "minLength": 32,
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "description": {
                                                                                                            "description": "The description of the instance profile.",
                                                                                                            "maxLength": 16384,
                                                                                                            "minLength": 0,
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "excludeAppPackagesFromCleanup": {
                                                                                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "description": "The name of the instance profile.",
                                                                                                            "maxLength": 256,
                                                                                                            "minLength": 0,
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "packageCleanup": {
                                                                                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                                            "type": "boolean"
                                                                                                        },
                                                                                                        "rebootAfterUse": {
                                                                                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                                            "type": "boolean"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "labels": {
                                                                                                    "description": "An array of strings describing the device instance.",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "status": {
                                                                                                    "description": "The status of the device instance. Valid values are listed below.",
                                                                                                    "enum": [
                                                                                                        "IN_USE",
                                                                                                        "PREPARING",
                                                                                                        "AVAILABLE",
                                                                                                        "NOT_AVAILABLE"
                                                                                                    ],
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "udid": {
                                                                                                    "description": "Unique device identifier for the device instance.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "manufacturer": {
                                                                                        "description": "The device's manufacturer name.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "memory": {
                                                                                        "description": "The device's total memory size, expressed in bytes.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "model": {
                                                                                        "description": "The device's model name.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "modelId": {
                                                                                        "description": "The device's model ID.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The device's display name.",
                                                                                        "maxLength": 256,
                                                                                        "minLength": 0,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "os": {
                                                                                        "description": "The device's operating system type.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "platform": {
                                                                                        "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                                                        "enum": [
                                                                                            "ANDROID",
                                                                                            "IOS"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    },
                                                                                    "radio": {
                                                                                        "description": "The device's radio.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "remoteAccessEnabled": {
                                                                                        "description": "Specifies whether remote access has been enabled for the specified device.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "remoteDebugEnabled": {
                                                                                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "resolution": {
                                                                                        "description": "The resolution of the device.",
                                                                                        "properties": {
                                                                                            "height": {
                                                                                                "description": "The screen resolution's height, expressed in pixels.",
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "width": {
                                                                                                "description": "The screen resolution's width, expressed in pixels.",
                                                                                                "type": "integer"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "job": {
                                                                                "description": "Information about the associated job.",
                                                                                "properties": {
                                                                                    "arn": {
                                                                                        "description": "The problem detail's ARN.",
                                                                                        "minLength": 32,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The problem detail's name.",
                                                                                        "maxLength": 256,
                                                                                        "minLength": 0,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "message": {
                                                                                "description": "A message about the problem's result.",
                                                                                "maxLength": 16384,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "result": {
                                                                                "description": "<p>The problem's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                                                "enum": [
                                                                                    "PENDING",
                                                                                    "PASSED",
                                                                                    "WARNED",
                                                                                    "FAILED",
                                                                                    "SKIPPED",
                                                                                    "ERRORED",
                                                                                    "STOPPED"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "run": {
                                                                                "description": "Information about the associated run.",
                                                                                "properties": {
                                                                                    "arn": {
                                                                                        "description": "The problem detail's ARN.",
                                                                                        "minLength": 32,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The problem detail's name.",
                                                                                        "maxLength": 256,
                                                                                        "minLength": 0,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "suite": {
                                                                                "description": "Information about the associated suite.",
                                                                                "properties": {
                                                                                    "arn": {
                                                                                        "description": "The problem detail's ARN.",
                                                                                        "minLength": 32,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The problem detail's name.",
                                                                                        "maxLength": 256,
                                                                                        "minLength": 0,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "test": {
                                                                                "description": "Information about the associated test.",
                                                                                "properties": {
                                                                                    "arn": {
                                                                                        "description": "The problem detail's ARN.",
                                                                                        "minLength": 32,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The problem detail's name.",
                                                                                        "maxLength": 256,
                                                                                        "minLength": 0,
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the list unique problems operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The unique problems' ARNs.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListUploads": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Gets information about uploads, given an AWS Device Farm project ARN.",
                "operationId": "ListUploads",
                "parameters": [
                    {
                        "description": "Pagination token",
                        "in": "query",
                        "name": "nextToken",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a list uploads request.",
                                    "example": {
                                        "uploads": []
                                    },
                                    "properties": {
                                        "nextToken": {
                                            "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "uploads": {
                                            "description": "Information about the uploads.",
                                            "items": {
                                                "description": "An app or a set of one or more tests to upload or that have been uploaded.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The upload's ARN.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "category": {
                                                        "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                                        "enum": [
                                                            "CURATED",
                                                            "PRIVATE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "contentType": {
                                                        "description": "The upload's content type (for example, \"application/octet-stream\").",
                                                        "maxLength": 64,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "created": {
                                                        "description": "When the upload was created.",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "A message about the upload's result.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "metadata": {
                                                        "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                                        "maxLength": 8192,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "The upload's file name.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                                        "enum": [
                                                            "INITIALIZED",
                                                            "PROCESSING",
                                                            "SUCCEEDED",
                                                            "FAILED"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                                        "enum": [
                                                            "ANDROID_APP",
                                                            "IOS_APP",
                                                            "WEB_APP",
                                                            "EXTERNAL_DATA",
                                                            "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                                            "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                                            "APPIUM_PYTHON_TEST_PACKAGE",
                                                            "APPIUM_NODE_TEST_PACKAGE",
                                                            "APPIUM_RUBY_TEST_PACKAGE",
                                                            "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                                            "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                                            "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                                            "APPIUM_WEB_NODE_TEST_PACKAGE",
                                                            "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                                            "CALABASH_TEST_PACKAGE",
                                                            "INSTRUMENTATION_TEST_PACKAGE",
                                                            "UIAUTOMATION_TEST_PACKAGE",
                                                            "UIAUTOMATOR_TEST_PACKAGE",
                                                            "XCTEST_TEST_PACKAGE",
                                                            "XCTEST_UI_TEST_PACKAGE",
                                                            "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                                            "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                                            "APPIUM_PYTHON_TEST_SPEC",
                                                            "APPIUM_NODE_TEST_SPEC",
                                                            "APPIUM_RUBY_TEST_SPEC",
                                                            "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                                            "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                                            "APPIUM_WEB_PYTHON_TEST_SPEC",
                                                            "APPIUM_WEB_NODE_TEST_SPEC",
                                                            "APPIUM_WEB_RUBY_TEST_SPEC",
                                                            "INSTRUMENTATION_TEST_SPEC",
                                                            "XCTEST_UI_TEST_SPEC"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                                        "maxLength": 2048,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the list uploads operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the project for which you want to list uploads.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "<p>The type of upload.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for a web app.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p> APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                        "enum": [
                                            "ANDROID_APP",
                                            "IOS_APP",
                                            "WEB_APP",
                                            "EXTERNAL_DATA",
                                            "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                            "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                            "APPIUM_PYTHON_TEST_PACKAGE",
                                            "APPIUM_NODE_TEST_PACKAGE",
                                            "APPIUM_RUBY_TEST_PACKAGE",
                                            "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                            "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                            "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                            "APPIUM_WEB_NODE_TEST_PACKAGE",
                                            "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                            "CALABASH_TEST_PACKAGE",
                                            "INSTRUMENTATION_TEST_PACKAGE",
                                            "UIAUTOMATION_TEST_PACKAGE",
                                            "UIAUTOMATOR_TEST_PACKAGE",
                                            "XCTEST_TEST_PACKAGE",
                                            "XCTEST_UI_TEST_PACKAGE",
                                            "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                            "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                            "APPIUM_PYTHON_TEST_SPEC",
                                            "APPIUM_NODE_TEST_SPEC",
                                            "APPIUM_RUBY_TEST_SPEC",
                                            "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                            "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                            "APPIUM_WEB_PYTHON_TEST_SPEC",
                                            "APPIUM_WEB_NODE_TEST_SPEC",
                                            "APPIUM_WEB_RUBY_TEST_SPEC",
                                            "INSTRUMENTATION_TEST_SPEC",
                                            "XCTEST_UI_TEST_SPEC"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ListVPCEConfigurations": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Returns information about all Amazon Virtual Private Cloud (VPC) endpoint configurations in the AWS account.",
                "operationId": "ListVPCEConfigurations",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "nextToken": {
                                            "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                            "maxLength": 1024,
                                            "minLength": 4,
                                            "type": "string"
                                        },
                                        "vpceConfigurations": {
                                            "description": "An array of <code>VPCEConfiguration</code> objects containing information about your VPC endpoint configuration.",
                                            "items": {
                                                "description": "Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "serviceDnsName": {
                                                        "description": "The DNS name that maps to the private IP address of the service you want to access.",
                                                        "maxLength": 2048,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "vpceConfigurationDescription": {
                                                        "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                                        "maxLength": 2048,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "vpceConfigurationName": {
                                                        "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                                        "maxLength": 1024,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "vpceServiceName": {
                                                        "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                                        "maxLength": 2048,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "maxResults": {
                                        "description": "An integer specifying the maximum number of items you want to return in the API response.",
                                        "type": "integer"
                                    },
                                    "nextToken": {
                                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                        "maxLength": 1024,
                                        "minLength": 4,
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#PurchaseOffering": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Immediately purchases offerings for an AWS account. Offerings renew with the latest total purchased quantity for an offering, unless the renewal was overridden. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.",
                "operationId": "PurchaseOffering",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The result of the purchase offering (e.g., success or failure).",
                                    "example": {
                                        "offeringTransaction": {
                                            "cost": {
                                                "amount": 8.07,
                                                "currencyCode": "USD"
                                            },
                                            "createdOn": "1472648340",
                                            "offeringStatus": {
                                                "effectiveOn": "1472648340",
                                                "offering": {
                                                    "description": "Android Remote Access Unmetered Device Slot",
                                                    "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                                    "platform": "ANDROID",
                                                    "type": "RECURRING"
                                                },
                                                "quantity": 1,
                                                "type": "PURCHASE"
                                            },
                                            "transactionId": "d30614ed-1b03-404c-9893-12345EXAMPLE"
                                        }
                                    },
                                    "properties": {
                                        "offeringTransaction": {
                                            "description": "Represents the offering transaction for the purchase result.",
                                            "properties": {
                                                "cost": {
                                                    "description": "The cost of an offering transaction.",
                                                    "properties": {
                                                        "amount": {
                                                            "description": "The numerical amount of an offering or transaction.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "currencyCode": {
                                                            "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                            "enum": [
                                                                "USD"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "createdOn": {
                                                    "description": "The date on which an offering transaction was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "offeringPromotionId": {
                                                    "description": "The ID that corresponds to a device offering promotion.",
                                                    "minLength": 4,
                                                    "type": "string"
                                                },
                                                "offeringStatus": {
                                                    "description": "The status of an offering transaction.",
                                                    "properties": {
                                                        "effectiveOn": {
                                                            "description": "The date on which the offering is effective.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "offering": {
                                                            "description": "Represents the metadata of an offering status.",
                                                            "properties": {
                                                                "description": {
                                                                    "description": "A string describing the offering.",
                                                                    "maxLength": 16384,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "description": "The ID that corresponds to a device offering.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "platform": {
                                                                    "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                                    "enum": [
                                                                        "ANDROID",
                                                                        "IOS"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "recurringCharges": {
                                                                    "description": "Specifies whether there are recurring charges for the offering.",
                                                                    "items": {
                                                                        "description": "Specifies whether charges for devices will be recurring.",
                                                                        "properties": {
                                                                            "cost": {
                                                                                "description": "The cost of the recurring charge.",
                                                                                "properties": {
                                                                                    "amount": {
                                                                                        "description": "The numerical amount of an offering or transaction.",
                                                                                        "format": "double",
                                                                                        "type": "number"
                                                                                    },
                                                                                    "currencyCode": {
                                                                                        "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                                        "enum": [
                                                                                            "USD"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "frequency": {
                                                                                "description": "The frequency in which charges will recur.",
                                                                                "enum": [
                                                                                    "MONTHLY"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "type": {
                                                                    "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                                    "enum": [
                                                                        "RECURRING"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "quantity": {
                                                            "description": "The number of available devices in the offering.",
                                                            "type": "integer"
                                                        },
                                                        "type": {
                                                            "description": "The type specified for the offering status.",
                                                            "enum": [
                                                                "PURCHASE",
                                                                "RENEW",
                                                                "SYSTEM"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "transactionId": {
                                                    "description": "The transaction ID of the offering transaction.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotEligibleException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request for a purchase offering.",
                                "example": {
                                    "offeringId": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                    "quantity": 1
                                },
                                "properties": {
                                    "offeringId": {
                                        "description": "The ID of the offering.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "offeringPromotionId": {
                                        "description": "The ID of the offering promotion to be applied to the purchase.",
                                        "minLength": 4,
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "description": "The number of device slots you wish to purchase in an offering request.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#RenewOffering": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Explicitly sets the quantity of devices to renew for an offering, starting from the <code>effectiveDate</code> of the next period. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to invoke this operation.",
                "operationId": "RenewOffering",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "The result of a renewal offering.",
                                    "example": {
                                        "offeringTransaction": {
                                            "cost": {
                                                "amount": 250,
                                                "currencyCode": "USD"
                                            },
                                            "createdOn": "1472648880",
                                            "offeringStatus": {
                                                "effectiveOn": "1472688000",
                                                "offering": {
                                                    "description": "Android Remote Access Unmetered Device Slot",
                                                    "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                                    "platform": "ANDROID",
                                                    "type": "RECURRING"
                                                },
                                                "quantity": 1,
                                                "type": "RENEW"
                                            },
                                            "transactionId": "e90f1405-8c35-4561-be43-12345EXAMPLE"
                                        }
                                    },
                                    "properties": {
                                        "offeringTransaction": {
                                            "description": "Represents the status of the offering transaction for the renewal.",
                                            "properties": {
                                                "cost": {
                                                    "description": "The cost of an offering transaction.",
                                                    "properties": {
                                                        "amount": {
                                                            "description": "The numerical amount of an offering or transaction.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "currencyCode": {
                                                            "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                            "enum": [
                                                                "USD"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "createdOn": {
                                                    "description": "The date on which an offering transaction was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "offeringPromotionId": {
                                                    "description": "The ID that corresponds to a device offering promotion.",
                                                    "minLength": 4,
                                                    "type": "string"
                                                },
                                                "offeringStatus": {
                                                    "description": "The status of an offering transaction.",
                                                    "properties": {
                                                        "effectiveOn": {
                                                            "description": "The date on which the offering is effective.",
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "offering": {
                                                            "description": "Represents the metadata of an offering status.",
                                                            "properties": {
                                                                "description": {
                                                                    "description": "A string describing the offering.",
                                                                    "maxLength": 16384,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "description": "The ID that corresponds to a device offering.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "platform": {
                                                                    "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                                    "enum": [
                                                                        "ANDROID",
                                                                        "IOS"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "recurringCharges": {
                                                                    "description": "Specifies whether there are recurring charges for the offering.",
                                                                    "items": {
                                                                        "description": "Specifies whether charges for devices will be recurring.",
                                                                        "properties": {
                                                                            "cost": {
                                                                                "description": "The cost of the recurring charge.",
                                                                                "properties": {
                                                                                    "amount": {
                                                                                        "description": "The numerical amount of an offering or transaction.",
                                                                                        "format": "double",
                                                                                        "type": "number"
                                                                                    },
                                                                                    "currencyCode": {
                                                                                        "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                                        "enum": [
                                                                                            "USD"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "frequency": {
                                                                                "description": "The frequency in which charges will recur.",
                                                                                "enum": [
                                                                                    "MONTHLY"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "type": {
                                                                    "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                                    "enum": [
                                                                        "RECURRING"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "quantity": {
                                                            "description": "The number of available devices in the offering.",
                                                            "type": "integer"
                                                        },
                                                        "type": {
                                                            "description": "The type specified for the offering status.",
                                                            "enum": [
                                                                "PURCHASE",
                                                                "RENEW",
                                                                "SYSTEM"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "transactionId": {
                                                    "description": "The transaction ID of the offering transaction.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "NotEligibleException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request representing an offering renewal.",
                                "example": {
                                    "offeringId": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                    "quantity": 1
                                },
                                "properties": {
                                    "offeringId": {
                                        "description": "The ID of a request to renew an offering.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "description": "The quantity requested in an offering renewal.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#ScheduleRun": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Schedules a run.",
                "operationId": "ScheduleRun",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of a schedule run request.",
                                    "example": {
                                        "run": {}
                                    },
                                    "properties": {
                                        "run": {
                                            "description": "Information about the scheduled run.",
                                            "properties": {
                                                "appUpload": {
                                                    "description": "An app to upload or that has been uploaded.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "arn": {
                                                    "description": "The run's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "billingMethod": {
                                                    "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                                    "enum": [
                                                        "METERED",
                                                        "UNMETERED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "completedJobs": {
                                                    "description": "The total number of completed jobs.",
                                                    "type": "integer"
                                                },
                                                "counters": {
                                                    "description": "The run's result counters.",
                                                    "properties": {
                                                        "errored": {
                                                            "description": "The number of errored entities.",
                                                            "type": "integer"
                                                        },
                                                        "failed": {
                                                            "description": "The number of failed entities.",
                                                            "type": "integer"
                                                        },
                                                        "passed": {
                                                            "description": "The number of passed entities.",
                                                            "type": "integer"
                                                        },
                                                        "skipped": {
                                                            "description": "The number of skipped entities.",
                                                            "type": "integer"
                                                        },
                                                        "stopped": {
                                                            "description": "The number of stopped entities.",
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "description": "The total number of entities.",
                                                            "type": "integer"
                                                        },
                                                        "warned": {
                                                            "description": "The number of warned entities.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created": {
                                                    "description": "When the run was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "customerArtifactPaths": {
                                                    "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                                                    "properties": {
                                                        "androidPaths": {
                                                            "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "deviceHostPaths": {
                                                            "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "iosPaths": {
                                                            "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceMinutes": {
                                                    "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "devicePoolArn": {
                                                    "description": "The ARN of the device pool for the run.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceSelectionResult": {
                                                    "description": "The results of a device filter used to select the devices for a test run.",
                                                    "properties": {
                                                        "filters": {
                                                            "description": "The filters in a device selection result.",
                                                            "items": {
                                                                "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                                                "properties": {
                                                                    "attribute": {
                                                                        "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                                        "enum": [
                                                                            "ARN",
                                                                            "PLATFORM",
                                                                            "OS_VERSION",
                                                                            "MODEL",
                                                                            "AVAILABILITY",
                                                                            "FORM_FACTOR",
                                                                            "MANUFACTURER",
                                                                            "REMOTE_ACCESS_ENABLED",
                                                                            "REMOTE_DEBUG_ENABLED",
                                                                            "INSTANCE_ARN",
                                                                            "INSTANCE_LABELS",
                                                                            "FLEET_TYPE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "operator": {
                                                                        "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                                        "enum": [
                                                                            "EQUALS",
                                                                            "LESS_THAN",
                                                                            "LESS_THAN_OR_EQUALS",
                                                                            "GREATER_THAN",
                                                                            "GREATER_THAN_OR_EQUALS",
                                                                            "IN",
                                                                            "NOT_IN",
                                                                            "CONTAINS"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "values": {
                                                                        "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "matchedDevicesCount": {
                                                            "description": "The number of devices that matched the device filter selection criteria.",
                                                            "type": "integer"
                                                        },
                                                        "maxDevices": {
                                                            "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "eventCount": {
                                                    "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                                                    "type": "integer"
                                                },
                                                "jobTimeoutMinutes": {
                                                    "description": "The number of minutes the job will execute before it times out.",
                                                    "type": "integer"
                                                },
                                                "locale": {
                                                    "description": "Information about the locale that is used for the run.",
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "description": "Information about the location that is used for the run.",
                                                    "properties": {
                                                        "latitude": {
                                                            "description": "The latitude.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "longitude": {
                                                            "description": "The longitude.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "latitude",
                                                        "longitude"
                                                    ],
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "A message about the run's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The run's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "networkProfile": {
                                                    "description": "The network profile being used for a test run.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the network profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the network profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "downlinkBandwidthBits": {
                                                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                            "type": "integer"
                                                        },
                                                        "downlinkDelayMs": {
                                                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "downlinkJitterMs": {
                                                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "downlinkLossPercent": {
                                                            "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                                            "maximum": 100,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "description": "The name of the network profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The type of network profile. Valid values are listed below.",
                                                            "enum": [
                                                                "CURATED",
                                                                "PRIVATE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "uplinkBandwidthBits": {
                                                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                            "type": "integer"
                                                        },
                                                        "uplinkDelayMs": {
                                                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "uplinkJitterMs": {
                                                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "uplinkLossPercent": {
                                                            "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                                            "maximum": 100,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "parsingResultUrl": {
                                                    "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                                                    "type": "string"
                                                },
                                                "platform": {
                                                    "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                    "enum": [
                                                        "ANDROID",
                                                        "IOS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "radios": {
                                                    "description": "Information about the radio states for the run.",
                                                    "properties": {
                                                        "bluetooth": {
                                                            "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        },
                                                        "gps": {
                                                            "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        },
                                                        "nfc": {
                                                            "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        },
                                                        "wifi": {
                                                            "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "result": {
                                                    "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "resultCode": {
                                                    "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                                                    "enum": [
                                                        "PARSING_FAILED",
                                                        "VPC_ENDPOINT_SETUP_FAILED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "seed": {
                                                    "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                                                    "type": "integer"
                                                },
                                                "skipAppResign": {
                                                    "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                    "type": "boolean"
                                                },
                                                "started": {
                                                    "description": "The run's start time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The run's stop time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "testSpecArn": {
                                                    "description": "The ARN of the YAML-formatted test specification for the run.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "totalJobs": {
                                                    "description": "The total number of jobs for the run.",
                                                    "type": "integer"
                                                },
                                                "type": {
                                                    "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                    "enum": [
                                                        "BUILTIN_FUZZ",
                                                        "BUILTIN_EXPLORER",
                                                        "WEB_PERFORMANCE_PROFILE",
                                                        "APPIUM_JAVA_JUNIT",
                                                        "APPIUM_JAVA_TESTNG",
                                                        "APPIUM_PYTHON",
                                                        "APPIUM_NODE",
                                                        "APPIUM_RUBY",
                                                        "APPIUM_WEB_JAVA_JUNIT",
                                                        "APPIUM_WEB_JAVA_TESTNG",
                                                        "APPIUM_WEB_PYTHON",
                                                        "APPIUM_WEB_NODE",
                                                        "APPIUM_WEB_RUBY",
                                                        "CALABASH",
                                                        "INSTRUMENTATION",
                                                        "UIAUTOMATION",
                                                        "UIAUTOMATOR",
                                                        "XCTEST",
                                                        "XCTEST_UI",
                                                        "REMOTE_ACCESS_RECORD",
                                                        "REMOTE_ACCESS_REPLAY"
                                                    ],
                                                    "type": "string"
                                                },
                                                "webUrl": {
                                                    "description": "The Device Farm console URL for the recording of the run.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "IdempotencyException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the schedule run operation.",
                                "example": {
                                    "devicePoolArn": "arn:aws:devicefarm:us-west-2:123456789101:pool:EXAMPLE-GUID-123-456",
                                    "name": "MyRun",
                                    "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                                    "test": {
                                        "testPackageArn": "arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456",
                                        "type": "APPIUM_JAVA_JUNIT"
                                    }
                                },
                                "properties": {
                                    "appArn": {
                                        "description": "The ARN of the app to schedule a run.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "configuration": {
                                        "description": "Information about the settings for the run to be scheduled.",
                                        "properties": {
                                            "auxiliaryApps": {
                                                "description": "A list of auxiliary apps for the run.",
                                                "items": {
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "billingMethod": {
                                                "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                                "enum": [
                                                    "METERED",
                                                    "UNMETERED"
                                                ],
                                                "type": "string"
                                            },
                                            "customerArtifactPaths": {
                                                "description": "Input <code>CustomerArtifactPaths</code> object for the scheduled run configuration.",
                                                "properties": {
                                                    "androidPaths": {
                                                        "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "deviceHostPaths": {
                                                        "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "iosPaths": {
                                                        "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "extraDataPackageArn": {
                                                "description": "The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm will extract to external data for Android or the app's sandbox for iOS.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "locale": {
                                                "description": "Information about the locale that is used for the run.",
                                                "type": "string"
                                            },
                                            "location": {
                                                "description": "Information about the location that is used for the run.",
                                                "properties": {
                                                    "latitude": {
                                                        "description": "The latitude.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "longitude": {
                                                        "description": "The longitude.",
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "latitude",
                                                    "longitude"
                                                ],
                                                "type": "object"
                                            },
                                            "networkProfileArn": {
                                                "description": "Reserved for internal use.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "radios": {
                                                "description": "Information about the radio states for the run.",
                                                "properties": {
                                                    "bluetooth": {
                                                        "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                                        "type": "boolean"
                                                    },
                                                    "gps": {
                                                        "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                                        "type": "boolean"
                                                    },
                                                    "nfc": {
                                                        "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                                        "type": "boolean"
                                                    },
                                                    "wifi": {
                                                        "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "vpceConfigurationArns": {
                                                "description": "An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.",
                                                "items": {
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "devicePoolArn": {
                                        "description": "The ARN of the device pool for the run to be scheduled.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "deviceSelectionConfiguration": {
                                        "description": "<p>The filter criteria used to dynamically select a set of devices for a test run, as well as the maximum number of devices to be included in the run.</p> <p>Either <b> <code>devicePoolArn</code> </b> or <b> <code>deviceSelectionConfiguration</code> </b> is required in a request.</p>",
                                        "properties": {
                                            "filters": {
                                                "description": "<p>Used to dynamically select a set of devices for a test run. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p> <b>Attribute</b> </p> <p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> </li> <li> <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> </li> <li> <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p> </li> <li> <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> </li> <li> <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> <li> <p> <b>Operator</b> </p> <p>The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p> <b>Values</b> </p> <p>An array of one or more filter values.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> </ul>",
                                                "items": {
                                                    "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                                    "properties": {
                                                        "attribute": {
                                                            "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                            "enum": [
                                                                "ARN",
                                                                "PLATFORM",
                                                                "OS_VERSION",
                                                                "MODEL",
                                                                "AVAILABILITY",
                                                                "FORM_FACTOR",
                                                                "MANUFACTURER",
                                                                "REMOTE_ACCESS_ENABLED",
                                                                "REMOTE_DEBUG_ENABLED",
                                                                "INSTANCE_ARN",
                                                                "INSTANCE_LABELS",
                                                                "FLEET_TYPE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                            "enum": [
                                                                "EQUALS",
                                                                "LESS_THAN",
                                                                "LESS_THAN_OR_EQUALS",
                                                                "GREATER_THAN",
                                                                "GREATER_THAN_OR_EQUALS",
                                                                "IN",
                                                                "NOT_IN",
                                                                "CONTAINS"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "values": {
                                                            "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "maxDevices": {
                                                "description": "The maximum number of devices to be included in a test run.",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "filters",
                                            "maxDevices"
                                        ],
                                        "type": "object"
                                    },
                                    "executionConfiguration": {
                                        "description": "Specifies configuration information about a test run, such as the execution timeout (in minutes).",
                                        "properties": {
                                            "accountsCleanup": {
                                                "description": "True if account cleanup is enabled at the beginning of the test; otherwise, false.",
                                                "type": "boolean"
                                            },
                                            "appPackagesCleanup": {
                                                "description": "True if app package cleanup is enabled at the beginning of the test; otherwise, false.",
                                                "type": "boolean"
                                            },
                                            "jobTimeoutMinutes": {
                                                "description": "The number of minutes a test run will execute before it times out.",
                                                "type": "integer"
                                            },
                                            "skipAppResign": {
                                                "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                "type": "boolean"
                                            },
                                            "videoCapture": {
                                                "description": "Set to true to enable video capture; otherwise, set to false. The default is true.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "name": {
                                        "description": "The name for the run to be scheduled.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "projectArn": {
                                        "description": "The ARN of the project for the run to be scheduled.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "test": {
                                        "description": "Information about the test for the run to be scheduled.",
                                        "properties": {
                                            "filter": {
                                                "description": "The test's filter.",
                                                "maxLength": 8192,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "parameters": {
                                                "description": "<p>The test's parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.</p> <p>For all tests:</p> <ul> <li> <p>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to \"false\" to disable it.</p> </li> </ul> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile, for example, \"my_profile_name\".</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don't have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are \"1.6.5\" (and higher), \"latest\", and \"default\".</p> <ul> <li> <p>“latest” will run the latest Appium version supported by Device Farm (1.9.1).</p> </li> <li> <p>For “default”, Device Farm will choose a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For Fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A username to use if the Explorer encounters a login form. If not supplied, no username will be inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password will be inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: \"LoginTests\"</p> </li> <li> <p>Running a multiple test classes: \"LoginTests,SmokeTests\"</p> </li> <li> <p>Running a single test: \"LoginTests/testValid\"</p> </li> <li> <p>Running multiple tests: \"LoginTests/testValid,LoginTests/testInvalid\"</p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul>",
                                                "items": {
                                                    "properties": {
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "testPackageArn": {
                                                "description": "The ARN of the uploaded test that will be run.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "testSpecArn": {
                                                "description": "The ARN of the YAML-formatted test specification.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "type": {
                                                "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                "enum": [
                                                    "BUILTIN_FUZZ",
                                                    "BUILTIN_EXPLORER",
                                                    "WEB_PERFORMANCE_PROFILE",
                                                    "APPIUM_JAVA_JUNIT",
                                                    "APPIUM_JAVA_TESTNG",
                                                    "APPIUM_PYTHON",
                                                    "APPIUM_NODE",
                                                    "APPIUM_RUBY",
                                                    "APPIUM_WEB_JAVA_JUNIT",
                                                    "APPIUM_WEB_JAVA_TESTNG",
                                                    "APPIUM_WEB_PYTHON",
                                                    "APPIUM_WEB_NODE",
                                                    "APPIUM_WEB_RUBY",
                                                    "CALABASH",
                                                    "INSTRUMENTATION",
                                                    "UIAUTOMATION",
                                                    "UIAUTOMATOR",
                                                    "XCTEST",
                                                    "XCTEST_UI",
                                                    "REMOTE_ACCESS_RECORD",
                                                    "REMOTE_ACCESS_REPLAY"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "projectArn",
                                    "test"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StopJob": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Initiates a stop request for the current job. AWS Device Farm will immediately stop the job on the device where tests have not started executing, and you will not be billed for this device. On the device where tests have started executing, Setup Suite and Teardown Suite tests will run to completion before stopping execution on the device. You will be billed for Setup, Teardown, and any tests that were in progress or already completed.",
                "operationId": "StopJob",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "job": {
                                            "description": "The job that was stopped.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The job's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "counters": {
                                                    "description": "The job's result counters.",
                                                    "properties": {
                                                        "errored": {
                                                            "description": "The number of errored entities.",
                                                            "type": "integer"
                                                        },
                                                        "failed": {
                                                            "description": "The number of failed entities.",
                                                            "type": "integer"
                                                        },
                                                        "passed": {
                                                            "description": "The number of passed entities.",
                                                            "type": "integer"
                                                        },
                                                        "skipped": {
                                                            "description": "The number of skipped entities.",
                                                            "type": "integer"
                                                        },
                                                        "stopped": {
                                                            "description": "The number of stopped entities.",
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "description": "The total number of entities.",
                                                            "type": "integer"
                                                        },
                                                        "warned": {
                                                            "description": "The number of warned entities.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created": {
                                                    "description": "When the job was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "device": {
                                                    "description": "The device (phone or tablet).",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The device's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "availability": {
                                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                            "enum": [
                                                                "TEMPORARY_NOT_AVAILABLE",
                                                                "BUSY",
                                                                "AVAILABLE",
                                                                "HIGHLY_AVAILABLE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "carrier": {
                                                            "description": "The device's carrier.",
                                                            "type": "string"
                                                        },
                                                        "cpu": {
                                                            "description": "Information about the device's CPU.",
                                                            "properties": {
                                                                "architecture": {
                                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                                    "type": "string"
                                                                },
                                                                "clock": {
                                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "frequency": {
                                                                    "description": "The CPU's frequency.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "fleetName": {
                                                            "description": "The name of the fleet to which this device belongs.",
                                                            "type": "string"
                                                        },
                                                        "fleetType": {
                                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                            "type": "string"
                                                        },
                                                        "formFactor": {
                                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                            "enum": [
                                                                "PHONE",
                                                                "TABLET"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "heapSize": {
                                                            "description": "The device's heap size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "image": {
                                                            "description": "The device's image name.",
                                                            "type": "string"
                                                        },
                                                        "instances": {
                                                            "description": "The instances belonging to this device.",
                                                            "items": {
                                                                "description": "Represents the device instance.",
                                                                "properties": {
                                                                    "arn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "deviceArn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "instanceProfile": {
                                                                        "description": "A object containing information about the instance profile.",
                                                                        "properties": {
                                                                            "arn": {
                                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                "minLength": 32,
                                                                                "type": "string"
                                                                            },
                                                                            "description": {
                                                                                "description": "The description of the instance profile.",
                                                                                "maxLength": 16384,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "excludeAppPackagesFromCleanup": {
                                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "name": {
                                                                                "description": "The name of the instance profile.",
                                                                                "maxLength": 256,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "packageCleanup": {
                                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "rebootAfterUse": {
                                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "An array of strings describing the device instance.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "status": {
                                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                                        "enum": [
                                                                            "IN_USE",
                                                                            "PREPARING",
                                                                            "AVAILABLE",
                                                                            "NOT_AVAILABLE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "udid": {
                                                                        "description": "Unique device identifier for the device instance.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "manufacturer": {
                                                            "description": "The device's manufacturer name.",
                                                            "type": "string"
                                                        },
                                                        "memory": {
                                                            "description": "The device's total memory size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "model": {
                                                            "description": "The device's model name.",
                                                            "type": "string"
                                                        },
                                                        "modelId": {
                                                            "description": "The device's model ID.",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The device's display name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "os": {
                                                            "description": "The device's operating system type.",
                                                            "type": "string"
                                                        },
                                                        "platform": {
                                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                            "enum": [
                                                                "ANDROID",
                                                                "IOS"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "radio": {
                                                            "description": "The device's radio.",
                                                            "type": "string"
                                                        },
                                                        "remoteAccessEnabled": {
                                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                                            "type": "boolean"
                                                        },
                                                        "remoteDebugEnabled": {
                                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                            "type": "boolean"
                                                        },
                                                        "resolution": {
                                                            "description": "The resolution of the device.",
                                                            "properties": {
                                                                "height": {
                                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                                    "type": "integer"
                                                                },
                                                                "width": {
                                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceMinutes": {
                                                    "description": "Represents the total (metered or unmetered) minutes used by the job.",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "instanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "A message about the job's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The job's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "result": {
                                                    "description": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "started": {
                                                    "description": "The job's start time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The job's stop time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby test type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                    "enum": [
                                                        "BUILTIN_FUZZ",
                                                        "BUILTIN_EXPLORER",
                                                        "WEB_PERFORMANCE_PROFILE",
                                                        "APPIUM_JAVA_JUNIT",
                                                        "APPIUM_JAVA_TESTNG",
                                                        "APPIUM_PYTHON",
                                                        "APPIUM_NODE",
                                                        "APPIUM_RUBY",
                                                        "APPIUM_WEB_JAVA_JUNIT",
                                                        "APPIUM_WEB_JAVA_TESTNG",
                                                        "APPIUM_WEB_PYTHON",
                                                        "APPIUM_WEB_NODE",
                                                        "APPIUM_WEB_RUBY",
                                                        "CALABASH",
                                                        "INSTRUMENTATION",
                                                        "UIAUTOMATION",
                                                        "UIAUTOMATOR",
                                                        "XCTEST",
                                                        "XCTEST_UI",
                                                        "REMOTE_ACCESS_RECORD",
                                                        "REMOTE_ACCESS_REPLAY"
                                                    ],
                                                    "type": "string"
                                                },
                                                "videoCapture": {
                                                    "description": "This value is set to true if video capture is enabled; otherwise, it is set to false.",
                                                    "type": "boolean"
                                                },
                                                "videoEndpoint": {
                                                    "description": "The endpoint for streaming device video.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm job you wish to stop.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StopRemoteAccessSession": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Ends a specified remote access session.",
                "operationId": "StopRemoteAccessSession",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the response from the server that describes the remote access session when AWS Device Farm stops the session.",
                                    "properties": {
                                        "remoteAccessSession": {
                                            "description": "A container representing the metadata from the service about the remote access session you are stopping.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the remote access session.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "billingMethod": {
                                                    "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                                                    "enum": [
                                                        "METERED",
                                                        "UNMETERED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "clientId": {
                                                    "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "The date and time the remote access session was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "device": {
                                                    "description": "The device (phone or tablet) used in the remote access session.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The device's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "availability": {
                                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                            "enum": [
                                                                "TEMPORARY_NOT_AVAILABLE",
                                                                "BUSY",
                                                                "AVAILABLE",
                                                                "HIGHLY_AVAILABLE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "carrier": {
                                                            "description": "The device's carrier.",
                                                            "type": "string"
                                                        },
                                                        "cpu": {
                                                            "description": "Information about the device's CPU.",
                                                            "properties": {
                                                                "architecture": {
                                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                                    "type": "string"
                                                                },
                                                                "clock": {
                                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "frequency": {
                                                                    "description": "The CPU's frequency.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "fleetName": {
                                                            "description": "The name of the fleet to which this device belongs.",
                                                            "type": "string"
                                                        },
                                                        "fleetType": {
                                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                            "type": "string"
                                                        },
                                                        "formFactor": {
                                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                            "enum": [
                                                                "PHONE",
                                                                "TABLET"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "heapSize": {
                                                            "description": "The device's heap size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "image": {
                                                            "description": "The device's image name.",
                                                            "type": "string"
                                                        },
                                                        "instances": {
                                                            "description": "The instances belonging to this device.",
                                                            "items": {
                                                                "description": "Represents the device instance.",
                                                                "properties": {
                                                                    "arn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "deviceArn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "instanceProfile": {
                                                                        "description": "A object containing information about the instance profile.",
                                                                        "properties": {
                                                                            "arn": {
                                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                "minLength": 32,
                                                                                "type": "string"
                                                                            },
                                                                            "description": {
                                                                                "description": "The description of the instance profile.",
                                                                                "maxLength": 16384,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "excludeAppPackagesFromCleanup": {
                                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "name": {
                                                                                "description": "The name of the instance profile.",
                                                                                "maxLength": 256,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "packageCleanup": {
                                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "rebootAfterUse": {
                                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "An array of strings describing the device instance.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "status": {
                                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                                        "enum": [
                                                                            "IN_USE",
                                                                            "PREPARING",
                                                                            "AVAILABLE",
                                                                            "NOT_AVAILABLE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "udid": {
                                                                        "description": "Unique device identifier for the device instance.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "manufacturer": {
                                                            "description": "The device's manufacturer name.",
                                                            "type": "string"
                                                        },
                                                        "memory": {
                                                            "description": "The device's total memory size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "model": {
                                                            "description": "The device's model name.",
                                                            "type": "string"
                                                        },
                                                        "modelId": {
                                                            "description": "The device's model ID.",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The device's display name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "os": {
                                                            "description": "The device's operating system type.",
                                                            "type": "string"
                                                        },
                                                        "platform": {
                                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                            "enum": [
                                                                "ANDROID",
                                                                "IOS"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "radio": {
                                                            "description": "The device's radio.",
                                                            "type": "string"
                                                        },
                                                        "remoteAccessEnabled": {
                                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                                            "type": "boolean"
                                                        },
                                                        "remoteDebugEnabled": {
                                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                            "type": "boolean"
                                                        },
                                                        "resolution": {
                                                            "description": "The resolution of the device.",
                                                            "properties": {
                                                                "height": {
                                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                                    "type": "integer"
                                                                },
                                                                "width": {
                                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceMinutes": {
                                                    "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceUdid": {
                                                    "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                                                    "type": "string"
                                                },
                                                "endpoint": {
                                                    "description": "The endpoint for the remote access sesssion.",
                                                    "type": "string"
                                                },
                                                "hostAddress": {
                                                    "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                                                    "maxLength": 1024,
                                                    "type": "string"
                                                },
                                                "instanceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "interactionMode": {
                                                    "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                                                    "enum": [
                                                        "INTERACTIVE",
                                                        "NO_VIDEO",
                                                        "VIDEO_ONLY"
                                                    ],
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "A message about the remote access session.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The name of the remote access session.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "remoteDebugEnabled": {
                                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                                                    "type": "boolean"
                                                },
                                                "remoteRecordAppArn": {
                                                    "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "remoteRecordEnabled": {
                                                    "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                                                    "type": "boolean"
                                                },
                                                "result": {
                                                    "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "skipAppResign": {
                                                    "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                    "type": "boolean"
                                                },
                                                "started": {
                                                    "description": "The date and time the remote access session was started.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The date and time the remote access session was stopped.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request to stop the remote access session.",
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the remote access session you wish to stop.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#StopRun": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Initiates a stop request for the current test run. AWS Device Farm will immediately stop the run on devices where tests have not started executing, and you will not be billed for these devices. On devices where tests have started executing, Setup Suite and Teardown Suite tests will run to completion before stopping execution on those devices. You will be billed for Setup, Teardown, and any tests that were in progress or already completed.",
                "operationId": "StopRun",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the results of your stop run attempt.",
                                    "example": {
                                        "run": {}
                                    },
                                    "properties": {
                                        "run": {
                                            "description": "The run that was stopped.",
                                            "properties": {
                                                "appUpload": {
                                                    "description": "An app to upload or that has been uploaded.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "arn": {
                                                    "description": "The run's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "billingMethod": {
                                                    "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                                    "enum": [
                                                        "METERED",
                                                        "UNMETERED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "completedJobs": {
                                                    "description": "The total number of completed jobs.",
                                                    "type": "integer"
                                                },
                                                "counters": {
                                                    "description": "The run's result counters.",
                                                    "properties": {
                                                        "errored": {
                                                            "description": "The number of errored entities.",
                                                            "type": "integer"
                                                        },
                                                        "failed": {
                                                            "description": "The number of failed entities.",
                                                            "type": "integer"
                                                        },
                                                        "passed": {
                                                            "description": "The number of passed entities.",
                                                            "type": "integer"
                                                        },
                                                        "skipped": {
                                                            "description": "The number of skipped entities.",
                                                            "type": "integer"
                                                        },
                                                        "stopped": {
                                                            "description": "The number of stopped entities.",
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "description": "The total number of entities.",
                                                            "type": "integer"
                                                        },
                                                        "warned": {
                                                            "description": "The number of warned entities.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created": {
                                                    "description": "When the run was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "customerArtifactPaths": {
                                                    "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                                                    "properties": {
                                                        "androidPaths": {
                                                            "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "deviceHostPaths": {
                                                            "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "iosPaths": {
                                                            "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "deviceMinutes": {
                                                    "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                                                    "properties": {
                                                        "metered": {
                                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "total": {
                                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "unmetered": {
                                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "devicePoolArn": {
                                                    "description": "The ARN of the device pool for the run.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceSelectionResult": {
                                                    "description": "The results of a device filter used to select the devices for a test run.",
                                                    "properties": {
                                                        "filters": {
                                                            "description": "The filters in a device selection result.",
                                                            "items": {
                                                                "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                                                "properties": {
                                                                    "attribute": {
                                                                        "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                                        "enum": [
                                                                            "ARN",
                                                                            "PLATFORM",
                                                                            "OS_VERSION",
                                                                            "MODEL",
                                                                            "AVAILABILITY",
                                                                            "FORM_FACTOR",
                                                                            "MANUFACTURER",
                                                                            "REMOTE_ACCESS_ENABLED",
                                                                            "REMOTE_DEBUG_ENABLED",
                                                                            "INSTANCE_ARN",
                                                                            "INSTANCE_LABELS",
                                                                            "FLEET_TYPE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "operator": {
                                                                        "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                                        "enum": [
                                                                            "EQUALS",
                                                                            "LESS_THAN",
                                                                            "LESS_THAN_OR_EQUALS",
                                                                            "GREATER_THAN",
                                                                            "GREATER_THAN_OR_EQUALS",
                                                                            "IN",
                                                                            "NOT_IN",
                                                                            "CONTAINS"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "values": {
                                                                        "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "matchedDevicesCount": {
                                                            "description": "The number of devices that matched the device filter selection criteria.",
                                                            "type": "integer"
                                                        },
                                                        "maxDevices": {
                                                            "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "eventCount": {
                                                    "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                                                    "type": "integer"
                                                },
                                                "jobTimeoutMinutes": {
                                                    "description": "The number of minutes the job will execute before it times out.",
                                                    "type": "integer"
                                                },
                                                "locale": {
                                                    "description": "Information about the locale that is used for the run.",
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "description": "Information about the location that is used for the run.",
                                                    "properties": {
                                                        "latitude": {
                                                            "description": "The latitude.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "longitude": {
                                                            "description": "The longitude.",
                                                            "format": "double",
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "latitude",
                                                        "longitude"
                                                    ],
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "A message about the run's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The run's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "networkProfile": {
                                                    "description": "The network profile being used for a test run.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the network profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the network profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "downlinkBandwidthBits": {
                                                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                            "type": "integer"
                                                        },
                                                        "downlinkDelayMs": {
                                                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "downlinkJitterMs": {
                                                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "downlinkLossPercent": {
                                                            "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                                            "maximum": 100,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "description": "The name of the network profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The type of network profile. Valid values are listed below.",
                                                            "enum": [
                                                                "CURATED",
                                                                "PRIVATE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "uplinkBandwidthBits": {
                                                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                            "type": "integer"
                                                        },
                                                        "uplinkDelayMs": {
                                                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "uplinkJitterMs": {
                                                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                            "type": "integer"
                                                        },
                                                        "uplinkLossPercent": {
                                                            "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                                            "maximum": 100,
                                                            "minimum": 0,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "parsingResultUrl": {
                                                    "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                                                    "type": "string"
                                                },
                                                "platform": {
                                                    "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                    "enum": [
                                                        "ANDROID",
                                                        "IOS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "radios": {
                                                    "description": "Information about the radio states for the run.",
                                                    "properties": {
                                                        "bluetooth": {
                                                            "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        },
                                                        "gps": {
                                                            "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        },
                                                        "nfc": {
                                                            "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        },
                                                        "wifi": {
                                                            "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "result": {
                                                    "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "resultCode": {
                                                    "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                                                    "enum": [
                                                        "PARSING_FAILED",
                                                        "VPC_ENDPOINT_SETUP_FAILED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "seed": {
                                                    "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                                                    "type": "integer"
                                                },
                                                "skipAppResign": {
                                                    "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                                    "type": "boolean"
                                                },
                                                "started": {
                                                    "description": "The run's start time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PENDING_CONCURRENCY",
                                                        "PENDING_DEVICE",
                                                        "PROCESSING",
                                                        "SCHEDULING",
                                                        "PREPARING",
                                                        "RUNNING",
                                                        "COMPLETED",
                                                        "STOPPING"
                                                    ],
                                                    "type": "string"
                                                },
                                                "stopped": {
                                                    "description": "The run's stop time.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "testSpecArn": {
                                                    "description": "The ARN of the YAML-formatted test specification for the run.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "totalJobs": {
                                                    "description": "The total number of jobs for the run.",
                                                    "type": "integer"
                                                },
                                                "type": {
                                                    "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                                    "enum": [
                                                        "BUILTIN_FUZZ",
                                                        "BUILTIN_EXPLORER",
                                                        "WEB_PERFORMANCE_PROFILE",
                                                        "APPIUM_JAVA_JUNIT",
                                                        "APPIUM_JAVA_TESTNG",
                                                        "APPIUM_PYTHON",
                                                        "APPIUM_NODE",
                                                        "APPIUM_RUBY",
                                                        "APPIUM_WEB_JAVA_JUNIT",
                                                        "APPIUM_WEB_JAVA_TESTNG",
                                                        "APPIUM_WEB_PYTHON",
                                                        "APPIUM_WEB_NODE",
                                                        "APPIUM_WEB_RUBY",
                                                        "CALABASH",
                                                        "INSTRUMENTATION",
                                                        "UIAUTOMATION",
                                                        "UIAUTOMATOR",
                                                        "XCTEST",
                                                        "XCTEST_UI",
                                                        "REMOTE_ACCESS_RECORD",
                                                        "REMOTE_ACCESS_REPLAY"
                                                    ],
                                                    "type": "string"
                                                },
                                                "webUrl": {
                                                    "description": "The Device Farm console URL for the recording of the run.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents the request to stop a specific run.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm run you wish to stop.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateDeviceInstance": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates information about an existing private device instance.",
                "operationId": "UpdateDeviceInstance",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "deviceInstance": {
                                            "description": "An object containing information about your device instance.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "instanceProfile": {
                                                    "description": "A object containing information about the instance profile.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the instance profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "excludeAppPackagesFromCleanup": {
                                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the instance profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "packageCleanup": {
                                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                            "type": "boolean"
                                                        },
                                                        "rebootAfterUse": {
                                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "labels": {
                                                    "description": "An array of strings describing the device instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "status": {
                                                    "description": "The status of the device instance. Valid values are listed below.",
                                                    "enum": [
                                                        "IN_USE",
                                                        "PREPARING",
                                                        "AVAILABLE",
                                                        "NOT_AVAILABLE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "udid": {
                                                    "description": "Unique device identifier for the device instance.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "labels": {
                                        "description": "An array of strings that you want to associate with the device instance.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "profileArn": {
                                        "description": "The Amazon Resource Name (ARN) of the profile that you want to associate with the device instance.",
                                        "minLength": 32,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateDevicePool": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Modifies the name, description, and rules in a device pool given the attributes and the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as a whole (or not at all).",
                "operationId": "UpdateDevicePool",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of an update device pool request.",
                                    "example": {
                                        "devicePool": {}
                                    },
                                    "properties": {
                                        "devicePool": {
                                            "description": "The device pool you just updated.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The device pool's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The device pool's description.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "maxDevices": {
                                                    "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "The device pool's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "rules": {
                                                    "description": "Information about the device pool's rules.",
                                                    "items": {
                                                        "description": "Represents a condition for a device pool.",
                                                        "properties": {
                                                            "attribute": {
                                                                "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                                "enum": [
                                                                    "ARN",
                                                                    "PLATFORM",
                                                                    "FORM_FACTOR",
                                                                    "MANUFACTURER",
                                                                    "REMOTE_ACCESS_ENABLED",
                                                                    "REMOTE_DEBUG_ENABLED",
                                                                    "APPIUM_VERSION",
                                                                    "INSTANCE_ARN",
                                                                    "INSTANCE_LABELS",
                                                                    "FLEET_TYPE",
                                                                    "OS_VERSION",
                                                                    "MODEL",
                                                                    "AVAILABILITY"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "operator": {
                                                                "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                                "enum": [
                                                                    "EQUALS",
                                                                    "LESS_THAN",
                                                                    "LESS_THAN_OR_EQUALS",
                                                                    "GREATER_THAN",
                                                                    "GREATER_THAN_OR_EQUALS",
                                                                    "IN",
                                                                    "NOT_IN",
                                                                    "CONTAINS"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "description": "The rule's value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the update device pool operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE",
                                    "description": "NewDescription",
                                    "name": "NewName",
                                    "rules": [
                                        {
                                            "attribute": "REMOTE_ACCESS_ENABLED",
                                            "operator": "EQUALS",
                                            "value": "True"
                                        }
                                    ]
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resourc Name (ARN) of the Device Farm device pool you wish to update.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "clearMaxDevices": {
                                        "description": "<p>Sets whether the <code>maxDevices</code> parameter applies to your device pool. If you set this parameter to <code>true</code>, the <code>maxDevices</code> parameter does not apply, and Device Farm does not limit the number of devices that it adds to your device pool. In this case, Device Farm adds all available devices that meet the criteria that are specified for the <code>rules</code> parameter.</p> <p>If you use this parameter in your request, you cannot use the <code>maxDevices</code> parameter in the same request.</p>",
                                        "type": "boolean"
                                    },
                                    "description": {
                                        "description": "A description of the device pool you wish to update.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "maxDevices": {
                                        "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p> <p>If you use this parameter in your request, you cannot use the <code>clearMaxDevices</code> parameter in the same request.</p>",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "A string representing the name of the device pool you wish to update.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "rules": {
                                        "description": "Represents the rules you wish to modify for the device pool. Updating rules is optional; however, if you choose to update rules for your request, the update will replace the existing rules.",
                                        "items": {
                                            "description": "Represents a condition for a device pool.",
                                            "properties": {
                                                "attribute": {
                                                    "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                    "enum": [
                                                        "ARN",
                                                        "PLATFORM",
                                                        "FORM_FACTOR",
                                                        "MANUFACTURER",
                                                        "REMOTE_ACCESS_ENABLED",
                                                        "REMOTE_DEBUG_ENABLED",
                                                        "APPIUM_VERSION",
                                                        "INSTANCE_ARN",
                                                        "INSTANCE_LABELS",
                                                        "FLEET_TYPE",
                                                        "OS_VERSION",
                                                        "MODEL",
                                                        "AVAILABILITY"
                                                    ],
                                                    "type": "string"
                                                },
                                                "operator": {
                                                    "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                    "enum": [
                                                        "EQUALS",
                                                        "LESS_THAN",
                                                        "LESS_THAN_OR_EQUALS",
                                                        "GREATER_THAN",
                                                        "GREATER_THAN_OR_EQUALS",
                                                        "IN",
                                                        "NOT_IN",
                                                        "CONTAINS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The rule's value.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateInstanceProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates information about an existing private device instance profile.",
                "operationId": "UpdateInstanceProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "instanceProfile": {
                                            "description": "An object containing information about your instance profile.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the instance profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "excludeAppPackagesFromCleanup": {
                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the instance profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "packageCleanup": {
                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                    "type": "boolean"
                                                },
                                                "rebootAfterUse": {
                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The updated description for your instance profile.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "excludeAppPackagesFromCleanup": {
                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "The updated name for your instance profile.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "packageCleanup": {
                                        "description": "The updated choice for whether you want to specify package cleanup. The default value is <code>false</code> for private devices.",
                                        "type": "boolean"
                                    },
                                    "rebootAfterUse": {
                                        "description": "The updated choice for whether you want to reboot the device after use. The default value is <code>true</code>.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateNetworkProfile": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates the network profile with specific settings.",
                "operationId": "UpdateNetworkProfile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "networkProfile": {
                                            "description": "A list of the available network profiles.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the network profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the network profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "downlinkBandwidthBits": {
                                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                    "type": "integer"
                                                },
                                                "downlinkDelayMs": {
                                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "downlinkJitterMs": {
                                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "downlinkLossPercent": {
                                                    "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                                    "maximum": 100,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "The name of the network profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "The type of network profile. Valid values are listed below.",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "uplinkBandwidthBits": {
                                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                                    "type": "integer"
                                                },
                                                "uplinkDelayMs": {
                                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "uplinkJitterMs": {
                                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                                    "type": "integer"
                                                },
                                                "uplinkLossPercent": {
                                                    "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                                    "maximum": 100,
                                                    "minimum": 0,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the project for which you want to update network profile settings.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The descriptoin of the network profile about which you are returning information.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "downlinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "downlinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkLossPercent": {
                                        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "The name of the network profile about which you are returning information.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "The type of network profile you wish to return information about. Valid values are listed below.",
                                        "enum": [
                                            "CURATED",
                                            "PRIVATE"
                                        ],
                                        "type": "string"
                                    },
                                    "uplinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "uplinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkLossPercent": {
                                        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateProject": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Modifies the specified project name, given the project ARN and a new name.",
                "operationId": "UpdateProject",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Represents the result of an update project request.",
                                    "example": {
                                        "project": {
                                            "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE",
                                            "created": "1448400709.927",
                                            "name": "NewName"
                                        }
                                    },
                                    "properties": {
                                        "project": {
                                            "description": "The project you wish to update.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The project's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "When the project was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "defaultJobTimeoutMinutes": {
                                                    "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "The project's name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Represents a request to the update project operation.",
                                "example": {
                                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE",
                                    "name": "NewName"
                                },
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the project whose name you wish to update.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "defaultJobTimeoutMinutes": {
                                        "description": "The number of minutes a test run in the project will execute before it times out.",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "A string representing the new name of the project that you are updating.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateUpload": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Update an uploaded test specification (test spec).",
                "operationId": "UpdateUpload",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "upload": {
                                            "description": "A test spec uploaded to Device Farm.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The upload's ARN.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "category": {
                                                    "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                                    "enum": [
                                                        "CURATED",
                                                        "PRIVATE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "contentType": {
                                                    "description": "The upload's content type (for example, \"application/octet-stream\").",
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "description": "When the upload was created.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "message": {
                                                    "description": "A message about the upload's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                                    "maxLength": 8192,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "description": "The upload's file name.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                                    "enum": [
                                                        "INITIALIZED",
                                                        "PROCESSING",
                                                        "SUCCEEDED",
                                                        "FAILED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                                    "enum": [
                                                        "ANDROID_APP",
                                                        "IOS_APP",
                                                        "WEB_APP",
                                                        "EXTERNAL_DATA",
                                                        "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                                        "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                                        "APPIUM_PYTHON_TEST_PACKAGE",
                                                        "APPIUM_NODE_TEST_PACKAGE",
                                                        "APPIUM_RUBY_TEST_PACKAGE",
                                                        "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                                        "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                                        "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                                        "APPIUM_WEB_NODE_TEST_PACKAGE",
                                                        "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                                        "CALABASH_TEST_PACKAGE",
                                                        "INSTRUMENTATION_TEST_PACKAGE",
                                                        "UIAUTOMATION_TEST_PACKAGE",
                                                        "UIAUTOMATOR_TEST_PACKAGE",
                                                        "XCTEST_TEST_PACKAGE",
                                                        "XCTEST_UI_TEST_PACKAGE",
                                                        "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                                        "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                                        "APPIUM_PYTHON_TEST_SPEC",
                                                        "APPIUM_NODE_TEST_SPEC",
                                                        "APPIUM_RUBY_TEST_SPEC",
                                                        "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                                        "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                                        "APPIUM_WEB_PYTHON_TEST_SPEC",
                                                        "APPIUM_WEB_NODE_TEST_SPEC",
                                                        "APPIUM_WEB_RUBY_TEST_SPEC",
                                                        "INSTRUMENTATION_TEST_SPEC",
                                                        "XCTEST_UI_TEST_SPEC"
                                                    ],
                                                    "type": "string"
                                                },
                                                "url": {
                                                    "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "LimitExceededException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the uploaded test spec.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "contentType": {
                                        "description": "The upload's content type (for example, \"application/x-yaml\").",
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "editContent": {
                                        "description": "Set to true if the YAML file has changed and needs to be updated; otherwise, set to false.",
                                        "type": "boolean"
                                    },
                                    "name": {
                                        "description": "The upload's test spec file name. The name should not contain the '/' character. The test spec file name must end with the <code>.yaml</code> or <code>.yml</code> file extension.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/#UpdateVPCEConfiguration": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Updates information about an existing Amazon Virtual Private Cloud (VPC) endpoint configuration.",
                "operationId": "UpdateVPCEConfiguration",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vpceConfiguration": {
                                            "description": "An object containing information about your VPC endpoint configuration.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "serviceDnsName": {
                                                    "description": "The DNS name that maps to the private IP address of the service you want to access.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "vpceConfigurationDescription": {
                                                    "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "vpceConfigurationName": {
                                                    "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                                    "maxLength": 1024,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "vpceServiceName": {
                                                    "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                                    "maxLength": 2048,
                                                    "minLength": 0,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "ArgumentException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "NotFoundException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "ServiceAccountException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InvalidOperationException",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to update.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "serviceDnsName": {
                                        "description": "The DNS (domain) name used to connect to your private service in your Amazon VPC. The DNS name must not already be in use on the Internet.",
                                        "maxLength": 2048,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "vpceConfigurationDescription": {
                                        "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                        "maxLength": 2048,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "vpceConfigurationName": {
                                        "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                        "maxLength": 1024,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "vpceServiceName": {
                                        "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                        "maxLength": 2048,
                                        "minLength": 0,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "arn"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AWSAccountNumber": {
                "maxLength": 16,
                "minLength": 2,
                "type": "string"
            },
            "AccountSettings": {
                "description": "A container for account-level settings within AWS Device Farm.",
                "properties": {
                    "awsAccountNumber": {
                        "description": "The AWS account number specified in the <code>AccountSettings</code> container.",
                        "maxLength": 16,
                        "minLength": 2,
                        "type": "string"
                    },
                    "defaultJobTimeoutMinutes": {
                        "description": "The default number of minutes (at the account level) a test run will execute before it times out. Default value is 60 minutes.",
                        "type": "integer"
                    },
                    "maxJobTimeoutMinutes": {
                        "description": "The maximum number of minutes a test run will execute before it times out.",
                        "type": "integer"
                    },
                    "maxSlots": {
                        "description": "The maximum number of device slots that the AWS account can purchase. Each maximum is expressed as an <code>offering-id:number</code> pair, where the <code>offering-id</code> represents one of the IDs returned by the <code>ListOfferings</code> command.",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "skipAppResign": {
                        "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                        "type": "boolean"
                    },
                    "trialMinutes": {
                        "description": "Information about an AWS account's usage of free trial device minutes.",
                        "properties": {
                            "remaining": {
                                "description": "The number of free trial minutes remaining in the account.",
                                "format": "double",
                                "type": "number"
                            },
                            "total": {
                                "description": "The total number of free trial minutes that the account started with.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "unmeteredDevices": {
                        "description": "Returns the unmetered devices you have purchased or want to purchase.",
                        "items": {
                            "properties": {
                                "key": {
                                    "enum": [
                                        "ANDROID",
                                        "IOS"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "unmeteredRemoteAccessDevices": {
                        "description": "Returns the unmetered remote access devices you have purchased or want to purchase.",
                        "items": {
                            "properties": {
                                "key": {
                                    "enum": [
                                        "ANDROID",
                                        "IOS"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AccountsCleanup": {
                "type": "boolean"
            },
            "AmazonResourceName": {
                "minLength": 32,
                "type": "string"
            },
            "AmazonResourceNames": {
                "items": {
                    "minLength": 32,
                    "type": "string"
                },
                "type": "array"
            },
            "AndroidPaths": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "AppPackagesCleanup": {
                "type": "boolean"
            },
            "ArgumentException": {},
            "Artifact": {
                "description": "Represents the output of a test. Examples of artifacts include logs and screenshots.",
                "properties": {
                    "arn": {
                        "description": "The artifact's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "extension": {
                        "description": "The artifact's file extension.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The artifact's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The artifact's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>UNKNOWN: An unknown type.</p> </li> <li> <p>SCREENSHOT: The screenshot type.</p> </li> <li> <p>DEVICE_LOG: The device log type.</p> </li> <li> <p>MESSAGE_LOG: The message log type.</p> </li> <li> <p>VIDEO_LOG: The video log type.</p> </li> <li> <p>RESULT_LOG: The result log type.</p> </li> <li> <p>SERVICE_LOG: The service log type.</p> </li> <li> <p>WEBKIT_LOG: The web kit log type.</p> </li> <li> <p>INSTRUMENTATION_OUTPUT: The instrumentation type.</p> </li> <li> <p>EXERCISER_MONKEY_OUTPUT: For Android, the artifact (log) generated by an Android fuzz test.</p> </li> <li> <p>CALABASH_JSON_OUTPUT: The Calabash JSON output type.</p> </li> <li> <p>CALABASH_PRETTY_OUTPUT: The Calabash pretty output type.</p> </li> <li> <p>CALABASH_STANDARD_OUTPUT: The Calabash standard output type.</p> </li> <li> <p>CALABASH_JAVA_XML_OUTPUT: The Calabash Java XML output type.</p> </li> <li> <p>AUTOMATION_OUTPUT: The automation output type.</p> </li> <li> <p>APPIUM_SERVER_OUTPUT: The Appium server output type.</p> </li> <li> <p>APPIUM_JAVA_OUTPUT: The Appium Java output type.</p> </li> <li> <p>APPIUM_JAVA_XML_OUTPUT: The Appium Java XML output type.</p> </li> <li> <p>APPIUM_PYTHON_OUTPUT: The Appium Python output type.</p> </li> <li> <p>APPIUM_PYTHON_XML_OUTPUT: The Appium Python XML output type.</p> </li> <li> <p>EXPLORER_EVENT_LOG: The Explorer event log output type.</p> </li> <li> <p>EXPLORER_SUMMARY_LOG: The Explorer summary log output type.</p> </li> <li> <p>APPLICATION_CRASH_REPORT: The application crash report output type.</p> </li> <li> <p>XCTEST_LOG: The XCode test output type.</p> </li> <li> <p>VIDEO: The Video output type.</p> </li> <li> <p>CUSTOMER_ARTIFACT:The Customer Artifact output type.</p> </li> <li> <p>CUSTOMER_ARTIFACT_LOG: The Customer Artifact Log output type.</p> </li> <li> <p>TESTSPEC_OUTPUT: The Test Spec Output type.</p> </li> </ul>",
                        "enum": [
                            "UNKNOWN",
                            "SCREENSHOT",
                            "DEVICE_LOG",
                            "MESSAGE_LOG",
                            "VIDEO_LOG",
                            "RESULT_LOG",
                            "SERVICE_LOG",
                            "WEBKIT_LOG",
                            "INSTRUMENTATION_OUTPUT",
                            "EXERCISER_MONKEY_OUTPUT",
                            "CALABASH_JSON_OUTPUT",
                            "CALABASH_PRETTY_OUTPUT",
                            "CALABASH_STANDARD_OUTPUT",
                            "CALABASH_JAVA_XML_OUTPUT",
                            "AUTOMATION_OUTPUT",
                            "APPIUM_SERVER_OUTPUT",
                            "APPIUM_JAVA_OUTPUT",
                            "APPIUM_JAVA_XML_OUTPUT",
                            "APPIUM_PYTHON_OUTPUT",
                            "APPIUM_PYTHON_XML_OUTPUT",
                            "EXPLORER_EVENT_LOG",
                            "EXPLORER_SUMMARY_LOG",
                            "APPLICATION_CRASH_REPORT",
                            "XCTEST_LOG",
                            "VIDEO",
                            "CUSTOMER_ARTIFACT",
                            "CUSTOMER_ARTIFACT_LOG",
                            "TESTSPEC_OUTPUT"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the artifact's file.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ArtifactCategory": {
                "enum": [
                    "SCREENSHOT",
                    "FILE",
                    "LOG"
                ],
                "type": "string"
            },
            "ArtifactType": {
                "enum": [
                    "UNKNOWN",
                    "SCREENSHOT",
                    "DEVICE_LOG",
                    "MESSAGE_LOG",
                    "VIDEO_LOG",
                    "RESULT_LOG",
                    "SERVICE_LOG",
                    "WEBKIT_LOG",
                    "INSTRUMENTATION_OUTPUT",
                    "EXERCISER_MONKEY_OUTPUT",
                    "CALABASH_JSON_OUTPUT",
                    "CALABASH_PRETTY_OUTPUT",
                    "CALABASH_STANDARD_OUTPUT",
                    "CALABASH_JAVA_XML_OUTPUT",
                    "AUTOMATION_OUTPUT",
                    "APPIUM_SERVER_OUTPUT",
                    "APPIUM_JAVA_OUTPUT",
                    "APPIUM_JAVA_XML_OUTPUT",
                    "APPIUM_PYTHON_OUTPUT",
                    "APPIUM_PYTHON_XML_OUTPUT",
                    "EXPLORER_EVENT_LOG",
                    "EXPLORER_SUMMARY_LOG",
                    "APPLICATION_CRASH_REPORT",
                    "XCTEST_LOG",
                    "VIDEO",
                    "CUSTOMER_ARTIFACT",
                    "CUSTOMER_ARTIFACT_LOG",
                    "TESTSPEC_OUTPUT"
                ],
                "type": "string"
            },
            "Artifacts": {
                "items": {
                    "description": "Represents the output of a test. Examples of artifacts include logs and screenshots.",
                    "properties": {
                        "arn": {
                            "description": "The artifact's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "extension": {
                            "description": "The artifact's file extension.",
                            "type": "string"
                        },
                        "name": {
                            "description": "The artifact's name.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "type": {
                            "description": "<p>The artifact's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>UNKNOWN: An unknown type.</p> </li> <li> <p>SCREENSHOT: The screenshot type.</p> </li> <li> <p>DEVICE_LOG: The device log type.</p> </li> <li> <p>MESSAGE_LOG: The message log type.</p> </li> <li> <p>VIDEO_LOG: The video log type.</p> </li> <li> <p>RESULT_LOG: The result log type.</p> </li> <li> <p>SERVICE_LOG: The service log type.</p> </li> <li> <p>WEBKIT_LOG: The web kit log type.</p> </li> <li> <p>INSTRUMENTATION_OUTPUT: The instrumentation type.</p> </li> <li> <p>EXERCISER_MONKEY_OUTPUT: For Android, the artifact (log) generated by an Android fuzz test.</p> </li> <li> <p>CALABASH_JSON_OUTPUT: The Calabash JSON output type.</p> </li> <li> <p>CALABASH_PRETTY_OUTPUT: The Calabash pretty output type.</p> </li> <li> <p>CALABASH_STANDARD_OUTPUT: The Calabash standard output type.</p> </li> <li> <p>CALABASH_JAVA_XML_OUTPUT: The Calabash Java XML output type.</p> </li> <li> <p>AUTOMATION_OUTPUT: The automation output type.</p> </li> <li> <p>APPIUM_SERVER_OUTPUT: The Appium server output type.</p> </li> <li> <p>APPIUM_JAVA_OUTPUT: The Appium Java output type.</p> </li> <li> <p>APPIUM_JAVA_XML_OUTPUT: The Appium Java XML output type.</p> </li> <li> <p>APPIUM_PYTHON_OUTPUT: The Appium Python output type.</p> </li> <li> <p>APPIUM_PYTHON_XML_OUTPUT: The Appium Python XML output type.</p> </li> <li> <p>EXPLORER_EVENT_LOG: The Explorer event log output type.</p> </li> <li> <p>EXPLORER_SUMMARY_LOG: The Explorer summary log output type.</p> </li> <li> <p>APPLICATION_CRASH_REPORT: The application crash report output type.</p> </li> <li> <p>XCTEST_LOG: The XCode test output type.</p> </li> <li> <p>VIDEO: The Video output type.</p> </li> <li> <p>CUSTOMER_ARTIFACT:The Customer Artifact output type.</p> </li> <li> <p>CUSTOMER_ARTIFACT_LOG: The Customer Artifact Log output type.</p> </li> <li> <p>TESTSPEC_OUTPUT: The Test Spec Output type.</p> </li> </ul>",
                            "enum": [
                                "UNKNOWN",
                                "SCREENSHOT",
                                "DEVICE_LOG",
                                "MESSAGE_LOG",
                                "VIDEO_LOG",
                                "RESULT_LOG",
                                "SERVICE_LOG",
                                "WEBKIT_LOG",
                                "INSTRUMENTATION_OUTPUT",
                                "EXERCISER_MONKEY_OUTPUT",
                                "CALABASH_JSON_OUTPUT",
                                "CALABASH_PRETTY_OUTPUT",
                                "CALABASH_STANDARD_OUTPUT",
                                "CALABASH_JAVA_XML_OUTPUT",
                                "AUTOMATION_OUTPUT",
                                "APPIUM_SERVER_OUTPUT",
                                "APPIUM_JAVA_OUTPUT",
                                "APPIUM_JAVA_XML_OUTPUT",
                                "APPIUM_PYTHON_OUTPUT",
                                "APPIUM_PYTHON_XML_OUTPUT",
                                "EXPLORER_EVENT_LOG",
                                "EXPLORER_SUMMARY_LOG",
                                "APPLICATION_CRASH_REPORT",
                                "XCTEST_LOG",
                                "VIDEO",
                                "CUSTOMER_ARTIFACT",
                                "CUSTOMER_ARTIFACT_LOG",
                                "TESTSPEC_OUTPUT"
                            ],
                            "type": "string"
                        },
                        "url": {
                            "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the artifact's file.",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "BillingMethod": {
                "enum": [
                    "METERED",
                    "UNMETERED"
                ],
                "type": "string"
            },
            "Boolean": {
                "type": "boolean"
            },
            "CPU": {
                "description": "<p>Represents the amount of CPU that an app is using on a physical device.</p> <p>Note that this does not represent system-wide CPU usage.</p>",
                "properties": {
                    "architecture": {
                        "description": "The CPU's architecture, for example x86 or ARM.",
                        "type": "string"
                    },
                    "clock": {
                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                        "format": "double",
                        "type": "number"
                    },
                    "frequency": {
                        "description": "The CPU's frequency.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ClientId": {
                "maxLength": 64,
                "minLength": 0,
                "type": "string"
            },
            "ContentType": {
                "maxLength": 64,
                "minLength": 0,
                "type": "string"
            },
            "Counters": {
                "description": "Represents entity counters.",
                "properties": {
                    "errored": {
                        "description": "The number of errored entities.",
                        "type": "integer"
                    },
                    "failed": {
                        "description": "The number of failed entities.",
                        "type": "integer"
                    },
                    "passed": {
                        "description": "The number of passed entities.",
                        "type": "integer"
                    },
                    "skipped": {
                        "description": "The number of skipped entities.",
                        "type": "integer"
                    },
                    "stopped": {
                        "description": "The number of stopped entities.",
                        "type": "integer"
                    },
                    "total": {
                        "description": "The total number of entities.",
                        "type": "integer"
                    },
                    "warned": {
                        "description": "The number of warned entities.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreateDevicePoolRequest": {
                "description": "Represents a request to the create device pool operation.",
                "example": {
                    "description": "My Android devices",
                    "name": "MyDevicePool",
                    "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                    "rules": []
                },
                "properties": {
                    "description": {
                        "description": "The device pool's description.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "maxDevices": {
                        "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The device pool's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "projectArn": {
                        "description": "The ARN of the project for the device pool.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "rules": {
                        "description": "The device pool's rules.",
                        "items": {
                            "description": "Represents a condition for a device pool.",
                            "properties": {
                                "attribute": {
                                    "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                    "enum": [
                                        "ARN",
                                        "PLATFORM",
                                        "FORM_FACTOR",
                                        "MANUFACTURER",
                                        "REMOTE_ACCESS_ENABLED",
                                        "REMOTE_DEBUG_ENABLED",
                                        "APPIUM_VERSION",
                                        "INSTANCE_ARN",
                                        "INSTANCE_LABELS",
                                        "FLEET_TYPE",
                                        "OS_VERSION",
                                        "MODEL",
                                        "AVAILABILITY"
                                    ],
                                    "type": "string"
                                },
                                "operator": {
                                    "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                    "enum": [
                                        "EQUALS",
                                        "LESS_THAN",
                                        "LESS_THAN_OR_EQUALS",
                                        "GREATER_THAN",
                                        "GREATER_THAN_OR_EQUALS",
                                        "IN",
                                        "NOT_IN",
                                        "CONTAINS"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The rule's value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "projectArn",
                    "name",
                    "rules"
                ],
                "type": "object"
            },
            "CreateDevicePoolResult": {
                "description": "Represents the result of a create device pool request.",
                "example": {
                    "devicePool": {}
                },
                "properties": {
                    "devicePool": {
                        "description": "The newly created device pool.",
                        "properties": {
                            "arn": {
                                "description": "The device pool's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The device pool's description.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "maxDevices": {
                                "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The device pool's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "rules": {
                                "description": "Information about the device pool's rules.",
                                "items": {
                                    "description": "Represents a condition for a device pool.",
                                    "properties": {
                                        "attribute": {
                                            "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                            "enum": [
                                                "ARN",
                                                "PLATFORM",
                                                "FORM_FACTOR",
                                                "MANUFACTURER",
                                                "REMOTE_ACCESS_ENABLED",
                                                "REMOTE_DEBUG_ENABLED",
                                                "APPIUM_VERSION",
                                                "INSTANCE_ARN",
                                                "INSTANCE_LABELS",
                                                "FLEET_TYPE",
                                                "OS_VERSION",
                                                "MODEL",
                                                "AVAILABILITY"
                                            ],
                                            "type": "string"
                                        },
                                        "operator": {
                                            "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                            "enum": [
                                                "EQUALS",
                                                "LESS_THAN",
                                                "LESS_THAN_OR_EQUALS",
                                                "GREATER_THAN",
                                                "GREATER_THAN_OR_EQUALS",
                                                "IN",
                                                "NOT_IN",
                                                "CONTAINS"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "The rule's value.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "type": {
                                "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateInstanceProfileRequest": {
                "properties": {
                    "description": {
                        "description": "The description of your instance profile.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "excludeAppPackagesFromCleanup": {
                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "The name of your instance profile.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "packageCleanup": {
                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                        "type": "boolean"
                    },
                    "rebootAfterUse": {
                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "CreateInstanceProfileResult": {
                "properties": {
                    "instanceProfile": {
                        "description": "An object containing information about your instance profile.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The description of the instance profile.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "excludeAppPackagesFromCleanup": {
                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "name": {
                                "description": "The name of the instance profile.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "packageCleanup": {
                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                "type": "boolean"
                            },
                            "rebootAfterUse": {
                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateNetworkProfileRequest": {
                "properties": {
                    "description": {
                        "description": "The description of the network profile.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "downlinkBandwidthBits": {
                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                        "type": "integer"
                    },
                    "downlinkDelayMs": {
                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "downlinkJitterMs": {
                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "downlinkLossPercent": {
                        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name you wish to specify for the new network profile.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "projectArn": {
                        "description": "The Amazon Resource Name (ARN) of the project for which you want to create a network profile.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of network profile you wish to create. Valid values are listed below.",
                        "enum": [
                            "CURATED",
                            "PRIVATE"
                        ],
                        "type": "string"
                    },
                    "uplinkBandwidthBits": {
                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                        "type": "integer"
                    },
                    "uplinkDelayMs": {
                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "uplinkJitterMs": {
                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "uplinkLossPercent": {
                        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "required": [
                    "projectArn",
                    "name"
                ],
                "type": "object"
            },
            "CreateNetworkProfileResult": {
                "properties": {
                    "networkProfile": {
                        "description": "The network profile that is returned by the create network profile request.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the network profile.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The description of the network profile.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "downlinkBandwidthBits": {
                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                "type": "integer"
                            },
                            "downlinkDelayMs": {
                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "downlinkJitterMs": {
                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "downlinkLossPercent": {
                                "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "name": {
                                "description": "The name of the network profile.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "type": {
                                "description": "The type of network profile. Valid values are listed below.",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            },
                            "uplinkBandwidthBits": {
                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                "type": "integer"
                            },
                            "uplinkDelayMs": {
                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "uplinkJitterMs": {
                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "uplinkLossPercent": {
                                "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateProjectRequest": {
                "description": "Represents a request to the create project operation.",
                "example": {
                    "name": "MyProject"
                },
                "properties": {
                    "defaultJobTimeoutMinutes": {
                        "description": "Sets the execution timeout value (in minutes) for a project. All test runs in this project will use the specified execution timeout value unless overridden when scheduling a run.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The project's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "CreateProjectResult": {
                "description": "Represents the result of a create project request.",
                "example": {
                    "project": {
                        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE",
                        "created": "1472660939.152",
                        "name": "MyProject"
                    }
                },
                "properties": {
                    "project": {
                        "description": "The newly created project.",
                        "properties": {
                            "arn": {
                                "description": "The project's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "created": {
                                "description": "When the project was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "defaultJobTimeoutMinutes": {
                                "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The project's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateRemoteAccessSessionConfiguration": {
                "description": "Configuration settings for a remote access session, including billing method.",
                "properties": {
                    "billingMethod": {
                        "description": "The billing method for the remote access session.",
                        "enum": [
                            "METERED",
                            "UNMETERED"
                        ],
                        "type": "string"
                    },
                    "vpceConfigurationArns": {
                        "description": "An array of Amazon Resource Names (ARNs) included in the VPC endpoint configuration.",
                        "items": {
                            "minLength": 32,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CreateRemoteAccessSessionRequest": {
                "description": "Creates and submits a request to start a remote access session.",
                "example": {
                    "configuration": {
                        "billingMethod": "METERED"
                    },
                    "deviceArn": "arn:aws:devicefarm:us-west-2::device:123EXAMPLE",
                    "name": "MySession",
                    "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "clientId": {
                        "description": "Unique identifier for the client. If you want access to multiple devices on the same client, you should pass the same <code>clientId</code> value in each call to <code>CreateRemoteAccessSession</code>. This is required only if <code>remoteDebugEnabled</code> is set to <code>true</code>.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "configuration": {
                        "description": "The configuration information for the remote access session request.",
                        "properties": {
                            "billingMethod": {
                                "description": "The billing method for the remote access session.",
                                "enum": [
                                    "METERED",
                                    "UNMETERED"
                                ],
                                "type": "string"
                            },
                            "vpceConfigurationArns": {
                                "description": "An array of Amazon Resource Names (ARNs) included in the VPC endpoint configuration.",
                                "items": {
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "deviceArn": {
                        "description": "The Amazon Resource Name (ARN) of the device for which you want to create a remote access session.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "instanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the device instance for which you want to create a remote access session.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "interactionMode": {
                        "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                        "enum": [
                            "INTERACTIVE",
                            "NO_VIDEO",
                            "VIDEO_ONLY"
                        ],
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the remote access session that you wish to create.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "projectArn": {
                        "description": "The Amazon Resource Name (ARN) of the project for which you want to create a remote access session.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "remoteDebugEnabled": {
                        "description": "Set to <code>true</code> if you want to access devices remotely for debugging in your remote access session.",
                        "type": "boolean"
                    },
                    "remoteRecordAppArn": {
                        "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "remoteRecordEnabled": {
                        "description": "Set to <code>true</code> to enable remote recording for the remote access session.",
                        "type": "boolean"
                    },
                    "skipAppResign": {
                        "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                        "type": "boolean"
                    },
                    "sshPublicKey": {
                        "description": "The public key of the <code>ssh</code> key pair you want to use for connecting to remote devices in your remote debugging session. This is only required if <code>remoteDebugEnabled</code> is set to <code>true</code>.",
                        "maxLength": 8192,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "projectArn",
                    "deviceArn"
                ],
                "type": "object"
            },
            "CreateRemoteAccessSessionResult": {
                "description": "Represents the server response from a request to create a remote access session.",
                "example": {
                    "remoteAccessSession": {}
                },
                "properties": {
                    "remoteAccessSession": {
                        "description": "A container that describes the remote access session when the request to create a remote access session is sent.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the remote access session.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "billingMethod": {
                                "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                                "enum": [
                                    "METERED",
                                    "UNMETERED"
                                ],
                                "type": "string"
                            },
                            "clientId": {
                                "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "created": {
                                "description": "The date and time the remote access session was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "device": {
                                "description": "The device (phone or tablet) used in the remote access session.",
                                "properties": {
                                    "arn": {
                                        "description": "The device's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "availability": {
                                        "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                        "enum": [
                                            "TEMPORARY_NOT_AVAILABLE",
                                            "BUSY",
                                            "AVAILABLE",
                                            "HIGHLY_AVAILABLE"
                                        ],
                                        "type": "string"
                                    },
                                    "carrier": {
                                        "description": "The device's carrier.",
                                        "type": "string"
                                    },
                                    "cpu": {
                                        "description": "Information about the device's CPU.",
                                        "properties": {
                                            "architecture": {
                                                "description": "The CPU's architecture, for example x86 or ARM.",
                                                "type": "string"
                                            },
                                            "clock": {
                                                "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "frequency": {
                                                "description": "The CPU's frequency.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "fleetName": {
                                        "description": "The name of the fleet to which this device belongs.",
                                        "type": "string"
                                    },
                                    "fleetType": {
                                        "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                        "type": "string"
                                    },
                                    "formFactor": {
                                        "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                        "enum": [
                                            "PHONE",
                                            "TABLET"
                                        ],
                                        "type": "string"
                                    },
                                    "heapSize": {
                                        "description": "The device's heap size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "The device's image name.",
                                        "type": "string"
                                    },
                                    "instances": {
                                        "description": "The instances belonging to this device.",
                                        "items": {
                                            "description": "Represents the device instance.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "instanceProfile": {
                                                    "description": "A object containing information about the instance profile.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the instance profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "excludeAppPackagesFromCleanup": {
                                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the instance profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "packageCleanup": {
                                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                            "type": "boolean"
                                                        },
                                                        "rebootAfterUse": {
                                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "labels": {
                                                    "description": "An array of strings describing the device instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "status": {
                                                    "description": "The status of the device instance. Valid values are listed below.",
                                                    "enum": [
                                                        "IN_USE",
                                                        "PREPARING",
                                                        "AVAILABLE",
                                                        "NOT_AVAILABLE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "udid": {
                                                    "description": "Unique device identifier for the device instance.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "manufacturer": {
                                        "description": "The device's manufacturer name.",
                                        "type": "string"
                                    },
                                    "memory": {
                                        "description": "The device's total memory size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "model": {
                                        "description": "The device's model name.",
                                        "type": "string"
                                    },
                                    "modelId": {
                                        "description": "The device's model ID.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The device's display name.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "os": {
                                        "description": "The device's operating system type.",
                                        "type": "string"
                                    },
                                    "platform": {
                                        "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                        "enum": [
                                            "ANDROID",
                                            "IOS"
                                        ],
                                        "type": "string"
                                    },
                                    "radio": {
                                        "description": "The device's radio.",
                                        "type": "string"
                                    },
                                    "remoteAccessEnabled": {
                                        "description": "Specifies whether remote access has been enabled for the specified device.",
                                        "type": "boolean"
                                    },
                                    "remoteDebugEnabled": {
                                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                        "type": "boolean"
                                    },
                                    "resolution": {
                                        "description": "The resolution of the device.",
                                        "properties": {
                                            "height": {
                                                "description": "The screen resolution's height, expressed in pixels.",
                                                "type": "integer"
                                            },
                                            "width": {
                                                "description": "The screen resolution's width, expressed in pixels.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceMinutes": {
                                "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceUdid": {
                                "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                                "type": "string"
                            },
                            "endpoint": {
                                "description": "The endpoint for the remote access sesssion.",
                                "type": "string"
                            },
                            "hostAddress": {
                                "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                                "maxLength": 1024,
                                "type": "string"
                            },
                            "instanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the instance.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "interactionMode": {
                                "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                                "enum": [
                                    "INTERACTIVE",
                                    "NO_VIDEO",
                                    "VIDEO_ONLY"
                                ],
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "message": {
                                "description": "A message about the remote access session.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the remote access session.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "remoteDebugEnabled": {
                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                                "type": "boolean"
                            },
                            "remoteRecordAppArn": {
                                "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "remoteRecordEnabled": {
                                "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                                "type": "boolean"
                            },
                            "result": {
                                "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "skipAppResign": {
                                "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                "type": "boolean"
                            },
                            "started": {
                                "description": "The date and time the remote access session was started.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The date and time the remote access session was stopped.",
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateUploadRequest": {
                "description": "Represents a request to the create upload operation.",
                "example": {
                    "name": "MyAppiumPythonUpload",
                    "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                    "type": "APPIUM_PYTHON_TEST_PACKAGE"
                },
                "properties": {
                    "contentType": {
                        "description": "The upload's content type (for example, \"application/octet-stream\").",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "name": {
                        "description": "The upload's file name. The name should not contain the '/' character. If uploading an iOS app, the file name needs to end with the <code>.ipa</code> extension. If uploading an Android app, the file name needs to end with the <code>.apk</code> extension. For all others, the file name must end with the <code>.zip</code> file extension.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "projectArn": {
                        "description": "The ARN of the project for the upload.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The upload's upload type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web application upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for a web app.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul> <p> <b>Note</b> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified, AWS Device Farm throws an <code>ArgumentException</code> error.</p>",
                        "enum": [
                            "ANDROID_APP",
                            "IOS_APP",
                            "WEB_APP",
                            "EXTERNAL_DATA",
                            "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                            "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                            "APPIUM_PYTHON_TEST_PACKAGE",
                            "APPIUM_NODE_TEST_PACKAGE",
                            "APPIUM_RUBY_TEST_PACKAGE",
                            "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                            "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                            "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                            "APPIUM_WEB_NODE_TEST_PACKAGE",
                            "APPIUM_WEB_RUBY_TEST_PACKAGE",
                            "CALABASH_TEST_PACKAGE",
                            "INSTRUMENTATION_TEST_PACKAGE",
                            "UIAUTOMATION_TEST_PACKAGE",
                            "UIAUTOMATOR_TEST_PACKAGE",
                            "XCTEST_TEST_PACKAGE",
                            "XCTEST_UI_TEST_PACKAGE",
                            "APPIUM_JAVA_JUNIT_TEST_SPEC",
                            "APPIUM_JAVA_TESTNG_TEST_SPEC",
                            "APPIUM_PYTHON_TEST_SPEC",
                            "APPIUM_NODE_TEST_SPEC",
                            "APPIUM_RUBY_TEST_SPEC",
                            "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                            "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                            "APPIUM_WEB_PYTHON_TEST_SPEC",
                            "APPIUM_WEB_NODE_TEST_SPEC",
                            "APPIUM_WEB_RUBY_TEST_SPEC",
                            "INSTRUMENTATION_TEST_SPEC",
                            "XCTEST_UI_TEST_SPEC"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "projectArn",
                    "name",
                    "type"
                ],
                "type": "object"
            },
            "CreateUploadResult": {
                "description": "Represents the result of a create upload request.",
                "example": {
                    "upload": {
                        "arn": "arn:aws:devicefarm:us-west-2:123456789101:upload:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE",
                        "created": "1472661404.186",
                        "name": "MyAppiumPythonUpload",
                        "status": "INITIALIZED",
                        "type": "APPIUM_PYTHON_TEST_PACKAGE",
                        "url": "https://prod-us-west-2-uploads.s3-us-west-2.amazonaws.com/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aproject%3A5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE/uploads/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aupload%3A5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE/MyAppiumPythonUpload?AWSAccessKeyId=1234567891011EXAMPLE&Expires=1472747804&Signature=1234567891011EXAMPLE"
                    }
                },
                "properties": {
                    "upload": {
                        "description": "The newly created upload.",
                        "properties": {
                            "arn": {
                                "description": "The upload's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "category": {
                                "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            },
                            "contentType": {
                                "description": "The upload's content type (for example, \"application/octet-stream\").",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "created": {
                                "description": "When the upload was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "message": {
                                "description": "A message about the upload's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "metadata": {
                                "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                "maxLength": 8192,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The upload's file name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                "enum": [
                                    "INITIALIZED",
                                    "PROCESSING",
                                    "SUCCEEDED",
                                    "FAILED"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID_APP",
                                    "IOS_APP",
                                    "WEB_APP",
                                    "EXTERNAL_DATA",
                                    "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                    "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                    "APPIUM_PYTHON_TEST_PACKAGE",
                                    "APPIUM_NODE_TEST_PACKAGE",
                                    "APPIUM_RUBY_TEST_PACKAGE",
                                    "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                    "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                    "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                    "APPIUM_WEB_NODE_TEST_PACKAGE",
                                    "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                    "CALABASH_TEST_PACKAGE",
                                    "INSTRUMENTATION_TEST_PACKAGE",
                                    "UIAUTOMATION_TEST_PACKAGE",
                                    "UIAUTOMATOR_TEST_PACKAGE",
                                    "XCTEST_TEST_PACKAGE",
                                    "XCTEST_UI_TEST_PACKAGE",
                                    "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                    "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                    "APPIUM_PYTHON_TEST_SPEC",
                                    "APPIUM_NODE_TEST_SPEC",
                                    "APPIUM_RUBY_TEST_SPEC",
                                    "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                    "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                    "APPIUM_WEB_PYTHON_TEST_SPEC",
                                    "APPIUM_WEB_NODE_TEST_SPEC",
                                    "APPIUM_WEB_RUBY_TEST_SPEC",
                                    "INSTRUMENTATION_TEST_SPEC",
                                    "XCTEST_UI_TEST_SPEC"
                                ],
                                "type": "string"
                            },
                            "url": {
                                "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateVPCEConfigurationRequest": {
                "properties": {
                    "serviceDnsName": {
                        "description": "The DNS name of the service running in your VPC that you want Device Farm to test.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vpceConfigurationDescription": {
                        "description": "An optional description, providing more details about your VPC endpoint configuration.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vpceConfigurationName": {
                        "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vpceServiceName": {
                        "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "vpceConfigurationName",
                    "vpceServiceName",
                    "serviceDnsName"
                ],
                "type": "object"
            },
            "CreateVPCEConfigurationResult": {
                "properties": {
                    "vpceConfiguration": {
                        "description": "An object containing information about your VPC endpoint configuration.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "serviceDnsName": {
                                "description": "The DNS name that maps to the private IP address of the service you want to access.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "vpceConfigurationDescription": {
                                "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "vpceConfigurationName": {
                                "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                "maxLength": 1024,
                                "minLength": 0,
                                "type": "string"
                            },
                            "vpceServiceName": {
                                "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CurrencyCode": {
                "enum": [
                    "USD"
                ],
                "type": "string"
            },
            "CustomerArtifactPaths": {
                "description": "<p>A JSON object specifying the paths where the artifacts generated by the customer's tests, on the device or in the test environment, will be pulled from.</p> <p>Specify <code>deviceHostPaths</code> and optionally specify either <code>iosPaths</code> or <code>androidPaths</code>.</p> <p>For web app tests, you can specify both <code>iosPaths</code> and <code>androidPaths</code>.</p>",
                "properties": {
                    "androidPaths": {
                        "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "deviceHostPaths": {
                        "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "iosPaths": {
                        "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DateTime": {
                "format": "date-time",
                "type": "string"
            },
            "DeleteDevicePoolRequest": {
                "description": "Represents a request to the delete device pool operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2::devicepool:123-456-EXAMPLE-GUID"
                },
                "properties": {
                    "arn": {
                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm device pool you wish to delete.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "DeleteDevicePoolResult": {
                "description": "Represents the result of a delete device pool request.",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "DeleteInstanceProfileRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the instance profile you are requesting to delete.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "DeleteInstanceProfileResult": {
                "properties": {},
                "type": "object"
            },
            "DeleteNetworkProfileRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the network profile you want to delete.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "DeleteNetworkProfileResult": {
                "properties": {},
                "type": "object"
            },
            "DeleteProjectRequest": {
                "description": "Represents a request to the delete project operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm project you wish to delete.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "DeleteProjectResult": {
                "description": "Represents the result of a delete project request.",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "DeleteRemoteAccessSessionRequest": {
                "description": "Represents the request to delete the specified remote access session.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the sesssion for which you want to delete remote access.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "DeleteRemoteAccessSessionResult": {
                "description": "The response from the server when a request is made to delete the remote access session.",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "DeleteRunRequest": {
                "description": "Represents a request to the delete run operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) for the run you wish to delete.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "DeleteRunResult": {
                "description": "Represents the result of a delete run request.",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "DeleteUploadRequest": {
                "description": "Represents a request to the delete upload operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:upload:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm upload you wish to delete.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "DeleteUploadResult": {
                "description": "Represents the result of a delete upload request.",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "DeleteVPCEConfigurationRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to delete.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "DeleteVPCEConfigurationResult": {
                "properties": {},
                "type": "object"
            },
            "Device": {
                "description": "Represents a device type that an app is tested against.",
                "properties": {
                    "arn": {
                        "description": "The device's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "availability": {
                        "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                        "enum": [
                            "TEMPORARY_NOT_AVAILABLE",
                            "BUSY",
                            "AVAILABLE",
                            "HIGHLY_AVAILABLE"
                        ],
                        "type": "string"
                    },
                    "carrier": {
                        "description": "The device's carrier.",
                        "type": "string"
                    },
                    "cpu": {
                        "description": "Information about the device's CPU.",
                        "properties": {
                            "architecture": {
                                "description": "The CPU's architecture, for example x86 or ARM.",
                                "type": "string"
                            },
                            "clock": {
                                "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                "format": "double",
                                "type": "number"
                            },
                            "frequency": {
                                "description": "The CPU's frequency.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "fleetName": {
                        "description": "The name of the fleet to which this device belongs.",
                        "type": "string"
                    },
                    "fleetType": {
                        "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                        "type": "string"
                    },
                    "formFactor": {
                        "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                        "enum": [
                            "PHONE",
                            "TABLET"
                        ],
                        "type": "string"
                    },
                    "heapSize": {
                        "description": "The device's heap size, expressed in bytes.",
                        "type": "integer"
                    },
                    "image": {
                        "description": "The device's image name.",
                        "type": "string"
                    },
                    "instances": {
                        "description": "The instances belonging to this device.",
                        "items": {
                            "description": "Represents the device instance.",
                            "properties": {
                                "arn": {
                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "deviceArn": {
                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "instanceProfile": {
                                    "description": "A object containing information about the instance profile.",
                                    "properties": {
                                        "arn": {
                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "The description of the instance profile.",
                                            "maxLength": 16384,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "excludeAppPackagesFromCleanup": {
                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the instance profile.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "packageCleanup": {
                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                            "type": "boolean"
                                        },
                                        "rebootAfterUse": {
                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "labels": {
                                    "description": "An array of strings describing the device instance.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "status": {
                                    "description": "The status of the device instance. Valid values are listed below.",
                                    "enum": [
                                        "IN_USE",
                                        "PREPARING",
                                        "AVAILABLE",
                                        "NOT_AVAILABLE"
                                    ],
                                    "type": "string"
                                },
                                "udid": {
                                    "description": "Unique device identifier for the device instance.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "manufacturer": {
                        "description": "The device's manufacturer name.",
                        "type": "string"
                    },
                    "memory": {
                        "description": "The device's total memory size, expressed in bytes.",
                        "type": "integer"
                    },
                    "model": {
                        "description": "The device's model name.",
                        "type": "string"
                    },
                    "modelId": {
                        "description": "The device's model ID.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The device's display name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "os": {
                        "description": "The device's operating system type.",
                        "type": "string"
                    },
                    "platform": {
                        "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                        "enum": [
                            "ANDROID",
                            "IOS"
                        ],
                        "type": "string"
                    },
                    "radio": {
                        "description": "The device's radio.",
                        "type": "string"
                    },
                    "remoteAccessEnabled": {
                        "description": "Specifies whether remote access has been enabled for the specified device.",
                        "type": "boolean"
                    },
                    "remoteDebugEnabled": {
                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                        "type": "boolean"
                    },
                    "resolution": {
                        "description": "The resolution of the device.",
                        "properties": {
                            "height": {
                                "description": "The screen resolution's height, expressed in pixels.",
                                "type": "integer"
                            },
                            "width": {
                                "description": "The screen resolution's width, expressed in pixels.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeviceAttribute": {
                "enum": [
                    "ARN",
                    "PLATFORM",
                    "FORM_FACTOR",
                    "MANUFACTURER",
                    "REMOTE_ACCESS_ENABLED",
                    "REMOTE_DEBUG_ENABLED",
                    "APPIUM_VERSION",
                    "INSTANCE_ARN",
                    "INSTANCE_LABELS",
                    "FLEET_TYPE",
                    "OS_VERSION",
                    "MODEL",
                    "AVAILABILITY"
                ],
                "type": "string"
            },
            "DeviceAvailability": {
                "enum": [
                    "TEMPORARY_NOT_AVAILABLE",
                    "BUSY",
                    "AVAILABLE",
                    "HIGHLY_AVAILABLE"
                ],
                "type": "string"
            },
            "DeviceFilter": {
                "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                "properties": {
                    "attribute": {
                        "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                        "enum": [
                            "ARN",
                            "PLATFORM",
                            "OS_VERSION",
                            "MODEL",
                            "AVAILABILITY",
                            "FORM_FACTOR",
                            "MANUFACTURER",
                            "REMOTE_ACCESS_ENABLED",
                            "REMOTE_DEBUG_ENABLED",
                            "INSTANCE_ARN",
                            "INSTANCE_LABELS",
                            "FLEET_TYPE"
                        ],
                        "type": "string"
                    },
                    "operator": {
                        "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                        "enum": [
                            "EQUALS",
                            "LESS_THAN",
                            "LESS_THAN_OR_EQUALS",
                            "GREATER_THAN",
                            "GREATER_THAN_OR_EQUALS",
                            "IN",
                            "NOT_IN",
                            "CONTAINS"
                        ],
                        "type": "string"
                    },
                    "values": {
                        "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DeviceFilterAttribute": {
                "enum": [
                    "ARN",
                    "PLATFORM",
                    "OS_VERSION",
                    "MODEL",
                    "AVAILABILITY",
                    "FORM_FACTOR",
                    "MANUFACTURER",
                    "REMOTE_ACCESS_ENABLED",
                    "REMOTE_DEBUG_ENABLED",
                    "INSTANCE_ARN",
                    "INSTANCE_LABELS",
                    "FLEET_TYPE"
                ],
                "type": "string"
            },
            "DeviceFilterValues": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "DeviceFilters": {
                "items": {
                    "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                    "properties": {
                        "attribute": {
                            "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                            "enum": [
                                "ARN",
                                "PLATFORM",
                                "OS_VERSION",
                                "MODEL",
                                "AVAILABILITY",
                                "FORM_FACTOR",
                                "MANUFACTURER",
                                "REMOTE_ACCESS_ENABLED",
                                "REMOTE_DEBUG_ENABLED",
                                "INSTANCE_ARN",
                                "INSTANCE_LABELS",
                                "FLEET_TYPE"
                            ],
                            "type": "string"
                        },
                        "operator": {
                            "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                            "enum": [
                                "EQUALS",
                                "LESS_THAN",
                                "LESS_THAN_OR_EQUALS",
                                "GREATER_THAN",
                                "GREATER_THAN_OR_EQUALS",
                                "IN",
                                "NOT_IN",
                                "CONTAINS"
                            ],
                            "type": "string"
                        },
                        "values": {
                            "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DeviceFormFactor": {
                "enum": [
                    "PHONE",
                    "TABLET"
                ],
                "type": "string"
            },
            "DeviceHostPaths": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "DeviceInstance": {
                "description": "Represents the device instance.",
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "deviceArn": {
                        "description": "The Amazon Resource Name (ARN) of the device.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "instanceProfile": {
                        "description": "A object containing information about the instance profile.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The description of the instance profile.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "excludeAppPackagesFromCleanup": {
                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "name": {
                                "description": "The name of the instance profile.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "packageCleanup": {
                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                "type": "boolean"
                            },
                            "rebootAfterUse": {
                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "labels": {
                        "description": "An array of strings describing the device instance.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "description": "The status of the device instance. Valid values are listed below.",
                        "enum": [
                            "IN_USE",
                            "PREPARING",
                            "AVAILABLE",
                            "NOT_AVAILABLE"
                        ],
                        "type": "string"
                    },
                    "udid": {
                        "description": "Unique device identifier for the device instance.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeviceInstances": {
                "items": {
                    "description": "Represents the device instance.",
                    "properties": {
                        "arn": {
                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "deviceArn": {
                            "description": "The Amazon Resource Name (ARN) of the device.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "instanceProfile": {
                            "description": "A object containing information about the instance profile.",
                            "properties": {
                                "arn": {
                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "description": {
                                    "description": "The description of the instance profile.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "excludeAppPackagesFromCleanup": {
                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "description": "The name of the instance profile.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "packageCleanup": {
                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                    "type": "boolean"
                                },
                                "rebootAfterUse": {
                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "labels": {
                            "description": "An array of strings describing the device instance.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "status": {
                            "description": "The status of the device instance. Valid values are listed below.",
                            "enum": [
                                "IN_USE",
                                "PREPARING",
                                "AVAILABLE",
                                "NOT_AVAILABLE"
                            ],
                            "type": "string"
                        },
                        "udid": {
                            "description": "Unique device identifier for the device instance.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DeviceMinutes": {
                "description": "Represents the total (metered or unmetered) minutes used by the resource to run tests. Contains the sum of minutes consumed by all children.",
                "properties": {
                    "metered": {
                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                        "format": "double",
                        "type": "number"
                    },
                    "total": {
                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                        "format": "double",
                        "type": "number"
                    },
                    "unmetered": {
                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "DevicePlatform": {
                "enum": [
                    "ANDROID",
                    "IOS"
                ],
                "type": "string"
            },
            "DevicePool": {
                "description": "Represents a collection of device types.",
                "properties": {
                    "arn": {
                        "description": "The device pool's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "description": {
                        "description": "The device pool's description.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "maxDevices": {
                        "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The device pool's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "rules": {
                        "description": "Information about the device pool's rules.",
                        "items": {
                            "description": "Represents a condition for a device pool.",
                            "properties": {
                                "attribute": {
                                    "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                    "enum": [
                                        "ARN",
                                        "PLATFORM",
                                        "FORM_FACTOR",
                                        "MANUFACTURER",
                                        "REMOTE_ACCESS_ENABLED",
                                        "REMOTE_DEBUG_ENABLED",
                                        "APPIUM_VERSION",
                                        "INSTANCE_ARN",
                                        "INSTANCE_LABELS",
                                        "FLEET_TYPE",
                                        "OS_VERSION",
                                        "MODEL",
                                        "AVAILABILITY"
                                    ],
                                    "type": "string"
                                },
                                "operator": {
                                    "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                    "enum": [
                                        "EQUALS",
                                        "LESS_THAN",
                                        "LESS_THAN_OR_EQUALS",
                                        "GREATER_THAN",
                                        "GREATER_THAN_OR_EQUALS",
                                        "IN",
                                        "NOT_IN",
                                        "CONTAINS"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The rule's value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "type": {
                        "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                        "enum": [
                            "CURATED",
                            "PRIVATE"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DevicePoolCompatibilityResult": {
                "description": "Represents a device pool compatibility result.",
                "properties": {
                    "compatible": {
                        "description": "Whether the result was compatible with the device pool.",
                        "type": "boolean"
                    },
                    "device": {
                        "description": "The device (phone or tablet) that you wish to return information about.",
                        "properties": {
                            "arn": {
                                "description": "The device's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "availability": {
                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                "enum": [
                                    "TEMPORARY_NOT_AVAILABLE",
                                    "BUSY",
                                    "AVAILABLE",
                                    "HIGHLY_AVAILABLE"
                                ],
                                "type": "string"
                            },
                            "carrier": {
                                "description": "The device's carrier.",
                                "type": "string"
                            },
                            "cpu": {
                                "description": "Information about the device's CPU.",
                                "properties": {
                                    "architecture": {
                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                        "type": "string"
                                    },
                                    "clock": {
                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "frequency": {
                                        "description": "The CPU's frequency.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "fleetName": {
                                "description": "The name of the fleet to which this device belongs.",
                                "type": "string"
                            },
                            "fleetType": {
                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                "type": "string"
                            },
                            "formFactor": {
                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                "enum": [
                                    "PHONE",
                                    "TABLET"
                                ],
                                "type": "string"
                            },
                            "heapSize": {
                                "description": "The device's heap size, expressed in bytes.",
                                "type": "integer"
                            },
                            "image": {
                                "description": "The device's image name.",
                                "type": "string"
                            },
                            "instances": {
                                "description": "The instances belonging to this device.",
                                "items": {
                                    "description": "Represents the device instance.",
                                    "properties": {
                                        "arn": {
                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "deviceArn": {
                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "instanceProfile": {
                                            "description": "A object containing information about the instance profile.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the instance profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "excludeAppPackagesFromCleanup": {
                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the instance profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "packageCleanup": {
                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                    "type": "boolean"
                                                },
                                                "rebootAfterUse": {
                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "labels": {
                                            "description": "An array of strings describing the device instance.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "description": "The status of the device instance. Valid values are listed below.",
                                            "enum": [
                                                "IN_USE",
                                                "PREPARING",
                                                "AVAILABLE",
                                                "NOT_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "udid": {
                                            "description": "Unique device identifier for the device instance.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "manufacturer": {
                                "description": "The device's manufacturer name.",
                                "type": "string"
                            },
                            "memory": {
                                "description": "The device's total memory size, expressed in bytes.",
                                "type": "integer"
                            },
                            "model": {
                                "description": "The device's model name.",
                                "type": "string"
                            },
                            "modelId": {
                                "description": "The device's model ID.",
                                "type": "string"
                            },
                            "name": {
                                "description": "The device's display name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "os": {
                                "description": "The device's operating system type.",
                                "type": "string"
                            },
                            "platform": {
                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID",
                                    "IOS"
                                ],
                                "type": "string"
                            },
                            "radio": {
                                "description": "The device's radio.",
                                "type": "string"
                            },
                            "remoteAccessEnabled": {
                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                "type": "boolean"
                            },
                            "remoteDebugEnabled": {
                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                "type": "boolean"
                            },
                            "resolution": {
                                "description": "The resolution of the device.",
                                "properties": {
                                    "height": {
                                        "description": "The screen resolution's height, expressed in pixels.",
                                        "type": "integer"
                                    },
                                    "width": {
                                        "description": "The screen resolution's width, expressed in pixels.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "incompatibilityMessages": {
                        "description": "Information about the compatibility.",
                        "items": {
                            "description": "Represents information about incompatibility.",
                            "properties": {
                                "message": {
                                    "description": "A message about the incompatibility.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "type": {
                                    "description": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>",
                                    "enum": [
                                        "ARN",
                                        "PLATFORM",
                                        "FORM_FACTOR",
                                        "MANUFACTURER",
                                        "REMOTE_ACCESS_ENABLED",
                                        "REMOTE_DEBUG_ENABLED",
                                        "APPIUM_VERSION",
                                        "INSTANCE_ARN",
                                        "INSTANCE_LABELS",
                                        "FLEET_TYPE",
                                        "OS_VERSION",
                                        "MODEL",
                                        "AVAILABILITY"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DevicePoolCompatibilityResults": {
                "items": {
                    "description": "Represents a device pool compatibility result.",
                    "properties": {
                        "compatible": {
                            "description": "Whether the result was compatible with the device pool.",
                            "type": "boolean"
                        },
                        "device": {
                            "description": "The device (phone or tablet) that you wish to return information about.",
                            "properties": {
                                "arn": {
                                    "description": "The device's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "availability": {
                                    "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                    "enum": [
                                        "TEMPORARY_NOT_AVAILABLE",
                                        "BUSY",
                                        "AVAILABLE",
                                        "HIGHLY_AVAILABLE"
                                    ],
                                    "type": "string"
                                },
                                "carrier": {
                                    "description": "The device's carrier.",
                                    "type": "string"
                                },
                                "cpu": {
                                    "description": "Information about the device's CPU.",
                                    "properties": {
                                        "architecture": {
                                            "description": "The CPU's architecture, for example x86 or ARM.",
                                            "type": "string"
                                        },
                                        "clock": {
                                            "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "frequency": {
                                            "description": "The CPU's frequency.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "fleetName": {
                                    "description": "The name of the fleet to which this device belongs.",
                                    "type": "string"
                                },
                                "fleetType": {
                                    "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                    "type": "string"
                                },
                                "formFactor": {
                                    "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                    "enum": [
                                        "PHONE",
                                        "TABLET"
                                    ],
                                    "type": "string"
                                },
                                "heapSize": {
                                    "description": "The device's heap size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "image": {
                                    "description": "The device's image name.",
                                    "type": "string"
                                },
                                "instances": {
                                    "description": "The instances belonging to this device.",
                                    "items": {
                                        "description": "Represents the device instance.",
                                        "properties": {
                                            "arn": {
                                                "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "deviceArn": {
                                                "description": "The Amazon Resource Name (ARN) of the device.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "instanceProfile": {
                                                "description": "A object containing information about the instance profile.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "The description of the instance profile.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "excludeAppPackagesFromCleanup": {
                                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "description": "The name of the instance profile.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "packageCleanup": {
                                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                        "type": "boolean"
                                                    },
                                                    "rebootAfterUse": {
                                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "labels": {
                                                "description": "An array of strings describing the device instance.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "status": {
                                                "description": "The status of the device instance. Valid values are listed below.",
                                                "enum": [
                                                    "IN_USE",
                                                    "PREPARING",
                                                    "AVAILABLE",
                                                    "NOT_AVAILABLE"
                                                ],
                                                "type": "string"
                                            },
                                            "udid": {
                                                "description": "Unique device identifier for the device instance.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "manufacturer": {
                                    "description": "The device's manufacturer name.",
                                    "type": "string"
                                },
                                "memory": {
                                    "description": "The device's total memory size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "model": {
                                    "description": "The device's model name.",
                                    "type": "string"
                                },
                                "modelId": {
                                    "description": "The device's model ID.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The device's display name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "os": {
                                    "description": "The device's operating system type.",
                                    "type": "string"
                                },
                                "platform": {
                                    "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                    "enum": [
                                        "ANDROID",
                                        "IOS"
                                    ],
                                    "type": "string"
                                },
                                "radio": {
                                    "description": "The device's radio.",
                                    "type": "string"
                                },
                                "remoteAccessEnabled": {
                                    "description": "Specifies whether remote access has been enabled for the specified device.",
                                    "type": "boolean"
                                },
                                "remoteDebugEnabled": {
                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                    "type": "boolean"
                                },
                                "resolution": {
                                    "description": "The resolution of the device.",
                                    "properties": {
                                        "height": {
                                            "description": "The screen resolution's height, expressed in pixels.",
                                            "type": "integer"
                                        },
                                        "width": {
                                            "description": "The screen resolution's width, expressed in pixels.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "incompatibilityMessages": {
                            "description": "Information about the compatibility.",
                            "items": {
                                "description": "Represents information about incompatibility.",
                                "properties": {
                                    "message": {
                                        "description": "A message about the incompatibility.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>",
                                        "enum": [
                                            "ARN",
                                            "PLATFORM",
                                            "FORM_FACTOR",
                                            "MANUFACTURER",
                                            "REMOTE_ACCESS_ENABLED",
                                            "REMOTE_DEBUG_ENABLED",
                                            "APPIUM_VERSION",
                                            "INSTANCE_ARN",
                                            "INSTANCE_LABELS",
                                            "FLEET_TYPE",
                                            "OS_VERSION",
                                            "MODEL",
                                            "AVAILABILITY"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DevicePoolType": {
                "enum": [
                    "CURATED",
                    "PRIVATE"
                ],
                "type": "string"
            },
            "DevicePools": {
                "items": {
                    "description": "Represents a collection of device types.",
                    "properties": {
                        "arn": {
                            "description": "The device pool's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "description": {
                            "description": "The device pool's description.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "maxDevices": {
                            "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                            "type": "integer"
                        },
                        "name": {
                            "description": "The device pool's name.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "rules": {
                            "description": "Information about the device pool's rules.",
                            "items": {
                                "description": "Represents a condition for a device pool.",
                                "properties": {
                                    "attribute": {
                                        "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                        "enum": [
                                            "ARN",
                                            "PLATFORM",
                                            "FORM_FACTOR",
                                            "MANUFACTURER",
                                            "REMOTE_ACCESS_ENABLED",
                                            "REMOTE_DEBUG_ENABLED",
                                            "APPIUM_VERSION",
                                            "INSTANCE_ARN",
                                            "INSTANCE_LABELS",
                                            "FLEET_TYPE",
                                            "OS_VERSION",
                                            "MODEL",
                                            "AVAILABILITY"
                                        ],
                                        "type": "string"
                                    },
                                    "operator": {
                                        "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                        "enum": [
                                            "EQUALS",
                                            "LESS_THAN",
                                            "LESS_THAN_OR_EQUALS",
                                            "GREATER_THAN",
                                            "GREATER_THAN_OR_EQUALS",
                                            "IN",
                                            "NOT_IN",
                                            "CONTAINS"
                                        ],
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "The rule's value.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "type": {
                            "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                            "enum": [
                                "CURATED",
                                "PRIVATE"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "DeviceSelectionConfiguration": {
                "description": "Represents the device filters used in a test run as well as the maximum number of devices to be included in the run. It is passed in as the <code>deviceSelectionConfiguration</code> request parameter in <a>ScheduleRun</a>.",
                "properties": {
                    "filters": {
                        "description": "<p>Used to dynamically select a set of devices for a test run. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p> <b>Attribute</b> </p> <p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> </li> <li> <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> </li> <li> <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p> </li> <li> <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> </li> <li> <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> <li> <p> <b>Operator</b> </p> <p>The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p> <b>Values</b> </p> <p>An array of one or more filter values.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> </ul>",
                        "items": {
                            "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                            "properties": {
                                "attribute": {
                                    "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                    "enum": [
                                        "ARN",
                                        "PLATFORM",
                                        "OS_VERSION",
                                        "MODEL",
                                        "AVAILABILITY",
                                        "FORM_FACTOR",
                                        "MANUFACTURER",
                                        "REMOTE_ACCESS_ENABLED",
                                        "REMOTE_DEBUG_ENABLED",
                                        "INSTANCE_ARN",
                                        "INSTANCE_LABELS",
                                        "FLEET_TYPE"
                                    ],
                                    "type": "string"
                                },
                                "operator": {
                                    "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                    "enum": [
                                        "EQUALS",
                                        "LESS_THAN",
                                        "LESS_THAN_OR_EQUALS",
                                        "GREATER_THAN",
                                        "GREATER_THAN_OR_EQUALS",
                                        "IN",
                                        "NOT_IN",
                                        "CONTAINS"
                                    ],
                                    "type": "string"
                                },
                                "values": {
                                    "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "maxDevices": {
                        "description": "The maximum number of devices to be included in a test run.",
                        "type": "integer"
                    }
                },
                "required": [
                    "filters",
                    "maxDevices"
                ],
                "type": "object"
            },
            "DeviceSelectionResult": {
                "description": "Contains the run results requested by the device selection configuration as well as how many devices were returned. For an example of the JSON response syntax, see <a>ScheduleRun</a>.",
                "properties": {
                    "filters": {
                        "description": "The filters in a device selection result.",
                        "items": {
                            "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                            "properties": {
                                "attribute": {
                                    "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                    "enum": [
                                        "ARN",
                                        "PLATFORM",
                                        "OS_VERSION",
                                        "MODEL",
                                        "AVAILABILITY",
                                        "FORM_FACTOR",
                                        "MANUFACTURER",
                                        "REMOTE_ACCESS_ENABLED",
                                        "REMOTE_DEBUG_ENABLED",
                                        "INSTANCE_ARN",
                                        "INSTANCE_LABELS",
                                        "FLEET_TYPE"
                                    ],
                                    "type": "string"
                                },
                                "operator": {
                                    "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                    "enum": [
                                        "EQUALS",
                                        "LESS_THAN",
                                        "LESS_THAN_OR_EQUALS",
                                        "GREATER_THAN",
                                        "GREATER_THAN_OR_EQUALS",
                                        "IN",
                                        "NOT_IN",
                                        "CONTAINS"
                                    ],
                                    "type": "string"
                                },
                                "values": {
                                    "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "matchedDevicesCount": {
                        "description": "The number of devices that matched the device filter selection criteria.",
                        "type": "integer"
                    },
                    "maxDevices": {
                        "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Devices": {
                "items": {
                    "description": "Represents a device type that an app is tested against.",
                    "properties": {
                        "arn": {
                            "description": "The device's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "availability": {
                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                            "enum": [
                                "TEMPORARY_NOT_AVAILABLE",
                                "BUSY",
                                "AVAILABLE",
                                "HIGHLY_AVAILABLE"
                            ],
                            "type": "string"
                        },
                        "carrier": {
                            "description": "The device's carrier.",
                            "type": "string"
                        },
                        "cpu": {
                            "description": "Information about the device's CPU.",
                            "properties": {
                                "architecture": {
                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                    "type": "string"
                                },
                                "clock": {
                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "frequency": {
                                    "description": "The CPU's frequency.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "fleetName": {
                            "description": "The name of the fleet to which this device belongs.",
                            "type": "string"
                        },
                        "fleetType": {
                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                            "type": "string"
                        },
                        "formFactor": {
                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                            "enum": [
                                "PHONE",
                                "TABLET"
                            ],
                            "type": "string"
                        },
                        "heapSize": {
                            "description": "The device's heap size, expressed in bytes.",
                            "type": "integer"
                        },
                        "image": {
                            "description": "The device's image name.",
                            "type": "string"
                        },
                        "instances": {
                            "description": "The instances belonging to this device.",
                            "items": {
                                "description": "Represents the device instance.",
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "deviceArn": {
                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "instanceProfile": {
                                        "description": "A object containing information about the instance profile.",
                                        "properties": {
                                            "arn": {
                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "description": {
                                                "description": "The description of the instance profile.",
                                                "maxLength": 16384,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "excludeAppPackagesFromCleanup": {
                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "name": {
                                                "description": "The name of the instance profile.",
                                                "maxLength": 256,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "packageCleanup": {
                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                "type": "boolean"
                                            },
                                            "rebootAfterUse": {
                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "labels": {
                                        "description": "An array of strings describing the device instance.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "status": {
                                        "description": "The status of the device instance. Valid values are listed below.",
                                        "enum": [
                                            "IN_USE",
                                            "PREPARING",
                                            "AVAILABLE",
                                            "NOT_AVAILABLE"
                                        ],
                                        "type": "string"
                                    },
                                    "udid": {
                                        "description": "Unique device identifier for the device instance.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "manufacturer": {
                            "description": "The device's manufacturer name.",
                            "type": "string"
                        },
                        "memory": {
                            "description": "The device's total memory size, expressed in bytes.",
                            "type": "integer"
                        },
                        "model": {
                            "description": "The device's model name.",
                            "type": "string"
                        },
                        "modelId": {
                            "description": "The device's model ID.",
                            "type": "string"
                        },
                        "name": {
                            "description": "The device's display name.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "os": {
                            "description": "The device's operating system type.",
                            "type": "string"
                        },
                        "platform": {
                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                            "enum": [
                                "ANDROID",
                                "IOS"
                            ],
                            "type": "string"
                        },
                        "radio": {
                            "description": "The device's radio.",
                            "type": "string"
                        },
                        "remoteAccessEnabled": {
                            "description": "Specifies whether remote access has been enabled for the specified device.",
                            "type": "boolean"
                        },
                        "remoteDebugEnabled": {
                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                            "type": "boolean"
                        },
                        "resolution": {
                            "description": "The resolution of the device.",
                            "properties": {
                                "height": {
                                    "description": "The screen resolution's height, expressed in pixels.",
                                    "type": "integer"
                                },
                                "width": {
                                    "description": "The screen resolution's width, expressed in pixels.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Double": {
                "format": "double",
                "type": "number"
            },
            "ExecutionConfiguration": {
                "description": "Represents configuration information about a test run, such as the execution timeout (in minutes).",
                "properties": {
                    "accountsCleanup": {
                        "description": "True if account cleanup is enabled at the beginning of the test; otherwise, false.",
                        "type": "boolean"
                    },
                    "appPackagesCleanup": {
                        "description": "True if app package cleanup is enabled at the beginning of the test; otherwise, false.",
                        "type": "boolean"
                    },
                    "jobTimeoutMinutes": {
                        "description": "The number of minutes a test run will execute before it times out.",
                        "type": "integer"
                    },
                    "skipAppResign": {
                        "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                        "type": "boolean"
                    },
                    "videoCapture": {
                        "description": "Set to true to enable video capture; otherwise, set to false. The default is true.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ExecutionResult": {
                "enum": [
                    "PENDING",
                    "PASSED",
                    "WARNED",
                    "FAILED",
                    "SKIPPED",
                    "ERRORED",
                    "STOPPED"
                ],
                "type": "string"
            },
            "ExecutionResultCode": {
                "enum": [
                    "PARSING_FAILED",
                    "VPC_ENDPOINT_SETUP_FAILED"
                ],
                "type": "string"
            },
            "ExecutionStatus": {
                "enum": [
                    "PENDING",
                    "PENDING_CONCURRENCY",
                    "PENDING_DEVICE",
                    "PROCESSING",
                    "SCHEDULING",
                    "PREPARING",
                    "RUNNING",
                    "COMPLETED",
                    "STOPPING"
                ],
                "type": "string"
            },
            "Filter": {
                "maxLength": 8192,
                "minLength": 0,
                "type": "string"
            },
            "GetAccountSettingsRequest": {
                "description": "Represents the request sent to retrieve the account settings.",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "GetAccountSettingsResult": {
                "description": "Represents the account settings return values from the <code>GetAccountSettings</code> request.",
                "example": {
                    "accountSettings": {
                        "awsAccountNumber": "123456789101",
                        "unmeteredDevices": {
                            "ANDROID": 1,
                            "IOS": 2
                        }
                    }
                },
                "properties": {
                    "accountSettings": {
                        "description": "The account settings.",
                        "properties": {
                            "awsAccountNumber": {
                                "description": "The AWS account number specified in the <code>AccountSettings</code> container.",
                                "maxLength": 16,
                                "minLength": 2,
                                "type": "string"
                            },
                            "defaultJobTimeoutMinutes": {
                                "description": "The default number of minutes (at the account level) a test run will execute before it times out. Default value is 60 minutes.",
                                "type": "integer"
                            },
                            "maxJobTimeoutMinutes": {
                                "description": "The maximum number of minutes a test run will execute before it times out.",
                                "type": "integer"
                            },
                            "maxSlots": {
                                "description": "The maximum number of device slots that the AWS account can purchase. Each maximum is expressed as an <code>offering-id:number</code> pair, where the <code>offering-id</code> represents one of the IDs returned by the <code>ListOfferings</code> command.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "skipAppResign": {
                                "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                "type": "boolean"
                            },
                            "trialMinutes": {
                                "description": "Information about an AWS account's usage of free trial device minutes.",
                                "properties": {
                                    "remaining": {
                                        "description": "The number of free trial minutes remaining in the account.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "The total number of free trial minutes that the account started with.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "unmeteredDevices": {
                                "description": "Returns the unmetered devices you have purchased or want to purchase.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "enum": [
                                                "ANDROID",
                                                "IOS"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "unmeteredRemoteAccessDevices": {
                                "description": "Returns the unmetered remote access devices you have purchased or want to purchase.",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "enum": [
                                                "ANDROID",
                                                "IOS"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetDeviceInstanceRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the instance you're requesting information about.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetDeviceInstanceResult": {
                "properties": {
                    "deviceInstance": {
                        "description": "An object containing information about your device instance.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the device instance.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "deviceArn": {
                                "description": "The Amazon Resource Name (ARN) of the device.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "instanceProfile": {
                                "description": "A object containing information about the instance profile.",
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the instance profile.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "excludeAppPackagesFromCleanup": {
                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "The name of the instance profile.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "packageCleanup": {
                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                        "type": "boolean"
                                    },
                                    "rebootAfterUse": {
                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "labels": {
                                "description": "An array of strings describing the device instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "status": {
                                "description": "The status of the device instance. Valid values are listed below.",
                                "enum": [
                                    "IN_USE",
                                    "PREPARING",
                                    "AVAILABLE",
                                    "NOT_AVAILABLE"
                                ],
                                "type": "string"
                            },
                            "udid": {
                                "description": "Unique device identifier for the device instance.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetDevicePoolCompatibilityRequest": {
                "description": "Represents a request to the get device pool compatibility operation.",
                "example": {
                    "appArn": "arn:aws:devicefarm:us-west-2::app:123-456-EXAMPLE-GUID",
                    "devicePoolArn": "arn:aws:devicefarm:us-west-2::devicepool:123-456-EXAMPLE-GUID",
                    "testType": "APPIUM_PYTHON"
                },
                "properties": {
                    "appArn": {
                        "description": "The ARN of the app that is associated with the specified device pool.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "configuration": {
                        "description": "An object containing information about the settings for a run.",
                        "properties": {
                            "auxiliaryApps": {
                                "description": "A list of auxiliary apps for the run.",
                                "items": {
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "billingMethod": {
                                "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                "enum": [
                                    "METERED",
                                    "UNMETERED"
                                ],
                                "type": "string"
                            },
                            "customerArtifactPaths": {
                                "description": "Input <code>CustomerArtifactPaths</code> object for the scheduled run configuration.",
                                "properties": {
                                    "androidPaths": {
                                        "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "deviceHostPaths": {
                                        "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "iosPaths": {
                                        "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "extraDataPackageArn": {
                                "description": "The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm will extract to external data for Android or the app's sandbox for iOS.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "locale": {
                                "description": "Information about the locale that is used for the run.",
                                "type": "string"
                            },
                            "location": {
                                "description": "Information about the location that is used for the run.",
                                "properties": {
                                    "latitude": {
                                        "description": "The latitude.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "longitude": {
                                        "description": "The longitude.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "latitude",
                                    "longitude"
                                ],
                                "type": "object"
                            },
                            "networkProfileArn": {
                                "description": "Reserved for internal use.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "radios": {
                                "description": "Information about the radio states for the run.",
                                "properties": {
                                    "bluetooth": {
                                        "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "gps": {
                                        "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "nfc": {
                                        "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "wifi": {
                                        "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "vpceConfigurationArns": {
                                "description": "An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.",
                                "items": {
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "devicePoolArn": {
                        "description": "The device pool's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "test": {
                        "description": "Information about the uploaded test to be run against the device pool.",
                        "properties": {
                            "filter": {
                                "description": "The test's filter.",
                                "maxLength": 8192,
                                "minLength": 0,
                                "type": "string"
                            },
                            "parameters": {
                                "description": "<p>The test's parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.</p> <p>For all tests:</p> <ul> <li> <p>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to \"false\" to disable it.</p> </li> </ul> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile, for example, \"my_profile_name\".</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don't have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are \"1.6.5\" (and higher), \"latest\", and \"default\".</p> <ul> <li> <p>“latest” will run the latest Appium version supported by Device Farm (1.9.1).</p> </li> <li> <p>For “default”, Device Farm will choose a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For Fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A username to use if the Explorer encounters a login form. If not supplied, no username will be inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password will be inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: \"LoginTests\"</p> </li> <li> <p>Running a multiple test classes: \"LoginTests,SmokeTests\"</p> </li> <li> <p>Running a single test: \"LoginTests/testValid\"</p> </li> <li> <p>Running multiple tests: \"LoginTests/testValid,LoginTests/testInvalid\"</p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul>",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "testPackageArn": {
                                "description": "The ARN of the uploaded test that will be run.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "testSpecArn": {
                                "description": "The ARN of the YAML-formatted test specification.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                "enum": [
                                    "BUILTIN_FUZZ",
                                    "BUILTIN_EXPLORER",
                                    "WEB_PERFORMANCE_PROFILE",
                                    "APPIUM_JAVA_JUNIT",
                                    "APPIUM_JAVA_TESTNG",
                                    "APPIUM_PYTHON",
                                    "APPIUM_NODE",
                                    "APPIUM_RUBY",
                                    "APPIUM_WEB_JAVA_JUNIT",
                                    "APPIUM_WEB_JAVA_TESTNG",
                                    "APPIUM_WEB_PYTHON",
                                    "APPIUM_WEB_NODE",
                                    "APPIUM_WEB_RUBY",
                                    "CALABASH",
                                    "INSTRUMENTATION",
                                    "UIAUTOMATION",
                                    "UIAUTOMATOR",
                                    "XCTEST",
                                    "XCTEST_UI",
                                    "REMOTE_ACCESS_RECORD",
                                    "REMOTE_ACCESS_REPLAY"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "type"
                        ],
                        "type": "object"
                    },
                    "testType": {
                        "description": "<p>The test type for the specified device pool.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                        "enum": [
                            "BUILTIN_FUZZ",
                            "BUILTIN_EXPLORER",
                            "WEB_PERFORMANCE_PROFILE",
                            "APPIUM_JAVA_JUNIT",
                            "APPIUM_JAVA_TESTNG",
                            "APPIUM_PYTHON",
                            "APPIUM_NODE",
                            "APPIUM_RUBY",
                            "APPIUM_WEB_JAVA_JUNIT",
                            "APPIUM_WEB_JAVA_TESTNG",
                            "APPIUM_WEB_PYTHON",
                            "APPIUM_WEB_NODE",
                            "APPIUM_WEB_RUBY",
                            "CALABASH",
                            "INSTRUMENTATION",
                            "UIAUTOMATION",
                            "UIAUTOMATOR",
                            "XCTEST",
                            "XCTEST_UI",
                            "REMOTE_ACCESS_RECORD",
                            "REMOTE_ACCESS_REPLAY"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "devicePoolArn"
                ],
                "type": "object"
            },
            "GetDevicePoolCompatibilityResult": {
                "description": "Represents the result of describe device pool compatibility request.",
                "example": {
                    "compatibleDevices": [],
                    "incompatibleDevices": []
                },
                "properties": {
                    "compatibleDevices": {
                        "description": "Information about compatible devices.",
                        "items": {
                            "description": "Represents a device pool compatibility result.",
                            "properties": {
                                "compatible": {
                                    "description": "Whether the result was compatible with the device pool.",
                                    "type": "boolean"
                                },
                                "device": {
                                    "description": "The device (phone or tablet) that you wish to return information about.",
                                    "properties": {
                                        "arn": {
                                            "description": "The device's ARN.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "availability": {
                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                            "enum": [
                                                "TEMPORARY_NOT_AVAILABLE",
                                                "BUSY",
                                                "AVAILABLE",
                                                "HIGHLY_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "carrier": {
                                            "description": "The device's carrier.",
                                            "type": "string"
                                        },
                                        "cpu": {
                                            "description": "Information about the device's CPU.",
                                            "properties": {
                                                "architecture": {
                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                    "type": "string"
                                                },
                                                "clock": {
                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "frequency": {
                                                    "description": "The CPU's frequency.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "fleetName": {
                                            "description": "The name of the fleet to which this device belongs.",
                                            "type": "string"
                                        },
                                        "fleetType": {
                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                            "type": "string"
                                        },
                                        "formFactor": {
                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                            "enum": [
                                                "PHONE",
                                                "TABLET"
                                            ],
                                            "type": "string"
                                        },
                                        "heapSize": {
                                            "description": "The device's heap size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "image": {
                                            "description": "The device's image name.",
                                            "type": "string"
                                        },
                                        "instances": {
                                            "description": "The instances belonging to this device.",
                                            "items": {
                                                "description": "Represents the device instance.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "deviceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "instanceProfile": {
                                                        "description": "A object containing information about the instance profile.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "description": "The description of the instance profile.",
                                                                "maxLength": 16384,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "excludeAppPackagesFromCleanup": {
                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "description": "The name of the instance profile.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "packageCleanup": {
                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                "type": "boolean"
                                                            },
                                                            "rebootAfterUse": {
                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "description": "An array of strings describing the device instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "status": {
                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                        "enum": [
                                                            "IN_USE",
                                                            "PREPARING",
                                                            "AVAILABLE",
                                                            "NOT_AVAILABLE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "udid": {
                                                        "description": "Unique device identifier for the device instance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "manufacturer": {
                                            "description": "The device's manufacturer name.",
                                            "type": "string"
                                        },
                                        "memory": {
                                            "description": "The device's total memory size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "model": {
                                            "description": "The device's model name.",
                                            "type": "string"
                                        },
                                        "modelId": {
                                            "description": "The device's model ID.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The device's display name.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "os": {
                                            "description": "The device's operating system type.",
                                            "type": "string"
                                        },
                                        "platform": {
                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                            "enum": [
                                                "ANDROID",
                                                "IOS"
                                            ],
                                            "type": "string"
                                        },
                                        "radio": {
                                            "description": "The device's radio.",
                                            "type": "string"
                                        },
                                        "remoteAccessEnabled": {
                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                            "type": "boolean"
                                        },
                                        "remoteDebugEnabled": {
                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                            "type": "boolean"
                                        },
                                        "resolution": {
                                            "description": "The resolution of the device.",
                                            "properties": {
                                                "height": {
                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                    "type": "integer"
                                                },
                                                "width": {
                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "incompatibilityMessages": {
                                    "description": "Information about the compatibility.",
                                    "items": {
                                        "description": "Represents information about incompatibility.",
                                        "properties": {
                                            "message": {
                                                "description": "A message about the incompatibility.",
                                                "maxLength": 16384,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "type": {
                                                "description": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>",
                                                "enum": [
                                                    "ARN",
                                                    "PLATFORM",
                                                    "FORM_FACTOR",
                                                    "MANUFACTURER",
                                                    "REMOTE_ACCESS_ENABLED",
                                                    "REMOTE_DEBUG_ENABLED",
                                                    "APPIUM_VERSION",
                                                    "INSTANCE_ARN",
                                                    "INSTANCE_LABELS",
                                                    "FLEET_TYPE",
                                                    "OS_VERSION",
                                                    "MODEL",
                                                    "AVAILABILITY"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "incompatibleDevices": {
                        "description": "Information about incompatible devices.",
                        "items": {
                            "description": "Represents a device pool compatibility result.",
                            "properties": {
                                "compatible": {
                                    "description": "Whether the result was compatible with the device pool.",
                                    "type": "boolean"
                                },
                                "device": {
                                    "description": "The device (phone or tablet) that you wish to return information about.",
                                    "properties": {
                                        "arn": {
                                            "description": "The device's ARN.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "availability": {
                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                            "enum": [
                                                "TEMPORARY_NOT_AVAILABLE",
                                                "BUSY",
                                                "AVAILABLE",
                                                "HIGHLY_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "carrier": {
                                            "description": "The device's carrier.",
                                            "type": "string"
                                        },
                                        "cpu": {
                                            "description": "Information about the device's CPU.",
                                            "properties": {
                                                "architecture": {
                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                    "type": "string"
                                                },
                                                "clock": {
                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "frequency": {
                                                    "description": "The CPU's frequency.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "fleetName": {
                                            "description": "The name of the fleet to which this device belongs.",
                                            "type": "string"
                                        },
                                        "fleetType": {
                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                            "type": "string"
                                        },
                                        "formFactor": {
                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                            "enum": [
                                                "PHONE",
                                                "TABLET"
                                            ],
                                            "type": "string"
                                        },
                                        "heapSize": {
                                            "description": "The device's heap size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "image": {
                                            "description": "The device's image name.",
                                            "type": "string"
                                        },
                                        "instances": {
                                            "description": "The instances belonging to this device.",
                                            "items": {
                                                "description": "Represents the device instance.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "deviceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "instanceProfile": {
                                                        "description": "A object containing information about the instance profile.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "description": "The description of the instance profile.",
                                                                "maxLength": 16384,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "excludeAppPackagesFromCleanup": {
                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "description": "The name of the instance profile.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "packageCleanup": {
                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                "type": "boolean"
                                                            },
                                                            "rebootAfterUse": {
                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "description": "An array of strings describing the device instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "status": {
                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                        "enum": [
                                                            "IN_USE",
                                                            "PREPARING",
                                                            "AVAILABLE",
                                                            "NOT_AVAILABLE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "udid": {
                                                        "description": "Unique device identifier for the device instance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "manufacturer": {
                                            "description": "The device's manufacturer name.",
                                            "type": "string"
                                        },
                                        "memory": {
                                            "description": "The device's total memory size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "model": {
                                            "description": "The device's model name.",
                                            "type": "string"
                                        },
                                        "modelId": {
                                            "description": "The device's model ID.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The device's display name.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "os": {
                                            "description": "The device's operating system type.",
                                            "type": "string"
                                        },
                                        "platform": {
                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                            "enum": [
                                                "ANDROID",
                                                "IOS"
                                            ],
                                            "type": "string"
                                        },
                                        "radio": {
                                            "description": "The device's radio.",
                                            "type": "string"
                                        },
                                        "remoteAccessEnabled": {
                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                            "type": "boolean"
                                        },
                                        "remoteDebugEnabled": {
                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                            "type": "boolean"
                                        },
                                        "resolution": {
                                            "description": "The resolution of the device.",
                                            "properties": {
                                                "height": {
                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                    "type": "integer"
                                                },
                                                "width": {
                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "incompatibilityMessages": {
                                    "description": "Information about the compatibility.",
                                    "items": {
                                        "description": "Represents information about incompatibility.",
                                        "properties": {
                                            "message": {
                                                "description": "A message about the incompatibility.",
                                                "maxLength": 16384,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "type": {
                                                "description": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>",
                                                "enum": [
                                                    "ARN",
                                                    "PLATFORM",
                                                    "FORM_FACTOR",
                                                    "MANUFACTURER",
                                                    "REMOTE_ACCESS_ENABLED",
                                                    "REMOTE_DEBUG_ENABLED",
                                                    "APPIUM_VERSION",
                                                    "INSTANCE_ARN",
                                                    "INSTANCE_LABELS",
                                                    "FLEET_TYPE",
                                                    "OS_VERSION",
                                                    "MODEL",
                                                    "AVAILABILITY"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "GetDevicePoolRequest": {
                "description": "Represents a request to the get device pool operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "The device pool's ARN.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetDevicePoolResult": {
                "description": "Represents the result of a get device pool request.",
                "example": {
                    "devicePool": {}
                },
                "properties": {
                    "devicePool": {
                        "description": "An object containing information about the requested device pool.",
                        "properties": {
                            "arn": {
                                "description": "The device pool's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The device pool's description.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "maxDevices": {
                                "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The device pool's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "rules": {
                                "description": "Information about the device pool's rules.",
                                "items": {
                                    "description": "Represents a condition for a device pool.",
                                    "properties": {
                                        "attribute": {
                                            "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                            "enum": [
                                                "ARN",
                                                "PLATFORM",
                                                "FORM_FACTOR",
                                                "MANUFACTURER",
                                                "REMOTE_ACCESS_ENABLED",
                                                "REMOTE_DEBUG_ENABLED",
                                                "APPIUM_VERSION",
                                                "INSTANCE_ARN",
                                                "INSTANCE_LABELS",
                                                "FLEET_TYPE",
                                                "OS_VERSION",
                                                "MODEL",
                                                "AVAILABILITY"
                                            ],
                                            "type": "string"
                                        },
                                        "operator": {
                                            "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                            "enum": [
                                                "EQUALS",
                                                "LESS_THAN",
                                                "LESS_THAN_OR_EQUALS",
                                                "GREATER_THAN",
                                                "GREATER_THAN_OR_EQUALS",
                                                "IN",
                                                "NOT_IN",
                                                "CONTAINS"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "The rule's value.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "type": {
                                "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetDeviceRequest": {
                "description": "Represents a request to the get device request.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2::device:123EXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "The device type's ARN.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetDeviceResult": {
                "description": "Represents the result of a get device request.",
                "example": {
                    "device": {
                        "arn": "arn:aws:devicefarm:us-west-2::device:A0E6E6E1059E45918208DF75B2B7EF6C",
                        "cpu": {
                            "architecture": "armeabi-v7a",
                            "clock": 2265.6,
                            "frequency": "MHz"
                        },
                        "formFactor": "PHONE",
                        "heapSize": 256000000,
                        "image": "75B2B7EF6C12345EXAMPLE",
                        "manufacturer": "LG",
                        "memory": 16000000000,
                        "model": "G2 (Sprint)",
                        "name": "LG G2 (Sprint)",
                        "os": "4.2.2",
                        "platform": "ANDROID",
                        "resolution": {
                            "height": 1920,
                            "width": 1080
                        }
                    }
                },
                "properties": {
                    "device": {
                        "description": "An object containing information about the requested device.",
                        "properties": {
                            "arn": {
                                "description": "The device's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "availability": {
                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                "enum": [
                                    "TEMPORARY_NOT_AVAILABLE",
                                    "BUSY",
                                    "AVAILABLE",
                                    "HIGHLY_AVAILABLE"
                                ],
                                "type": "string"
                            },
                            "carrier": {
                                "description": "The device's carrier.",
                                "type": "string"
                            },
                            "cpu": {
                                "description": "Information about the device's CPU.",
                                "properties": {
                                    "architecture": {
                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                        "type": "string"
                                    },
                                    "clock": {
                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "frequency": {
                                        "description": "The CPU's frequency.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "fleetName": {
                                "description": "The name of the fleet to which this device belongs.",
                                "type": "string"
                            },
                            "fleetType": {
                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                "type": "string"
                            },
                            "formFactor": {
                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                "enum": [
                                    "PHONE",
                                    "TABLET"
                                ],
                                "type": "string"
                            },
                            "heapSize": {
                                "description": "The device's heap size, expressed in bytes.",
                                "type": "integer"
                            },
                            "image": {
                                "description": "The device's image name.",
                                "type": "string"
                            },
                            "instances": {
                                "description": "The instances belonging to this device.",
                                "items": {
                                    "description": "Represents the device instance.",
                                    "properties": {
                                        "arn": {
                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "deviceArn": {
                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "instanceProfile": {
                                            "description": "A object containing information about the instance profile.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the instance profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "excludeAppPackagesFromCleanup": {
                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the instance profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "packageCleanup": {
                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                    "type": "boolean"
                                                },
                                                "rebootAfterUse": {
                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "labels": {
                                            "description": "An array of strings describing the device instance.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "description": "The status of the device instance. Valid values are listed below.",
                                            "enum": [
                                                "IN_USE",
                                                "PREPARING",
                                                "AVAILABLE",
                                                "NOT_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "udid": {
                                            "description": "Unique device identifier for the device instance.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "manufacturer": {
                                "description": "The device's manufacturer name.",
                                "type": "string"
                            },
                            "memory": {
                                "description": "The device's total memory size, expressed in bytes.",
                                "type": "integer"
                            },
                            "model": {
                                "description": "The device's model name.",
                                "type": "string"
                            },
                            "modelId": {
                                "description": "The device's model ID.",
                                "type": "string"
                            },
                            "name": {
                                "description": "The device's display name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "os": {
                                "description": "The device's operating system type.",
                                "type": "string"
                            },
                            "platform": {
                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID",
                                    "IOS"
                                ],
                                "type": "string"
                            },
                            "radio": {
                                "description": "The device's radio.",
                                "type": "string"
                            },
                            "remoteAccessEnabled": {
                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                "type": "boolean"
                            },
                            "remoteDebugEnabled": {
                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                "type": "boolean"
                            },
                            "resolution": {
                                "description": "The resolution of the device.",
                                "properties": {
                                    "height": {
                                        "description": "The screen resolution's height, expressed in pixels.",
                                        "type": "integer"
                                    },
                                    "width": {
                                        "description": "The screen resolution's width, expressed in pixels.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetInstanceProfileRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of your instance profile.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetInstanceProfileResult": {
                "properties": {
                    "instanceProfile": {
                        "description": "An object containing information about your instance profile.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The description of the instance profile.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "excludeAppPackagesFromCleanup": {
                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "name": {
                                "description": "The name of the instance profile.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "packageCleanup": {
                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                "type": "boolean"
                            },
                            "rebootAfterUse": {
                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetJobRequest": {
                "description": "Represents a request to the get job operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2::job:123-456-EXAMPLE-GUID"
                },
                "properties": {
                    "arn": {
                        "description": "The job's ARN.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetJobResult": {
                "description": "Represents the result of a get job request.",
                "example": {
                    "job": {}
                },
                "properties": {
                    "job": {
                        "description": "An object containing information about the requested job.",
                        "properties": {
                            "arn": {
                                "description": "The job's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "counters": {
                                "description": "The job's result counters.",
                                "properties": {
                                    "errored": {
                                        "description": "The number of errored entities.",
                                        "type": "integer"
                                    },
                                    "failed": {
                                        "description": "The number of failed entities.",
                                        "type": "integer"
                                    },
                                    "passed": {
                                        "description": "The number of passed entities.",
                                        "type": "integer"
                                    },
                                    "skipped": {
                                        "description": "The number of skipped entities.",
                                        "type": "integer"
                                    },
                                    "stopped": {
                                        "description": "The number of stopped entities.",
                                        "type": "integer"
                                    },
                                    "total": {
                                        "description": "The total number of entities.",
                                        "type": "integer"
                                    },
                                    "warned": {
                                        "description": "The number of warned entities.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "created": {
                                "description": "When the job was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "device": {
                                "description": "The device (phone or tablet).",
                                "properties": {
                                    "arn": {
                                        "description": "The device's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "availability": {
                                        "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                        "enum": [
                                            "TEMPORARY_NOT_AVAILABLE",
                                            "BUSY",
                                            "AVAILABLE",
                                            "HIGHLY_AVAILABLE"
                                        ],
                                        "type": "string"
                                    },
                                    "carrier": {
                                        "description": "The device's carrier.",
                                        "type": "string"
                                    },
                                    "cpu": {
                                        "description": "Information about the device's CPU.",
                                        "properties": {
                                            "architecture": {
                                                "description": "The CPU's architecture, for example x86 or ARM.",
                                                "type": "string"
                                            },
                                            "clock": {
                                                "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "frequency": {
                                                "description": "The CPU's frequency.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "fleetName": {
                                        "description": "The name of the fleet to which this device belongs.",
                                        "type": "string"
                                    },
                                    "fleetType": {
                                        "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                        "type": "string"
                                    },
                                    "formFactor": {
                                        "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                        "enum": [
                                            "PHONE",
                                            "TABLET"
                                        ],
                                        "type": "string"
                                    },
                                    "heapSize": {
                                        "description": "The device's heap size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "The device's image name.",
                                        "type": "string"
                                    },
                                    "instances": {
                                        "description": "The instances belonging to this device.",
                                        "items": {
                                            "description": "Represents the device instance.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "instanceProfile": {
                                                    "description": "A object containing information about the instance profile.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the instance profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "excludeAppPackagesFromCleanup": {
                                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the instance profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "packageCleanup": {
                                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                            "type": "boolean"
                                                        },
                                                        "rebootAfterUse": {
                                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "labels": {
                                                    "description": "An array of strings describing the device instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "status": {
                                                    "description": "The status of the device instance. Valid values are listed below.",
                                                    "enum": [
                                                        "IN_USE",
                                                        "PREPARING",
                                                        "AVAILABLE",
                                                        "NOT_AVAILABLE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "udid": {
                                                    "description": "Unique device identifier for the device instance.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "manufacturer": {
                                        "description": "The device's manufacturer name.",
                                        "type": "string"
                                    },
                                    "memory": {
                                        "description": "The device's total memory size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "model": {
                                        "description": "The device's model name.",
                                        "type": "string"
                                    },
                                    "modelId": {
                                        "description": "The device's model ID.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The device's display name.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "os": {
                                        "description": "The device's operating system type.",
                                        "type": "string"
                                    },
                                    "platform": {
                                        "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                        "enum": [
                                            "ANDROID",
                                            "IOS"
                                        ],
                                        "type": "string"
                                    },
                                    "radio": {
                                        "description": "The device's radio.",
                                        "type": "string"
                                    },
                                    "remoteAccessEnabled": {
                                        "description": "Specifies whether remote access has been enabled for the specified device.",
                                        "type": "boolean"
                                    },
                                    "remoteDebugEnabled": {
                                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                        "type": "boolean"
                                    },
                                    "resolution": {
                                        "description": "The resolution of the device.",
                                        "properties": {
                                            "height": {
                                                "description": "The screen resolution's height, expressed in pixels.",
                                                "type": "integer"
                                            },
                                            "width": {
                                                "description": "The screen resolution's width, expressed in pixels.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceMinutes": {
                                "description": "Represents the total (metered or unmetered) minutes used by the job.",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "instanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the instance.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "message": {
                                "description": "A message about the job's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The job's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "result": {
                                "description": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "started": {
                                "description": "The job's start time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The job's stop time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby test type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                "enum": [
                                    "BUILTIN_FUZZ",
                                    "BUILTIN_EXPLORER",
                                    "WEB_PERFORMANCE_PROFILE",
                                    "APPIUM_JAVA_JUNIT",
                                    "APPIUM_JAVA_TESTNG",
                                    "APPIUM_PYTHON",
                                    "APPIUM_NODE",
                                    "APPIUM_RUBY",
                                    "APPIUM_WEB_JAVA_JUNIT",
                                    "APPIUM_WEB_JAVA_TESTNG",
                                    "APPIUM_WEB_PYTHON",
                                    "APPIUM_WEB_NODE",
                                    "APPIUM_WEB_RUBY",
                                    "CALABASH",
                                    "INSTRUMENTATION",
                                    "UIAUTOMATION",
                                    "UIAUTOMATOR",
                                    "XCTEST",
                                    "XCTEST_UI",
                                    "REMOTE_ACCESS_RECORD",
                                    "REMOTE_ACCESS_REPLAY"
                                ],
                                "type": "string"
                            },
                            "videoCapture": {
                                "description": "This value is set to true if video capture is enabled; otherwise, it is set to false.",
                                "type": "boolean"
                            },
                            "videoEndpoint": {
                                "description": "The endpoint for streaming device video.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetNetworkProfileRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the network profile you want to return information about.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetNetworkProfileResult": {
                "properties": {
                    "networkProfile": {
                        "description": "The network profile.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the network profile.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The description of the network profile.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "downlinkBandwidthBits": {
                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                "type": "integer"
                            },
                            "downlinkDelayMs": {
                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "downlinkJitterMs": {
                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "downlinkLossPercent": {
                                "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "name": {
                                "description": "The name of the network profile.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "type": {
                                "description": "The type of network profile. Valid values are listed below.",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            },
                            "uplinkBandwidthBits": {
                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                "type": "integer"
                            },
                            "uplinkDelayMs": {
                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "uplinkJitterMs": {
                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "uplinkLossPercent": {
                                "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetOfferingStatusRequest": {
                "description": "Represents the request to retrieve the offering status for the specified customer or account.",
                "example": {
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
                },
                "properties": {
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetOfferingStatusResult": {
                "description": "Returns the status result for a device offering.",
                "example": {
                    "current": {
                        "D68B3C05-1BA6-4360-BC69-12345EXAMPLE": {
                            "offering": {
                                "description": "Android Remote Access Unmetered Device Slot",
                                "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                "platform": "ANDROID",
                                "type": "RECURRING"
                            },
                            "quantity": 1
                        }
                    },
                    "nextPeriod": {
                        "D68B3C05-1BA6-4360-BC69-12345EXAMPLE": {
                            "effectiveOn": "1472688000",
                            "offering": {
                                "description": "Android Remote Access Unmetered Device Slot",
                                "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                "platform": "ANDROID",
                                "type": "RECURRING"
                            },
                            "quantity": 1
                        }
                    }
                },
                "properties": {
                    "current": {
                        "description": "When specified, gets the offering status for the current period.",
                        "items": {
                            "properties": {
                                "key": {
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The status of the offering.",
                                    "properties": {
                                        "effectiveOn": {
                                            "description": "The date on which the offering is effective.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "offering": {
                                            "description": "Represents the metadata of an offering status.",
                                            "properties": {
                                                "description": {
                                                    "description": "A string describing the offering.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "description": "The ID that corresponds to a device offering.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "platform": {
                                                    "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                    "enum": [
                                                        "ANDROID",
                                                        "IOS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "recurringCharges": {
                                                    "description": "Specifies whether there are recurring charges for the offering.",
                                                    "items": {
                                                        "description": "Specifies whether charges for devices will be recurring.",
                                                        "properties": {
                                                            "cost": {
                                                                "description": "The cost of the recurring charge.",
                                                                "properties": {
                                                                    "amount": {
                                                                        "description": "The numerical amount of an offering or transaction.",
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "currencyCode": {
                                                                        "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                        "enum": [
                                                                            "USD"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "frequency": {
                                                                "description": "The frequency in which charges will recur.",
                                                                "enum": [
                                                                    "MONTHLY"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                    "enum": [
                                                        "RECURRING"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "quantity": {
                                            "description": "The number of available devices in the offering.",
                                            "type": "integer"
                                        },
                                        "type": {
                                            "description": "The type specified for the offering status.",
                                            "enum": [
                                                "PURCHASE",
                                                "RENEW",
                                                "SYSTEM"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextPeriod": {
                        "description": "When specified, gets the offering status for the next period.",
                        "items": {
                            "properties": {
                                "key": {
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The status of the offering.",
                                    "properties": {
                                        "effectiveOn": {
                                            "description": "The date on which the offering is effective.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "offering": {
                                            "description": "Represents the metadata of an offering status.",
                                            "properties": {
                                                "description": {
                                                    "description": "A string describing the offering.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "description": "The ID that corresponds to a device offering.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "platform": {
                                                    "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                    "enum": [
                                                        "ANDROID",
                                                        "IOS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "recurringCharges": {
                                                    "description": "Specifies whether there are recurring charges for the offering.",
                                                    "items": {
                                                        "description": "Specifies whether charges for devices will be recurring.",
                                                        "properties": {
                                                            "cost": {
                                                                "description": "The cost of the recurring charge.",
                                                                "properties": {
                                                                    "amount": {
                                                                        "description": "The numerical amount of an offering or transaction.",
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "currencyCode": {
                                                                        "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                        "enum": [
                                                                            "USD"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "frequency": {
                                                                "description": "The frequency in which charges will recur.",
                                                                "enum": [
                                                                    "MONTHLY"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                    "enum": [
                                                        "RECURRING"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "quantity": {
                                            "description": "The number of available devices in the offering.",
                                            "type": "integer"
                                        },
                                        "type": {
                                            "description": "The type specified for the offering status.",
                                            "enum": [
                                                "PURCHASE",
                                                "RENEW",
                                                "SYSTEM"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetProjectRequest": {
                "description": "Represents a request to the get project operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "The project's ARN.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetProjectResult": {
                "description": "Represents the result of a get project request.",
                "example": {
                    "project": {
                        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE",
                        "created": "1472660939.152",
                        "name": "My Project"
                    }
                },
                "properties": {
                    "project": {
                        "description": "The project you wish to get information about.",
                        "properties": {
                            "arn": {
                                "description": "The project's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "created": {
                                "description": "When the project was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "defaultJobTimeoutMinutes": {
                                "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The project's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetRemoteAccessSessionRequest": {
                "description": "Represents the request to get information about the specified remote access session.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the remote access session about which you want to get session information.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetRemoteAccessSessionResult": {
                "description": "Represents the response from the server that lists detailed information about the remote access session.",
                "example": {
                    "remoteAccessSession": {}
                },
                "properties": {
                    "remoteAccessSession": {
                        "description": "A container that lists detailed information about the remote access session.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the remote access session.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "billingMethod": {
                                "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                                "enum": [
                                    "METERED",
                                    "UNMETERED"
                                ],
                                "type": "string"
                            },
                            "clientId": {
                                "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "created": {
                                "description": "The date and time the remote access session was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "device": {
                                "description": "The device (phone or tablet) used in the remote access session.",
                                "properties": {
                                    "arn": {
                                        "description": "The device's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "availability": {
                                        "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                        "enum": [
                                            "TEMPORARY_NOT_AVAILABLE",
                                            "BUSY",
                                            "AVAILABLE",
                                            "HIGHLY_AVAILABLE"
                                        ],
                                        "type": "string"
                                    },
                                    "carrier": {
                                        "description": "The device's carrier.",
                                        "type": "string"
                                    },
                                    "cpu": {
                                        "description": "Information about the device's CPU.",
                                        "properties": {
                                            "architecture": {
                                                "description": "The CPU's architecture, for example x86 or ARM.",
                                                "type": "string"
                                            },
                                            "clock": {
                                                "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "frequency": {
                                                "description": "The CPU's frequency.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "fleetName": {
                                        "description": "The name of the fleet to which this device belongs.",
                                        "type": "string"
                                    },
                                    "fleetType": {
                                        "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                        "type": "string"
                                    },
                                    "formFactor": {
                                        "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                        "enum": [
                                            "PHONE",
                                            "TABLET"
                                        ],
                                        "type": "string"
                                    },
                                    "heapSize": {
                                        "description": "The device's heap size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "The device's image name.",
                                        "type": "string"
                                    },
                                    "instances": {
                                        "description": "The instances belonging to this device.",
                                        "items": {
                                            "description": "Represents the device instance.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "instanceProfile": {
                                                    "description": "A object containing information about the instance profile.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the instance profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "excludeAppPackagesFromCleanup": {
                                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the instance profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "packageCleanup": {
                                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                            "type": "boolean"
                                                        },
                                                        "rebootAfterUse": {
                                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "labels": {
                                                    "description": "An array of strings describing the device instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "status": {
                                                    "description": "The status of the device instance. Valid values are listed below.",
                                                    "enum": [
                                                        "IN_USE",
                                                        "PREPARING",
                                                        "AVAILABLE",
                                                        "NOT_AVAILABLE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "udid": {
                                                    "description": "Unique device identifier for the device instance.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "manufacturer": {
                                        "description": "The device's manufacturer name.",
                                        "type": "string"
                                    },
                                    "memory": {
                                        "description": "The device's total memory size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "model": {
                                        "description": "The device's model name.",
                                        "type": "string"
                                    },
                                    "modelId": {
                                        "description": "The device's model ID.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The device's display name.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "os": {
                                        "description": "The device's operating system type.",
                                        "type": "string"
                                    },
                                    "platform": {
                                        "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                        "enum": [
                                            "ANDROID",
                                            "IOS"
                                        ],
                                        "type": "string"
                                    },
                                    "radio": {
                                        "description": "The device's radio.",
                                        "type": "string"
                                    },
                                    "remoteAccessEnabled": {
                                        "description": "Specifies whether remote access has been enabled for the specified device.",
                                        "type": "boolean"
                                    },
                                    "remoteDebugEnabled": {
                                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                        "type": "boolean"
                                    },
                                    "resolution": {
                                        "description": "The resolution of the device.",
                                        "properties": {
                                            "height": {
                                                "description": "The screen resolution's height, expressed in pixels.",
                                                "type": "integer"
                                            },
                                            "width": {
                                                "description": "The screen resolution's width, expressed in pixels.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceMinutes": {
                                "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceUdid": {
                                "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                                "type": "string"
                            },
                            "endpoint": {
                                "description": "The endpoint for the remote access sesssion.",
                                "type": "string"
                            },
                            "hostAddress": {
                                "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                                "maxLength": 1024,
                                "type": "string"
                            },
                            "instanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the instance.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "interactionMode": {
                                "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                                "enum": [
                                    "INTERACTIVE",
                                    "NO_VIDEO",
                                    "VIDEO_ONLY"
                                ],
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "message": {
                                "description": "A message about the remote access session.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the remote access session.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "remoteDebugEnabled": {
                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                                "type": "boolean"
                            },
                            "remoteRecordAppArn": {
                                "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "remoteRecordEnabled": {
                                "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                                "type": "boolean"
                            },
                            "result": {
                                "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "skipAppResign": {
                                "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                "type": "boolean"
                            },
                            "started": {
                                "description": "The date and time the remote access session was started.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The date and time the remote access session was stopped.",
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetRunRequest": {
                "description": "Represents a request to the get run operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "The run's ARN.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetRunResult": {
                "description": "Represents the result of a get run request.",
                "example": {
                    "run": {
                        "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE",
                        "billingMethod": "METERED",
                        "completedJobs": 0,
                        "counters": {
                            "errored": 0,
                            "failed": 0,
                            "passed": 0,
                            "skipped": 0,
                            "stopped": 0,
                            "total": 0,
                            "warned": 0
                        },
                        "created": "1472667509.852",
                        "deviceMinutes": {
                            "metered": 0,
                            "total": 0,
                            "unmetered": 0
                        },
                        "name": "My Test Run",
                        "platform": "ANDROID",
                        "result": "PENDING",
                        "status": "RUNNING",
                        "totalJobs": 3,
                        "type": "BUILTIN_EXPLORER"
                    }
                },
                "properties": {
                    "run": {
                        "description": "The run you wish to get results from.",
                        "properties": {
                            "appUpload": {
                                "description": "An app to upload or that has been uploaded.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "arn": {
                                "description": "The run's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "billingMethod": {
                                "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                "enum": [
                                    "METERED",
                                    "UNMETERED"
                                ],
                                "type": "string"
                            },
                            "completedJobs": {
                                "description": "The total number of completed jobs.",
                                "type": "integer"
                            },
                            "counters": {
                                "description": "The run's result counters.",
                                "properties": {
                                    "errored": {
                                        "description": "The number of errored entities.",
                                        "type": "integer"
                                    },
                                    "failed": {
                                        "description": "The number of failed entities.",
                                        "type": "integer"
                                    },
                                    "passed": {
                                        "description": "The number of passed entities.",
                                        "type": "integer"
                                    },
                                    "skipped": {
                                        "description": "The number of skipped entities.",
                                        "type": "integer"
                                    },
                                    "stopped": {
                                        "description": "The number of stopped entities.",
                                        "type": "integer"
                                    },
                                    "total": {
                                        "description": "The total number of entities.",
                                        "type": "integer"
                                    },
                                    "warned": {
                                        "description": "The number of warned entities.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "created": {
                                "description": "When the run was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "customerArtifactPaths": {
                                "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                                "properties": {
                                    "androidPaths": {
                                        "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "deviceHostPaths": {
                                        "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "iosPaths": {
                                        "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceMinutes": {
                                "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "devicePoolArn": {
                                "description": "The ARN of the device pool for the run.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "deviceSelectionResult": {
                                "description": "The results of a device filter used to select the devices for a test run.",
                                "properties": {
                                    "filters": {
                                        "description": "The filters in a device selection result.",
                                        "items": {
                                            "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                            "properties": {
                                                "attribute": {
                                                    "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                    "enum": [
                                                        "ARN",
                                                        "PLATFORM",
                                                        "OS_VERSION",
                                                        "MODEL",
                                                        "AVAILABILITY",
                                                        "FORM_FACTOR",
                                                        "MANUFACTURER",
                                                        "REMOTE_ACCESS_ENABLED",
                                                        "REMOTE_DEBUG_ENABLED",
                                                        "INSTANCE_ARN",
                                                        "INSTANCE_LABELS",
                                                        "FLEET_TYPE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "operator": {
                                                    "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                    "enum": [
                                                        "EQUALS",
                                                        "LESS_THAN",
                                                        "LESS_THAN_OR_EQUALS",
                                                        "GREATER_THAN",
                                                        "GREATER_THAN_OR_EQUALS",
                                                        "IN",
                                                        "NOT_IN",
                                                        "CONTAINS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "values": {
                                                    "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "matchedDevicesCount": {
                                        "description": "The number of devices that matched the device filter selection criteria.",
                                        "type": "integer"
                                    },
                                    "maxDevices": {
                                        "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "eventCount": {
                                "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                                "type": "integer"
                            },
                            "jobTimeoutMinutes": {
                                "description": "The number of minutes the job will execute before it times out.",
                                "type": "integer"
                            },
                            "locale": {
                                "description": "Information about the locale that is used for the run.",
                                "type": "string"
                            },
                            "location": {
                                "description": "Information about the location that is used for the run.",
                                "properties": {
                                    "latitude": {
                                        "description": "The latitude.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "longitude": {
                                        "description": "The longitude.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "latitude",
                                    "longitude"
                                ],
                                "type": "object"
                            },
                            "message": {
                                "description": "A message about the run's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The run's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "networkProfile": {
                                "description": "The network profile being used for a test run.",
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the network profile.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the network profile.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "downlinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "downlinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkLossPercent": {
                                        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "The name of the network profile.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "The type of network profile. Valid values are listed below.",
                                        "enum": [
                                            "CURATED",
                                            "PRIVATE"
                                        ],
                                        "type": "string"
                                    },
                                    "uplinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "uplinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkLossPercent": {
                                        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "parsingResultUrl": {
                                "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                                "type": "string"
                            },
                            "platform": {
                                "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID",
                                    "IOS"
                                ],
                                "type": "string"
                            },
                            "radios": {
                                "description": "Information about the radio states for the run.",
                                "properties": {
                                    "bluetooth": {
                                        "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "gps": {
                                        "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "nfc": {
                                        "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "wifi": {
                                        "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "result": {
                                "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "resultCode": {
                                "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                                "enum": [
                                    "PARSING_FAILED",
                                    "VPC_ENDPOINT_SETUP_FAILED"
                                ],
                                "type": "string"
                            },
                            "seed": {
                                "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                                "type": "integer"
                            },
                            "skipAppResign": {
                                "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                "type": "boolean"
                            },
                            "started": {
                                "description": "The run's start time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The run's stop time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "testSpecArn": {
                                "description": "The ARN of the YAML-formatted test specification for the run.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "totalJobs": {
                                "description": "The total number of jobs for the run.",
                                "type": "integer"
                            },
                            "type": {
                                "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                "enum": [
                                    "BUILTIN_FUZZ",
                                    "BUILTIN_EXPLORER",
                                    "WEB_PERFORMANCE_PROFILE",
                                    "APPIUM_JAVA_JUNIT",
                                    "APPIUM_JAVA_TESTNG",
                                    "APPIUM_PYTHON",
                                    "APPIUM_NODE",
                                    "APPIUM_RUBY",
                                    "APPIUM_WEB_JAVA_JUNIT",
                                    "APPIUM_WEB_JAVA_TESTNG",
                                    "APPIUM_WEB_PYTHON",
                                    "APPIUM_WEB_NODE",
                                    "APPIUM_WEB_RUBY",
                                    "CALABASH",
                                    "INSTRUMENTATION",
                                    "UIAUTOMATION",
                                    "UIAUTOMATOR",
                                    "XCTEST",
                                    "XCTEST_UI",
                                    "REMOTE_ACCESS_RECORD",
                                    "REMOTE_ACCESS_REPLAY"
                                ],
                                "type": "string"
                            },
                            "webUrl": {
                                "description": "The Device Farm console URL for the recording of the run.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetSuiteRequest": {
                "description": "Represents a request to the get suite operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:suite:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "The suite's ARN.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetSuiteResult": {
                "description": "Represents the result of a get suite request.",
                "example": {
                    "suite": {}
                },
                "properties": {
                    "suite": {
                        "description": "A collection of one or more tests.",
                        "properties": {
                            "arn": {
                                "description": "The suite's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "counters": {
                                "description": "The suite's result counters.",
                                "properties": {
                                    "errored": {
                                        "description": "The number of errored entities.",
                                        "type": "integer"
                                    },
                                    "failed": {
                                        "description": "The number of failed entities.",
                                        "type": "integer"
                                    },
                                    "passed": {
                                        "description": "The number of passed entities.",
                                        "type": "integer"
                                    },
                                    "skipped": {
                                        "description": "The number of skipped entities.",
                                        "type": "integer"
                                    },
                                    "stopped": {
                                        "description": "The number of stopped entities.",
                                        "type": "integer"
                                    },
                                    "total": {
                                        "description": "The total number of entities.",
                                        "type": "integer"
                                    },
                                    "warned": {
                                        "description": "The number of warned entities.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "created": {
                                "description": "When the suite was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "deviceMinutes": {
                                "description": "Represents the total (metered or unmetered) minutes used by the test suite.",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "message": {
                                "description": "A message about the suite's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The suite's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "result": {
                                "description": "<p>The suite's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "started": {
                                "description": "The suite's start time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The suite's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The suite's stop time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The suite's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                "enum": [
                                    "BUILTIN_FUZZ",
                                    "BUILTIN_EXPLORER",
                                    "WEB_PERFORMANCE_PROFILE",
                                    "APPIUM_JAVA_JUNIT",
                                    "APPIUM_JAVA_TESTNG",
                                    "APPIUM_PYTHON",
                                    "APPIUM_NODE",
                                    "APPIUM_RUBY",
                                    "APPIUM_WEB_JAVA_JUNIT",
                                    "APPIUM_WEB_JAVA_TESTNG",
                                    "APPIUM_WEB_PYTHON",
                                    "APPIUM_WEB_NODE",
                                    "APPIUM_WEB_RUBY",
                                    "CALABASH",
                                    "INSTRUMENTATION",
                                    "UIAUTOMATION",
                                    "UIAUTOMATOR",
                                    "XCTEST",
                                    "XCTEST_UI",
                                    "REMOTE_ACCESS_RECORD",
                                    "REMOTE_ACCESS_REPLAY"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetTestRequest": {
                "description": "Represents a request to the get test operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "The test's ARN.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetTestResult": {
                "description": "Represents the result of a get test request.",
                "example": {
                    "test": {}
                },
                "properties": {
                    "test": {
                        "description": "A test condition that is evaluated.",
                        "properties": {
                            "arn": {
                                "description": "The test's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "counters": {
                                "description": "The test's result counters.",
                                "properties": {
                                    "errored": {
                                        "description": "The number of errored entities.",
                                        "type": "integer"
                                    },
                                    "failed": {
                                        "description": "The number of failed entities.",
                                        "type": "integer"
                                    },
                                    "passed": {
                                        "description": "The number of passed entities.",
                                        "type": "integer"
                                    },
                                    "skipped": {
                                        "description": "The number of skipped entities.",
                                        "type": "integer"
                                    },
                                    "stopped": {
                                        "description": "The number of stopped entities.",
                                        "type": "integer"
                                    },
                                    "total": {
                                        "description": "The total number of entities.",
                                        "type": "integer"
                                    },
                                    "warned": {
                                        "description": "The number of warned entities.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "created": {
                                "description": "When the test was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "deviceMinutes": {
                                "description": "Represents the total (metered or unmetered) minutes used by the test.",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "message": {
                                "description": "A message about the test's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The test's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "result": {
                                "description": "<p>The test's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "started": {
                                "description": "The test's start time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The test's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The test's stop time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                "enum": [
                                    "BUILTIN_FUZZ",
                                    "BUILTIN_EXPLORER",
                                    "WEB_PERFORMANCE_PROFILE",
                                    "APPIUM_JAVA_JUNIT",
                                    "APPIUM_JAVA_TESTNG",
                                    "APPIUM_PYTHON",
                                    "APPIUM_NODE",
                                    "APPIUM_RUBY",
                                    "APPIUM_WEB_JAVA_JUNIT",
                                    "APPIUM_WEB_JAVA_TESTNG",
                                    "APPIUM_WEB_PYTHON",
                                    "APPIUM_WEB_NODE",
                                    "APPIUM_WEB_RUBY",
                                    "CALABASH",
                                    "INSTRUMENTATION",
                                    "UIAUTOMATION",
                                    "UIAUTOMATOR",
                                    "XCTEST",
                                    "XCTEST_UI",
                                    "REMOTE_ACCESS_RECORD",
                                    "REMOTE_ACCESS_REPLAY"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetUploadRequest": {
                "description": "Represents a request to the get upload operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:upload:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "The upload's ARN.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetUploadResult": {
                "description": "Represents the result of a get upload request.",
                "example": {
                    "upload": {}
                },
                "properties": {
                    "upload": {
                        "description": "An app or a set of one or more tests to upload or that have been uploaded.",
                        "properties": {
                            "arn": {
                                "description": "The upload's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "category": {
                                "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            },
                            "contentType": {
                                "description": "The upload's content type (for example, \"application/octet-stream\").",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "created": {
                                "description": "When the upload was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "message": {
                                "description": "A message about the upload's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "metadata": {
                                "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                "maxLength": 8192,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The upload's file name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                "enum": [
                                    "INITIALIZED",
                                    "PROCESSING",
                                    "SUCCEEDED",
                                    "FAILED"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID_APP",
                                    "IOS_APP",
                                    "WEB_APP",
                                    "EXTERNAL_DATA",
                                    "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                    "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                    "APPIUM_PYTHON_TEST_PACKAGE",
                                    "APPIUM_NODE_TEST_PACKAGE",
                                    "APPIUM_RUBY_TEST_PACKAGE",
                                    "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                    "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                    "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                    "APPIUM_WEB_NODE_TEST_PACKAGE",
                                    "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                    "CALABASH_TEST_PACKAGE",
                                    "INSTRUMENTATION_TEST_PACKAGE",
                                    "UIAUTOMATION_TEST_PACKAGE",
                                    "UIAUTOMATOR_TEST_PACKAGE",
                                    "XCTEST_TEST_PACKAGE",
                                    "XCTEST_UI_TEST_PACKAGE",
                                    "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                    "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                    "APPIUM_PYTHON_TEST_SPEC",
                                    "APPIUM_NODE_TEST_SPEC",
                                    "APPIUM_RUBY_TEST_SPEC",
                                    "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                    "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                    "APPIUM_WEB_PYTHON_TEST_SPEC",
                                    "APPIUM_WEB_NODE_TEST_SPEC",
                                    "APPIUM_WEB_RUBY_TEST_SPEC",
                                    "INSTRUMENTATION_TEST_SPEC",
                                    "XCTEST_UI_TEST_SPEC"
                                ],
                                "type": "string"
                            },
                            "url": {
                                "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GetVPCEConfigurationRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to describe.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "GetVPCEConfigurationResult": {
                "properties": {
                    "vpceConfiguration": {
                        "description": "An object containing information about your VPC endpoint configuration.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "serviceDnsName": {
                                "description": "The DNS name that maps to the private IP address of the service you want to access.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "vpceConfigurationDescription": {
                                "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "vpceConfigurationName": {
                                "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                "maxLength": 1024,
                                "minLength": 0,
                                "type": "string"
                            },
                            "vpceServiceName": {
                                "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "HostAddress": {
                "maxLength": 1024,
                "type": "string"
            },
            "IdempotencyException": {},
            "IncompatibilityMessage": {
                "description": "Represents information about incompatibility.",
                "properties": {
                    "message": {
                        "description": "A message about the incompatibility.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>",
                        "enum": [
                            "ARN",
                            "PLATFORM",
                            "FORM_FACTOR",
                            "MANUFACTURER",
                            "REMOTE_ACCESS_ENABLED",
                            "REMOTE_DEBUG_ENABLED",
                            "APPIUM_VERSION",
                            "INSTANCE_ARN",
                            "INSTANCE_LABELS",
                            "FLEET_TYPE",
                            "OS_VERSION",
                            "MODEL",
                            "AVAILABILITY"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IncompatibilityMessages": {
                "items": {
                    "description": "Represents information about incompatibility.",
                    "properties": {
                        "message": {
                            "description": "A message about the incompatibility.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "type": {
                            "description": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>",
                            "enum": [
                                "ARN",
                                "PLATFORM",
                                "FORM_FACTOR",
                                "MANUFACTURER",
                                "REMOTE_ACCESS_ENABLED",
                                "REMOTE_DEBUG_ENABLED",
                                "APPIUM_VERSION",
                                "INSTANCE_ARN",
                                "INSTANCE_LABELS",
                                "FLEET_TYPE",
                                "OS_VERSION",
                                "MODEL",
                                "AVAILABILITY"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InstallToRemoteAccessSessionRequest": {
                "description": "Represents the request to install an Android application (in .apk format) or an iOS application (in .ipa format) as part of a remote access session.",
                "example": {
                    "appArn": "arn:aws:devicefarm:us-west-2:123456789101:app:EXAMPLE-GUID-123-456",
                    "remoteAccessSessionArn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "appArn": {
                        "description": "The Amazon Resource Name (ARN) of the app about which you are requesting information.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "remoteAccessSessionArn": {
                        "description": "The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "remoteAccessSessionArn",
                    "appArn"
                ],
                "type": "object"
            },
            "InstallToRemoteAccessSessionResult": {
                "description": "Represents the response from the server after AWS Device Farm makes a request to install to a remote access session.",
                "example": {
                    "appUpload": {}
                },
                "properties": {
                    "appUpload": {
                        "description": "An app to upload or that has been uploaded.",
                        "properties": {
                            "arn": {
                                "description": "The upload's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "category": {
                                "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            },
                            "contentType": {
                                "description": "The upload's content type (for example, \"application/octet-stream\").",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "created": {
                                "description": "When the upload was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "message": {
                                "description": "A message about the upload's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "metadata": {
                                "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                "maxLength": 8192,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The upload's file name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                "enum": [
                                    "INITIALIZED",
                                    "PROCESSING",
                                    "SUCCEEDED",
                                    "FAILED"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID_APP",
                                    "IOS_APP",
                                    "WEB_APP",
                                    "EXTERNAL_DATA",
                                    "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                    "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                    "APPIUM_PYTHON_TEST_PACKAGE",
                                    "APPIUM_NODE_TEST_PACKAGE",
                                    "APPIUM_RUBY_TEST_PACKAGE",
                                    "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                    "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                    "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                    "APPIUM_WEB_NODE_TEST_PACKAGE",
                                    "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                    "CALABASH_TEST_PACKAGE",
                                    "INSTRUMENTATION_TEST_PACKAGE",
                                    "UIAUTOMATION_TEST_PACKAGE",
                                    "UIAUTOMATOR_TEST_PACKAGE",
                                    "XCTEST_TEST_PACKAGE",
                                    "XCTEST_UI_TEST_PACKAGE",
                                    "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                    "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                    "APPIUM_PYTHON_TEST_SPEC",
                                    "APPIUM_NODE_TEST_SPEC",
                                    "APPIUM_RUBY_TEST_SPEC",
                                    "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                    "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                    "APPIUM_WEB_PYTHON_TEST_SPEC",
                                    "APPIUM_WEB_NODE_TEST_SPEC",
                                    "APPIUM_WEB_RUBY_TEST_SPEC",
                                    "INSTRUMENTATION_TEST_SPEC",
                                    "XCTEST_UI_TEST_SPEC"
                                ],
                                "type": "string"
                            },
                            "url": {
                                "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "InstanceLabels": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "InstanceProfile": {
                "description": "Represents the instance profile.",
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the instance profile.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "excludeAppPackagesFromCleanup": {
                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "The name of the instance profile.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "packageCleanup": {
                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                        "type": "boolean"
                    },
                    "rebootAfterUse": {
                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InstanceProfiles": {
                "items": {
                    "description": "Represents the instance profile.",
                    "properties": {
                        "arn": {
                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "description": {
                            "description": "The description of the instance profile.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "excludeAppPackagesFromCleanup": {
                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "name": {
                            "description": "The name of the instance profile.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "packageCleanup": {
                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                            "type": "boolean"
                        },
                        "rebootAfterUse": {
                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "InstanceStatus": {
                "enum": [
                    "IN_USE",
                    "PREPARING",
                    "AVAILABLE",
                    "NOT_AVAILABLE"
                ],
                "type": "string"
            },
            "Integer": {
                "type": "integer"
            },
            "InteractionMode": {
                "enum": [
                    "INTERACTIVE",
                    "NO_VIDEO",
                    "VIDEO_ONLY"
                ],
                "maxLength": 64,
                "minLength": 0,
                "type": "string"
            },
            "InvalidOperationException": {},
            "IosPaths": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "Job": {
                "description": "Represents a device.",
                "properties": {
                    "arn": {
                        "description": "The job's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "counters": {
                        "description": "The job's result counters.",
                        "properties": {
                            "errored": {
                                "description": "The number of errored entities.",
                                "type": "integer"
                            },
                            "failed": {
                                "description": "The number of failed entities.",
                                "type": "integer"
                            },
                            "passed": {
                                "description": "The number of passed entities.",
                                "type": "integer"
                            },
                            "skipped": {
                                "description": "The number of skipped entities.",
                                "type": "integer"
                            },
                            "stopped": {
                                "description": "The number of stopped entities.",
                                "type": "integer"
                            },
                            "total": {
                                "description": "The total number of entities.",
                                "type": "integer"
                            },
                            "warned": {
                                "description": "The number of warned entities.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "created": {
                        "description": "When the job was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "device": {
                        "description": "The device (phone or tablet).",
                        "properties": {
                            "arn": {
                                "description": "The device's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "availability": {
                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                "enum": [
                                    "TEMPORARY_NOT_AVAILABLE",
                                    "BUSY",
                                    "AVAILABLE",
                                    "HIGHLY_AVAILABLE"
                                ],
                                "type": "string"
                            },
                            "carrier": {
                                "description": "The device's carrier.",
                                "type": "string"
                            },
                            "cpu": {
                                "description": "Information about the device's CPU.",
                                "properties": {
                                    "architecture": {
                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                        "type": "string"
                                    },
                                    "clock": {
                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "frequency": {
                                        "description": "The CPU's frequency.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "fleetName": {
                                "description": "The name of the fleet to which this device belongs.",
                                "type": "string"
                            },
                            "fleetType": {
                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                "type": "string"
                            },
                            "formFactor": {
                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                "enum": [
                                    "PHONE",
                                    "TABLET"
                                ],
                                "type": "string"
                            },
                            "heapSize": {
                                "description": "The device's heap size, expressed in bytes.",
                                "type": "integer"
                            },
                            "image": {
                                "description": "The device's image name.",
                                "type": "string"
                            },
                            "instances": {
                                "description": "The instances belonging to this device.",
                                "items": {
                                    "description": "Represents the device instance.",
                                    "properties": {
                                        "arn": {
                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "deviceArn": {
                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "instanceProfile": {
                                            "description": "A object containing information about the instance profile.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the instance profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "excludeAppPackagesFromCleanup": {
                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the instance profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "packageCleanup": {
                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                    "type": "boolean"
                                                },
                                                "rebootAfterUse": {
                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "labels": {
                                            "description": "An array of strings describing the device instance.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "description": "The status of the device instance. Valid values are listed below.",
                                            "enum": [
                                                "IN_USE",
                                                "PREPARING",
                                                "AVAILABLE",
                                                "NOT_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "udid": {
                                            "description": "Unique device identifier for the device instance.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "manufacturer": {
                                "description": "The device's manufacturer name.",
                                "type": "string"
                            },
                            "memory": {
                                "description": "The device's total memory size, expressed in bytes.",
                                "type": "integer"
                            },
                            "model": {
                                "description": "The device's model name.",
                                "type": "string"
                            },
                            "modelId": {
                                "description": "The device's model ID.",
                                "type": "string"
                            },
                            "name": {
                                "description": "The device's display name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "os": {
                                "description": "The device's operating system type.",
                                "type": "string"
                            },
                            "platform": {
                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID",
                                    "IOS"
                                ],
                                "type": "string"
                            },
                            "radio": {
                                "description": "The device's radio.",
                                "type": "string"
                            },
                            "remoteAccessEnabled": {
                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                "type": "boolean"
                            },
                            "remoteDebugEnabled": {
                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                "type": "boolean"
                            },
                            "resolution": {
                                "description": "The resolution of the device.",
                                "properties": {
                                    "height": {
                                        "description": "The screen resolution's height, expressed in pixels.",
                                        "type": "integer"
                                    },
                                    "width": {
                                        "description": "The screen resolution's width, expressed in pixels.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "deviceMinutes": {
                        "description": "Represents the total (metered or unmetered) minutes used by the job.",
                        "properties": {
                            "metered": {
                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "total": {
                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "unmetered": {
                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "instanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the instance.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "message": {
                        "description": "A message about the job's result.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "name": {
                        "description": "The job's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "result": {
                        "description": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PASSED",
                            "WARNED",
                            "FAILED",
                            "SKIPPED",
                            "ERRORED",
                            "STOPPED"
                        ],
                        "type": "string"
                    },
                    "started": {
                        "description": "The job's start time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PENDING_CONCURRENCY",
                            "PENDING_DEVICE",
                            "PROCESSING",
                            "SCHEDULING",
                            "PREPARING",
                            "RUNNING",
                            "COMPLETED",
                            "STOPPING"
                        ],
                        "type": "string"
                    },
                    "stopped": {
                        "description": "The job's stop time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby test type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                        "enum": [
                            "BUILTIN_FUZZ",
                            "BUILTIN_EXPLORER",
                            "WEB_PERFORMANCE_PROFILE",
                            "APPIUM_JAVA_JUNIT",
                            "APPIUM_JAVA_TESTNG",
                            "APPIUM_PYTHON",
                            "APPIUM_NODE",
                            "APPIUM_RUBY",
                            "APPIUM_WEB_JAVA_JUNIT",
                            "APPIUM_WEB_JAVA_TESTNG",
                            "APPIUM_WEB_PYTHON",
                            "APPIUM_WEB_NODE",
                            "APPIUM_WEB_RUBY",
                            "CALABASH",
                            "INSTRUMENTATION",
                            "UIAUTOMATION",
                            "UIAUTOMATOR",
                            "XCTEST",
                            "XCTEST_UI",
                            "REMOTE_ACCESS_RECORD",
                            "REMOTE_ACCESS_REPLAY"
                        ],
                        "type": "string"
                    },
                    "videoCapture": {
                        "description": "This value is set to true if video capture is enabled; otherwise, it is set to false.",
                        "type": "boolean"
                    },
                    "videoEndpoint": {
                        "description": "The endpoint for streaming device video.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "JobTimeoutMinutes": {
                "type": "integer"
            },
            "Jobs": {
                "items": {
                    "description": "Represents a device.",
                    "properties": {
                        "arn": {
                            "description": "The job's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "counters": {
                            "description": "The job's result counters.",
                            "properties": {
                                "errored": {
                                    "description": "The number of errored entities.",
                                    "type": "integer"
                                },
                                "failed": {
                                    "description": "The number of failed entities.",
                                    "type": "integer"
                                },
                                "passed": {
                                    "description": "The number of passed entities.",
                                    "type": "integer"
                                },
                                "skipped": {
                                    "description": "The number of skipped entities.",
                                    "type": "integer"
                                },
                                "stopped": {
                                    "description": "The number of stopped entities.",
                                    "type": "integer"
                                },
                                "total": {
                                    "description": "The total number of entities.",
                                    "type": "integer"
                                },
                                "warned": {
                                    "description": "The number of warned entities.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "created": {
                            "description": "When the job was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "device": {
                            "description": "The device (phone or tablet).",
                            "properties": {
                                "arn": {
                                    "description": "The device's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "availability": {
                                    "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                    "enum": [
                                        "TEMPORARY_NOT_AVAILABLE",
                                        "BUSY",
                                        "AVAILABLE",
                                        "HIGHLY_AVAILABLE"
                                    ],
                                    "type": "string"
                                },
                                "carrier": {
                                    "description": "The device's carrier.",
                                    "type": "string"
                                },
                                "cpu": {
                                    "description": "Information about the device's CPU.",
                                    "properties": {
                                        "architecture": {
                                            "description": "The CPU's architecture, for example x86 or ARM.",
                                            "type": "string"
                                        },
                                        "clock": {
                                            "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "frequency": {
                                            "description": "The CPU's frequency.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "fleetName": {
                                    "description": "The name of the fleet to which this device belongs.",
                                    "type": "string"
                                },
                                "fleetType": {
                                    "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                    "type": "string"
                                },
                                "formFactor": {
                                    "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                    "enum": [
                                        "PHONE",
                                        "TABLET"
                                    ],
                                    "type": "string"
                                },
                                "heapSize": {
                                    "description": "The device's heap size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "image": {
                                    "description": "The device's image name.",
                                    "type": "string"
                                },
                                "instances": {
                                    "description": "The instances belonging to this device.",
                                    "items": {
                                        "description": "Represents the device instance.",
                                        "properties": {
                                            "arn": {
                                                "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "deviceArn": {
                                                "description": "The Amazon Resource Name (ARN) of the device.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "instanceProfile": {
                                                "description": "A object containing information about the instance profile.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "The description of the instance profile.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "excludeAppPackagesFromCleanup": {
                                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "description": "The name of the instance profile.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "packageCleanup": {
                                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                        "type": "boolean"
                                                    },
                                                    "rebootAfterUse": {
                                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "labels": {
                                                "description": "An array of strings describing the device instance.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "status": {
                                                "description": "The status of the device instance. Valid values are listed below.",
                                                "enum": [
                                                    "IN_USE",
                                                    "PREPARING",
                                                    "AVAILABLE",
                                                    "NOT_AVAILABLE"
                                                ],
                                                "type": "string"
                                            },
                                            "udid": {
                                                "description": "Unique device identifier for the device instance.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "manufacturer": {
                                    "description": "The device's manufacturer name.",
                                    "type": "string"
                                },
                                "memory": {
                                    "description": "The device's total memory size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "model": {
                                    "description": "The device's model name.",
                                    "type": "string"
                                },
                                "modelId": {
                                    "description": "The device's model ID.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The device's display name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "os": {
                                    "description": "The device's operating system type.",
                                    "type": "string"
                                },
                                "platform": {
                                    "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                    "enum": [
                                        "ANDROID",
                                        "IOS"
                                    ],
                                    "type": "string"
                                },
                                "radio": {
                                    "description": "The device's radio.",
                                    "type": "string"
                                },
                                "remoteAccessEnabled": {
                                    "description": "Specifies whether remote access has been enabled for the specified device.",
                                    "type": "boolean"
                                },
                                "remoteDebugEnabled": {
                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                    "type": "boolean"
                                },
                                "resolution": {
                                    "description": "The resolution of the device.",
                                    "properties": {
                                        "height": {
                                            "description": "The screen resolution's height, expressed in pixels.",
                                            "type": "integer"
                                        },
                                        "width": {
                                            "description": "The screen resolution's width, expressed in pixels.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "deviceMinutes": {
                            "description": "Represents the total (metered or unmetered) minutes used by the job.",
                            "properties": {
                                "metered": {
                                    "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "total": {
                                    "description": "When specified, represents the total minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "unmetered": {
                                    "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "instanceArn": {
                            "description": "The Amazon Resource Name (ARN) of the instance.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "message": {
                            "description": "A message about the job's result.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "name": {
                            "description": "The job's name.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "result": {
                            "description": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PASSED",
                                "WARNED",
                                "FAILED",
                                "SKIPPED",
                                "ERRORED",
                                "STOPPED"
                            ],
                            "type": "string"
                        },
                        "started": {
                            "description": "The job's start time.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "status": {
                            "description": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PENDING_CONCURRENCY",
                                "PENDING_DEVICE",
                                "PROCESSING",
                                "SCHEDULING",
                                "PREPARING",
                                "RUNNING",
                                "COMPLETED",
                                "STOPPING"
                            ],
                            "type": "string"
                        },
                        "stopped": {
                            "description": "The job's stop time.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "type": {
                            "description": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby test type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                            "enum": [
                                "BUILTIN_FUZZ",
                                "BUILTIN_EXPLORER",
                                "WEB_PERFORMANCE_PROFILE",
                                "APPIUM_JAVA_JUNIT",
                                "APPIUM_JAVA_TESTNG",
                                "APPIUM_PYTHON",
                                "APPIUM_NODE",
                                "APPIUM_RUBY",
                                "APPIUM_WEB_JAVA_JUNIT",
                                "APPIUM_WEB_JAVA_TESTNG",
                                "APPIUM_WEB_PYTHON",
                                "APPIUM_WEB_NODE",
                                "APPIUM_WEB_RUBY",
                                "CALABASH",
                                "INSTRUMENTATION",
                                "UIAUTOMATION",
                                "UIAUTOMATOR",
                                "XCTEST",
                                "XCTEST_UI",
                                "REMOTE_ACCESS_RECORD",
                                "REMOTE_ACCESS_REPLAY"
                            ],
                            "type": "string"
                        },
                        "videoCapture": {
                            "description": "This value is set to true if video capture is enabled; otherwise, it is set to false.",
                            "type": "boolean"
                        },
                        "videoEndpoint": {
                            "description": "The endpoint for streaming device video.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "LimitExceededException": {},
            "ListArtifactsRequest": {
                "description": "Represents a request to the list artifacts operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456",
                    "type": "SCREENSHOT"
                },
                "properties": {
                    "arn": {
                        "description": "The Run, Job, Suite, or Test ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The artifacts' type.</p> <p>Allowed values include:</p> <ul> <li> <p>FILE: The artifacts are files.</p> </li> <li> <p>LOG: The artifacts are logs.</p> </li> <li> <p>SCREENSHOT: The artifacts are screenshots.</p> </li> </ul>",
                        "enum": [
                            "SCREENSHOT",
                            "FILE",
                            "LOG"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "arn",
                    "type"
                ],
                "type": "object"
            },
            "ListArtifactsResult": {
                "description": "Represents the result of a list artifacts operation.",
                "properties": {
                    "artifacts": {
                        "description": "Information about the artifacts.",
                        "items": {
                            "description": "Represents the output of a test. Examples of artifacts include logs and screenshots.",
                            "properties": {
                                "arn": {
                                    "description": "The artifact's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "extension": {
                                    "description": "The artifact's file extension.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The artifact's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "type": {
                                    "description": "<p>The artifact's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>UNKNOWN: An unknown type.</p> </li> <li> <p>SCREENSHOT: The screenshot type.</p> </li> <li> <p>DEVICE_LOG: The device log type.</p> </li> <li> <p>MESSAGE_LOG: The message log type.</p> </li> <li> <p>VIDEO_LOG: The video log type.</p> </li> <li> <p>RESULT_LOG: The result log type.</p> </li> <li> <p>SERVICE_LOG: The service log type.</p> </li> <li> <p>WEBKIT_LOG: The web kit log type.</p> </li> <li> <p>INSTRUMENTATION_OUTPUT: The instrumentation type.</p> </li> <li> <p>EXERCISER_MONKEY_OUTPUT: For Android, the artifact (log) generated by an Android fuzz test.</p> </li> <li> <p>CALABASH_JSON_OUTPUT: The Calabash JSON output type.</p> </li> <li> <p>CALABASH_PRETTY_OUTPUT: The Calabash pretty output type.</p> </li> <li> <p>CALABASH_STANDARD_OUTPUT: The Calabash standard output type.</p> </li> <li> <p>CALABASH_JAVA_XML_OUTPUT: The Calabash Java XML output type.</p> </li> <li> <p>AUTOMATION_OUTPUT: The automation output type.</p> </li> <li> <p>APPIUM_SERVER_OUTPUT: The Appium server output type.</p> </li> <li> <p>APPIUM_JAVA_OUTPUT: The Appium Java output type.</p> </li> <li> <p>APPIUM_JAVA_XML_OUTPUT: The Appium Java XML output type.</p> </li> <li> <p>APPIUM_PYTHON_OUTPUT: The Appium Python output type.</p> </li> <li> <p>APPIUM_PYTHON_XML_OUTPUT: The Appium Python XML output type.</p> </li> <li> <p>EXPLORER_EVENT_LOG: The Explorer event log output type.</p> </li> <li> <p>EXPLORER_SUMMARY_LOG: The Explorer summary log output type.</p> </li> <li> <p>APPLICATION_CRASH_REPORT: The application crash report output type.</p> </li> <li> <p>XCTEST_LOG: The XCode test output type.</p> </li> <li> <p>VIDEO: The Video output type.</p> </li> <li> <p>CUSTOMER_ARTIFACT:The Customer Artifact output type.</p> </li> <li> <p>CUSTOMER_ARTIFACT_LOG: The Customer Artifact Log output type.</p> </li> <li> <p>TESTSPEC_OUTPUT: The Test Spec Output type.</p> </li> </ul>",
                                    "enum": [
                                        "UNKNOWN",
                                        "SCREENSHOT",
                                        "DEVICE_LOG",
                                        "MESSAGE_LOG",
                                        "VIDEO_LOG",
                                        "RESULT_LOG",
                                        "SERVICE_LOG",
                                        "WEBKIT_LOG",
                                        "INSTRUMENTATION_OUTPUT",
                                        "EXERCISER_MONKEY_OUTPUT",
                                        "CALABASH_JSON_OUTPUT",
                                        "CALABASH_PRETTY_OUTPUT",
                                        "CALABASH_STANDARD_OUTPUT",
                                        "CALABASH_JAVA_XML_OUTPUT",
                                        "AUTOMATION_OUTPUT",
                                        "APPIUM_SERVER_OUTPUT",
                                        "APPIUM_JAVA_OUTPUT",
                                        "APPIUM_JAVA_XML_OUTPUT",
                                        "APPIUM_PYTHON_OUTPUT",
                                        "APPIUM_PYTHON_XML_OUTPUT",
                                        "EXPLORER_EVENT_LOG",
                                        "EXPLORER_SUMMARY_LOG",
                                        "APPLICATION_CRASH_REPORT",
                                        "XCTEST_LOG",
                                        "VIDEO",
                                        "CUSTOMER_ARTIFACT",
                                        "CUSTOMER_ARTIFACT_LOG",
                                        "TESTSPEC_OUTPUT"
                                    ],
                                    "type": "string"
                                },
                                "url": {
                                    "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the artifact's file.",
                                    "maxLength": 2048,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDeviceInstancesRequest": {
                "properties": {
                    "maxResults": {
                        "description": "An integer specifying the maximum number of items you want to return in the API response.",
                        "type": "integer"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDeviceInstancesResult": {
                "properties": {
                    "deviceInstances": {
                        "description": "An object containing information about your device instances.",
                        "items": {
                            "description": "Represents the device instance.",
                            "properties": {
                                "arn": {
                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "deviceArn": {
                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "instanceProfile": {
                                    "description": "A object containing information about the instance profile.",
                                    "properties": {
                                        "arn": {
                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "The description of the instance profile.",
                                            "maxLength": 16384,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "excludeAppPackagesFromCleanup": {
                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "description": "The name of the instance profile.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "packageCleanup": {
                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                            "type": "boolean"
                                        },
                                        "rebootAfterUse": {
                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "labels": {
                                    "description": "An array of strings describing the device instance.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "status": {
                                    "description": "The status of the device instance. Valid values are listed below.",
                                    "enum": [
                                        "IN_USE",
                                        "PREPARING",
                                        "AVAILABLE",
                                        "NOT_AVAILABLE"
                                    ],
                                    "type": "string"
                                },
                                "udid": {
                                    "description": "Unique device identifier for the device instance.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "An identifier that can be used in the next call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDevicePoolsRequest": {
                "description": "Represents the result of a list device pools request.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                    "type": "PRIVATE"
                },
                "properties": {
                    "arn": {
                        "description": "The project ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The device pools' type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                        "enum": [
                            "CURATED",
                            "PRIVATE"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListDevicePoolsResult": {
                "description": "Represents the result of a list device pools request.",
                "example": {
                    "devicePools": [
                        {
                            "arn": "arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE",
                            "description": "Top devices",
                            "name": "Top Devices",
                            "rules": [
                                {
                                    "attribute": "ARN",
                                    "operator": "IN",
                                    "value": "[\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"]"
                                }
                            ]
                        },
                        {
                            "arn": "arn:aws:devicefarm:us-west-2:123456789101:devicepool:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/bf96e75a-28f6-4e61-b6a7-12345EXAMPLE",
                            "description": "Samsung Galaxy Android devices",
                            "name": "My Android Device Pool",
                            "rules": [
                                {
                                    "attribute": "ARN",
                                    "operator": "IN",
                                    "value": "[\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"]"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "devicePools": {
                        "description": "Information about the device pools.",
                        "items": {
                            "description": "Represents a collection of device types.",
                            "properties": {
                                "arn": {
                                    "description": "The device pool's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "description": {
                                    "description": "The device pool's description.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "maxDevices": {
                                    "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "The device pool's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "rules": {
                                    "description": "Information about the device pool's rules.",
                                    "items": {
                                        "description": "Represents a condition for a device pool.",
                                        "properties": {
                                            "attribute": {
                                                "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                "enum": [
                                                    "ARN",
                                                    "PLATFORM",
                                                    "FORM_FACTOR",
                                                    "MANUFACTURER",
                                                    "REMOTE_ACCESS_ENABLED",
                                                    "REMOTE_DEBUG_ENABLED",
                                                    "APPIUM_VERSION",
                                                    "INSTANCE_ARN",
                                                    "INSTANCE_LABELS",
                                                    "FLEET_TYPE",
                                                    "OS_VERSION",
                                                    "MODEL",
                                                    "AVAILABILITY"
                                                ],
                                                "type": "string"
                                            },
                                            "operator": {
                                                "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                "enum": [
                                                    "EQUALS",
                                                    "LESS_THAN",
                                                    "LESS_THAN_OR_EQUALS",
                                                    "GREATER_THAN",
                                                    "GREATER_THAN_OR_EQUALS",
                                                    "IN",
                                                    "NOT_IN",
                                                    "CONTAINS"
                                                ],
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "The rule's value.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "type": {
                                    "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                                    "enum": [
                                        "CURATED",
                                        "PRIVATE"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDevicesRequest": {
                "description": "Represents the result of a list devices request.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the project.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "filters": {
                        "description": "<p>Used to select a set of devices. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p>Attribute: The aspect of a device such as platform or model used as the selction criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> </li> <li> <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> </li> <li> <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p> </li> <li> <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> </li> <li> <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> <li> <p>Operator: The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p>Values: An array of one or more filter values.</p> <ul> <li> <p>The IN and NOT_IN operators take a values array that has one or more elements.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> <li> <p>In a request, the AVAILABILITY attribute takes \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\" as values.</p> </li> </ul> </li> </ul>",
                        "items": {
                            "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                            "properties": {
                                "attribute": {
                                    "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                    "enum": [
                                        "ARN",
                                        "PLATFORM",
                                        "OS_VERSION",
                                        "MODEL",
                                        "AVAILABILITY",
                                        "FORM_FACTOR",
                                        "MANUFACTURER",
                                        "REMOTE_ACCESS_ENABLED",
                                        "REMOTE_DEBUG_ENABLED",
                                        "INSTANCE_ARN",
                                        "INSTANCE_LABELS",
                                        "FLEET_TYPE"
                                    ],
                                    "type": "string"
                                },
                                "operator": {
                                    "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                    "enum": [
                                        "EQUALS",
                                        "LESS_THAN",
                                        "LESS_THAN_OR_EQUALS",
                                        "GREATER_THAN",
                                        "GREATER_THAN_OR_EQUALS",
                                        "IN",
                                        "NOT_IN",
                                        "CONTAINS"
                                    ],
                                    "type": "string"
                                },
                                "values": {
                                    "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListDevicesResult": {
                "description": "Represents the result of a list devices operation.",
                "example": {},
                "properties": {
                    "devices": {
                        "description": "Information about the devices.",
                        "items": {
                            "description": "Represents a device type that an app is tested against.",
                            "properties": {
                                "arn": {
                                    "description": "The device's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "availability": {
                                    "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                    "enum": [
                                        "TEMPORARY_NOT_AVAILABLE",
                                        "BUSY",
                                        "AVAILABLE",
                                        "HIGHLY_AVAILABLE"
                                    ],
                                    "type": "string"
                                },
                                "carrier": {
                                    "description": "The device's carrier.",
                                    "type": "string"
                                },
                                "cpu": {
                                    "description": "Information about the device's CPU.",
                                    "properties": {
                                        "architecture": {
                                            "description": "The CPU's architecture, for example x86 or ARM.",
                                            "type": "string"
                                        },
                                        "clock": {
                                            "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "frequency": {
                                            "description": "The CPU's frequency.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "fleetName": {
                                    "description": "The name of the fleet to which this device belongs.",
                                    "type": "string"
                                },
                                "fleetType": {
                                    "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                    "type": "string"
                                },
                                "formFactor": {
                                    "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                    "enum": [
                                        "PHONE",
                                        "TABLET"
                                    ],
                                    "type": "string"
                                },
                                "heapSize": {
                                    "description": "The device's heap size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "image": {
                                    "description": "The device's image name.",
                                    "type": "string"
                                },
                                "instances": {
                                    "description": "The instances belonging to this device.",
                                    "items": {
                                        "description": "Represents the device instance.",
                                        "properties": {
                                            "arn": {
                                                "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "deviceArn": {
                                                "description": "The Amazon Resource Name (ARN) of the device.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "instanceProfile": {
                                                "description": "A object containing information about the instance profile.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "The description of the instance profile.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "excludeAppPackagesFromCleanup": {
                                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "description": "The name of the instance profile.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "packageCleanup": {
                                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                        "type": "boolean"
                                                    },
                                                    "rebootAfterUse": {
                                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "labels": {
                                                "description": "An array of strings describing the device instance.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "status": {
                                                "description": "The status of the device instance. Valid values are listed below.",
                                                "enum": [
                                                    "IN_USE",
                                                    "PREPARING",
                                                    "AVAILABLE",
                                                    "NOT_AVAILABLE"
                                                ],
                                                "type": "string"
                                            },
                                            "udid": {
                                                "description": "Unique device identifier for the device instance.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "manufacturer": {
                                    "description": "The device's manufacturer name.",
                                    "type": "string"
                                },
                                "memory": {
                                    "description": "The device's total memory size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "model": {
                                    "description": "The device's model name.",
                                    "type": "string"
                                },
                                "modelId": {
                                    "description": "The device's model ID.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The device's display name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "os": {
                                    "description": "The device's operating system type.",
                                    "type": "string"
                                },
                                "platform": {
                                    "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                    "enum": [
                                        "ANDROID",
                                        "IOS"
                                    ],
                                    "type": "string"
                                },
                                "radio": {
                                    "description": "The device's radio.",
                                    "type": "string"
                                },
                                "remoteAccessEnabled": {
                                    "description": "Specifies whether remote access has been enabled for the specified device.",
                                    "type": "boolean"
                                },
                                "remoteDebugEnabled": {
                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                    "type": "boolean"
                                },
                                "resolution": {
                                    "description": "The resolution of the device.",
                                    "properties": {
                                        "height": {
                                            "description": "The screen resolution's height, expressed in pixels.",
                                            "type": "integer"
                                        },
                                        "width": {
                                            "description": "The screen resolution's width, expressed in pixels.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListInstanceProfilesRequest": {
                "properties": {
                    "maxResults": {
                        "description": "An integer specifying the maximum number of items you want to return in the API response.",
                        "type": "integer"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListInstanceProfilesResult": {
                "properties": {
                    "instanceProfiles": {
                        "description": "An object containing information about your instance profiles.",
                        "items": {
                            "description": "Represents the instance profile.",
                            "properties": {
                                "arn": {
                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "description": {
                                    "description": "The description of the instance profile.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "excludeAppPackagesFromCleanup": {
                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "description": "The name of the instance profile.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "packageCleanup": {
                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                    "type": "boolean"
                                },
                                "rebootAfterUse": {
                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "An identifier that can be used in the next call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListJobsRequest": {
                "description": "Represents a request to the list jobs operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "The run's Amazon Resource Name (ARN).",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListJobsResult": {
                "description": "Represents the result of a list jobs request.",
                "properties": {
                    "jobs": {
                        "description": "Information about the jobs.",
                        "items": {
                            "description": "Represents a device.",
                            "properties": {
                                "arn": {
                                    "description": "The job's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "counters": {
                                    "description": "The job's result counters.",
                                    "properties": {
                                        "errored": {
                                            "description": "The number of errored entities.",
                                            "type": "integer"
                                        },
                                        "failed": {
                                            "description": "The number of failed entities.",
                                            "type": "integer"
                                        },
                                        "passed": {
                                            "description": "The number of passed entities.",
                                            "type": "integer"
                                        },
                                        "skipped": {
                                            "description": "The number of skipped entities.",
                                            "type": "integer"
                                        },
                                        "stopped": {
                                            "description": "The number of stopped entities.",
                                            "type": "integer"
                                        },
                                        "total": {
                                            "description": "The total number of entities.",
                                            "type": "integer"
                                        },
                                        "warned": {
                                            "description": "The number of warned entities.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "created": {
                                    "description": "When the job was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "device": {
                                    "description": "The device (phone or tablet).",
                                    "properties": {
                                        "arn": {
                                            "description": "The device's ARN.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "availability": {
                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                            "enum": [
                                                "TEMPORARY_NOT_AVAILABLE",
                                                "BUSY",
                                                "AVAILABLE",
                                                "HIGHLY_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "carrier": {
                                            "description": "The device's carrier.",
                                            "type": "string"
                                        },
                                        "cpu": {
                                            "description": "Information about the device's CPU.",
                                            "properties": {
                                                "architecture": {
                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                    "type": "string"
                                                },
                                                "clock": {
                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "frequency": {
                                                    "description": "The CPU's frequency.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "fleetName": {
                                            "description": "The name of the fleet to which this device belongs.",
                                            "type": "string"
                                        },
                                        "fleetType": {
                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                            "type": "string"
                                        },
                                        "formFactor": {
                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                            "enum": [
                                                "PHONE",
                                                "TABLET"
                                            ],
                                            "type": "string"
                                        },
                                        "heapSize": {
                                            "description": "The device's heap size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "image": {
                                            "description": "The device's image name.",
                                            "type": "string"
                                        },
                                        "instances": {
                                            "description": "The instances belonging to this device.",
                                            "items": {
                                                "description": "Represents the device instance.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "deviceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "instanceProfile": {
                                                        "description": "A object containing information about the instance profile.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "description": "The description of the instance profile.",
                                                                "maxLength": 16384,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "excludeAppPackagesFromCleanup": {
                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "description": "The name of the instance profile.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "packageCleanup": {
                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                "type": "boolean"
                                                            },
                                                            "rebootAfterUse": {
                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "description": "An array of strings describing the device instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "status": {
                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                        "enum": [
                                                            "IN_USE",
                                                            "PREPARING",
                                                            "AVAILABLE",
                                                            "NOT_AVAILABLE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "udid": {
                                                        "description": "Unique device identifier for the device instance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "manufacturer": {
                                            "description": "The device's manufacturer name.",
                                            "type": "string"
                                        },
                                        "memory": {
                                            "description": "The device's total memory size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "model": {
                                            "description": "The device's model name.",
                                            "type": "string"
                                        },
                                        "modelId": {
                                            "description": "The device's model ID.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The device's display name.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "os": {
                                            "description": "The device's operating system type.",
                                            "type": "string"
                                        },
                                        "platform": {
                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                            "enum": [
                                                "ANDROID",
                                                "IOS"
                                            ],
                                            "type": "string"
                                        },
                                        "radio": {
                                            "description": "The device's radio.",
                                            "type": "string"
                                        },
                                        "remoteAccessEnabled": {
                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                            "type": "boolean"
                                        },
                                        "remoteDebugEnabled": {
                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                            "type": "boolean"
                                        },
                                        "resolution": {
                                            "description": "The resolution of the device.",
                                            "properties": {
                                                "height": {
                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                    "type": "integer"
                                                },
                                                "width": {
                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "deviceMinutes": {
                                    "description": "Represents the total (metered or unmetered) minutes used by the job.",
                                    "properties": {
                                        "metered": {
                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "total": {
                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "unmetered": {
                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "instanceArn": {
                                    "description": "The Amazon Resource Name (ARN) of the instance.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "message": {
                                    "description": "A message about the job's result.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The job's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "result": {
                                    "description": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PASSED",
                                        "WARNED",
                                        "FAILED",
                                        "SKIPPED",
                                        "ERRORED",
                                        "STOPPED"
                                    ],
                                    "type": "string"
                                },
                                "started": {
                                    "description": "The job's start time.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PENDING_CONCURRENCY",
                                        "PENDING_DEVICE",
                                        "PROCESSING",
                                        "SCHEDULING",
                                        "PREPARING",
                                        "RUNNING",
                                        "COMPLETED",
                                        "STOPPING"
                                    ],
                                    "type": "string"
                                },
                                "stopped": {
                                    "description": "The job's stop time.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby test type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                    "enum": [
                                        "BUILTIN_FUZZ",
                                        "BUILTIN_EXPLORER",
                                        "WEB_PERFORMANCE_PROFILE",
                                        "APPIUM_JAVA_JUNIT",
                                        "APPIUM_JAVA_TESTNG",
                                        "APPIUM_PYTHON",
                                        "APPIUM_NODE",
                                        "APPIUM_RUBY",
                                        "APPIUM_WEB_JAVA_JUNIT",
                                        "APPIUM_WEB_JAVA_TESTNG",
                                        "APPIUM_WEB_PYTHON",
                                        "APPIUM_WEB_NODE",
                                        "APPIUM_WEB_RUBY",
                                        "CALABASH",
                                        "INSTRUMENTATION",
                                        "UIAUTOMATION",
                                        "UIAUTOMATOR",
                                        "XCTEST",
                                        "XCTEST_UI",
                                        "REMOTE_ACCESS_RECORD",
                                        "REMOTE_ACCESS_REPLAY"
                                    ],
                                    "type": "string"
                                },
                                "videoCapture": {
                                    "description": "This value is set to true if video capture is enabled; otherwise, it is set to false.",
                                    "type": "boolean"
                                },
                                "videoEndpoint": {
                                    "description": "The endpoint for streaming device video.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListNetworkProfilesRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the project for which you want to list network profiles.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of network profile you wish to return information about. Valid values are listed below.",
                        "enum": [
                            "CURATED",
                            "PRIVATE"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListNetworkProfilesResult": {
                "properties": {
                    "networkProfiles": {
                        "description": "A list of the available network profiles.",
                        "items": {
                            "description": "An array of settings that describes characteristics of a network profile.",
                            "properties": {
                                "arn": {
                                    "description": "The Amazon Resource Name (ARN) of the network profile.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "description": {
                                    "description": "The description of the network profile.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "downlinkBandwidthBits": {
                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                    "type": "integer"
                                },
                                "downlinkDelayMs": {
                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                    "type": "integer"
                                },
                                "downlinkJitterMs": {
                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                    "type": "integer"
                                },
                                "downlinkLossPercent": {
                                    "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                    "maximum": 100,
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "The name of the network profile.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "type": {
                                    "description": "The type of network profile. Valid values are listed below.",
                                    "enum": [
                                        "CURATED",
                                        "PRIVATE"
                                    ],
                                    "type": "string"
                                },
                                "uplinkBandwidthBits": {
                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                    "type": "integer"
                                },
                                "uplinkDelayMs": {
                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                    "type": "integer"
                                },
                                "uplinkJitterMs": {
                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                    "type": "integer"
                                },
                                "uplinkLossPercent": {
                                    "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                    "maximum": 100,
                                    "minimum": 0,
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListOfferingPromotionsRequest": {
                "properties": {
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListOfferingPromotionsResult": {
                "properties": {
                    "nextToken": {
                        "description": "An identifier to be used in the next call to this operation, to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "offeringPromotions": {
                        "description": "Information about the offering promotions.",
                        "items": {
                            "description": "Represents information about an offering promotion.",
                            "properties": {
                                "description": {
                                    "description": "A string describing the offering promotion.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "id": {
                                    "description": "The ID of the offering promotion.",
                                    "minLength": 4,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListOfferingTransactionsRequest": {
                "description": "Represents the request to list the offering transaction history.",
                "example": {
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
                },
                "properties": {
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListOfferingTransactionsResult": {
                "description": "Returns the transaction log of the specified offerings.",
                "example": {
                    "offeringTransactions": [
                        {
                            "cost": {
                                "amount": 0,
                                "currencyCode": "USD"
                            },
                            "createdOn": "1470021420",
                            "offeringStatus": {
                                "effectiveOn": "1472688000",
                                "offering": {
                                    "description": "Android Remote Access Unmetered Device Slot",
                                    "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                    "platform": "ANDROID",
                                    "type": "RECURRING"
                                },
                                "quantity": 0,
                                "type": "RENEW"
                            },
                            "transactionId": "03728003-d1ea-4851-abd6-12345EXAMPLE"
                        },
                        {
                            "cost": {
                                "amount": 250,
                                "currencyCode": "USD"
                            },
                            "createdOn": "1470021420",
                            "offeringStatus": {
                                "effectiveOn": "1470021420",
                                "offering": {
                                    "description": "Android Remote Access Unmetered Device Slot",
                                    "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                    "platform": "ANDROID",
                                    "type": "RECURRING"
                                },
                                "quantity": 1,
                                "type": "PURCHASE"
                            },
                            "transactionId": "56820b6e-06bd-473a-8ff8-12345EXAMPLE"
                        },
                        {
                            "cost": {
                                "amount": 175,
                                "currencyCode": "USD"
                            },
                            "createdOn": "1465538520",
                            "offeringStatus": {
                                "effectiveOn": "1465538520",
                                "offering": {
                                    "description": "Android Unmetered Device Slot",
                                    "id": "8980F81C-00D7-469D-8EC6-12345EXAMPLE",
                                    "platform": "ANDROID",
                                    "type": "RECURRING"
                                },
                                "quantity": 1,
                                "type": "PURCHASE"
                            },
                            "transactionId": "953ae2c6-d760-4a04-9597-12345EXAMPLE"
                        },
                        {
                            "cost": {
                                "amount": 8.07,
                                "currencyCode": "USD"
                            },
                            "createdOn": "1459344300",
                            "offeringStatus": {
                                "effectiveOn": "1459344300",
                                "offering": {
                                    "description": "iOS Unmetered Device Slot",
                                    "id": "A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE",
                                    "platform": "IOS",
                                    "type": "RECURRING"
                                },
                                "quantity": 1,
                                "type": "PURCHASE"
                            },
                            "transactionId": "2baf9021-ae3e-47f5-ab52-12345EXAMPLE"
                        }
                    ]
                },
                "properties": {
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "offeringTransactions": {
                        "description": "The audit log of subscriptions you have purchased and modified through AWS Device Farm.",
                        "items": {
                            "description": "Represents the metadata of an offering transaction.",
                            "properties": {
                                "cost": {
                                    "description": "The cost of an offering transaction.",
                                    "properties": {
                                        "amount": {
                                            "description": "The numerical amount of an offering or transaction.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "currencyCode": {
                                            "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                            "enum": [
                                                "USD"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "createdOn": {
                                    "description": "The date on which an offering transaction was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "offeringPromotionId": {
                                    "description": "The ID that corresponds to a device offering promotion.",
                                    "minLength": 4,
                                    "type": "string"
                                },
                                "offeringStatus": {
                                    "description": "The status of an offering transaction.",
                                    "properties": {
                                        "effectiveOn": {
                                            "description": "The date on which the offering is effective.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "offering": {
                                            "description": "Represents the metadata of an offering status.",
                                            "properties": {
                                                "description": {
                                                    "description": "A string describing the offering.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "description": "The ID that corresponds to a device offering.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "platform": {
                                                    "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                    "enum": [
                                                        "ANDROID",
                                                        "IOS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "recurringCharges": {
                                                    "description": "Specifies whether there are recurring charges for the offering.",
                                                    "items": {
                                                        "description": "Specifies whether charges for devices will be recurring.",
                                                        "properties": {
                                                            "cost": {
                                                                "description": "The cost of the recurring charge.",
                                                                "properties": {
                                                                    "amount": {
                                                                        "description": "The numerical amount of an offering or transaction.",
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "currencyCode": {
                                                                        "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                        "enum": [
                                                                            "USD"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "frequency": {
                                                                "description": "The frequency in which charges will recur.",
                                                                "enum": [
                                                                    "MONTHLY"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                    "enum": [
                                                        "RECURRING"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "quantity": {
                                            "description": "The number of available devices in the offering.",
                                            "type": "integer"
                                        },
                                        "type": {
                                            "description": "The type specified for the offering status.",
                                            "enum": [
                                                "PURCHASE",
                                                "RENEW",
                                                "SYSTEM"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "transactionId": {
                                    "description": "The transaction ID of the offering transaction.",
                                    "minLength": 32,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListOfferingsRequest": {
                "description": "Represents the request to list all offerings.",
                "example": {
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
                },
                "properties": {
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListOfferingsResult": {
                "description": "Represents the return values of the list of offerings.",
                "example": {
                    "offerings": [
                        {
                            "description": "iOS Unmetered Device Slot",
                            "id": "A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE",
                            "platform": "IOS",
                            "recurringCharges": [
                                {
                                    "cost": {
                                        "amount": 250,
                                        "currencyCode": "USD"
                                    },
                                    "frequency": "MONTHLY"
                                }
                            ],
                            "type": "RECURRING"
                        },
                        {
                            "description": "Android Unmetered Device Slot",
                            "id": "8980F81C-00D7-469D-8EC6-12345EXAMPLE",
                            "platform": "ANDROID",
                            "recurringCharges": [
                                {
                                    "cost": {
                                        "amount": 250,
                                        "currencyCode": "USD"
                                    },
                                    "frequency": "MONTHLY"
                                }
                            ],
                            "type": "RECURRING"
                        },
                        {
                            "description": "Android Remote Access Unmetered Device Slot",
                            "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                            "platform": "ANDROID",
                            "recurringCharges": [
                                {
                                    "cost": {
                                        "amount": 250,
                                        "currencyCode": "USD"
                                    },
                                    "frequency": "MONTHLY"
                                }
                            ],
                            "type": "RECURRING"
                        },
                        {
                            "description": "iOS Remote Access Unmetered Device Slot",
                            "id": "552B4DAD-A6C9-45C4-94FB-12345EXAMPLE",
                            "platform": "IOS",
                            "recurringCharges": [
                                {
                                    "cost": {
                                        "amount": 250,
                                        "currencyCode": "USD"
                                    },
                                    "frequency": "MONTHLY"
                                }
                            ],
                            "type": "RECURRING"
                        }
                    ]
                },
                "properties": {
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "offerings": {
                        "description": "A value representing the list offering results.",
                        "items": {
                            "description": "Represents the metadata of a device offering.",
                            "properties": {
                                "description": {
                                    "description": "A string describing the offering.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "id": {
                                    "description": "The ID that corresponds to a device offering.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "platform": {
                                    "description": "The platform of the device (e.g., ANDROID or IOS).",
                                    "enum": [
                                        "ANDROID",
                                        "IOS"
                                    ],
                                    "type": "string"
                                },
                                "recurringCharges": {
                                    "description": "Specifies whether there are recurring charges for the offering.",
                                    "items": {
                                        "description": "Specifies whether charges for devices will be recurring.",
                                        "properties": {
                                            "cost": {
                                                "description": "The cost of the recurring charge.",
                                                "properties": {
                                                    "amount": {
                                                        "description": "The numerical amount of an offering or transaction.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "currencyCode": {
                                                        "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                        "enum": [
                                                            "USD"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "frequency": {
                                                "description": "The frequency in which charges will recur.",
                                                "enum": [
                                                    "MONTHLY"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "type": {
                                    "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                    "enum": [
                                        "RECURRING"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListProjectsRequest": {
                "description": "Represents a request to the list projects operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE",
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm returns a list of all projects for the AWS account. You can also specify a project ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListProjectsResult": {
                "description": "Represents the result of a list projects request.",
                "example": {
                    "projects": [
                        {
                            "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE",
                            "created": "1453163262.105",
                            "name": "My Test Project"
                        },
                        {
                            "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:d6b087d9-56db-4e44-b9ec-12345EXAMPLE",
                            "created": "1470350112.439",
                            "name": "Hello World"
                        }
                    ]
                },
                "properties": {
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "projects": {
                        "description": "Information about the projects.",
                        "items": {
                            "description": "Represents an operating-system neutral workspace for running and managing tests.",
                            "properties": {
                                "arn": {
                                    "description": "The project's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "created": {
                                    "description": "When the project was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "defaultJobTimeoutMinutes": {
                                    "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "The project's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListRemoteAccessSessionsRequest": {
                "description": "Represents the request to return information about the remote access session.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456",
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListRemoteAccessSessionsResult": {
                "description": "Represents the response from the server after AWS Device Farm makes a request to return information about the remote access session.",
                "example": {
                    "remoteAccessSessions": []
                },
                "properties": {
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "remoteAccessSessions": {
                        "description": "A container representing the metadata from the service about each remote access session you are requesting.",
                        "items": {
                            "description": "Represents information about the remote access session.",
                            "properties": {
                                "arn": {
                                    "description": "The Amazon Resource Name (ARN) of the remote access session.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "billingMethod": {
                                    "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                                    "enum": [
                                        "METERED",
                                        "UNMETERED"
                                    ],
                                    "type": "string"
                                },
                                "clientId": {
                                    "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                                    "maxLength": 64,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "created": {
                                    "description": "The date and time the remote access session was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "device": {
                                    "description": "The device (phone or tablet) used in the remote access session.",
                                    "properties": {
                                        "arn": {
                                            "description": "The device's ARN.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "availability": {
                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                            "enum": [
                                                "TEMPORARY_NOT_AVAILABLE",
                                                "BUSY",
                                                "AVAILABLE",
                                                "HIGHLY_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "carrier": {
                                            "description": "The device's carrier.",
                                            "type": "string"
                                        },
                                        "cpu": {
                                            "description": "Information about the device's CPU.",
                                            "properties": {
                                                "architecture": {
                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                    "type": "string"
                                                },
                                                "clock": {
                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "frequency": {
                                                    "description": "The CPU's frequency.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "fleetName": {
                                            "description": "The name of the fleet to which this device belongs.",
                                            "type": "string"
                                        },
                                        "fleetType": {
                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                            "type": "string"
                                        },
                                        "formFactor": {
                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                            "enum": [
                                                "PHONE",
                                                "TABLET"
                                            ],
                                            "type": "string"
                                        },
                                        "heapSize": {
                                            "description": "The device's heap size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "image": {
                                            "description": "The device's image name.",
                                            "type": "string"
                                        },
                                        "instances": {
                                            "description": "The instances belonging to this device.",
                                            "items": {
                                                "description": "Represents the device instance.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "deviceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "instanceProfile": {
                                                        "description": "A object containing information about the instance profile.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "description": "The description of the instance profile.",
                                                                "maxLength": 16384,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "excludeAppPackagesFromCleanup": {
                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "description": "The name of the instance profile.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "packageCleanup": {
                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                "type": "boolean"
                                                            },
                                                            "rebootAfterUse": {
                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "description": "An array of strings describing the device instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "status": {
                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                        "enum": [
                                                            "IN_USE",
                                                            "PREPARING",
                                                            "AVAILABLE",
                                                            "NOT_AVAILABLE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "udid": {
                                                        "description": "Unique device identifier for the device instance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "manufacturer": {
                                            "description": "The device's manufacturer name.",
                                            "type": "string"
                                        },
                                        "memory": {
                                            "description": "The device's total memory size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "model": {
                                            "description": "The device's model name.",
                                            "type": "string"
                                        },
                                        "modelId": {
                                            "description": "The device's model ID.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The device's display name.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "os": {
                                            "description": "The device's operating system type.",
                                            "type": "string"
                                        },
                                        "platform": {
                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                            "enum": [
                                                "ANDROID",
                                                "IOS"
                                            ],
                                            "type": "string"
                                        },
                                        "radio": {
                                            "description": "The device's radio.",
                                            "type": "string"
                                        },
                                        "remoteAccessEnabled": {
                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                            "type": "boolean"
                                        },
                                        "remoteDebugEnabled": {
                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                            "type": "boolean"
                                        },
                                        "resolution": {
                                            "description": "The resolution of the device.",
                                            "properties": {
                                                "height": {
                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                    "type": "integer"
                                                },
                                                "width": {
                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "deviceMinutes": {
                                    "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                                    "properties": {
                                        "metered": {
                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "total": {
                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "unmetered": {
                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "deviceUdid": {
                                    "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                                    "type": "string"
                                },
                                "endpoint": {
                                    "description": "The endpoint for the remote access sesssion.",
                                    "type": "string"
                                },
                                "hostAddress": {
                                    "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                                    "maxLength": 1024,
                                    "type": "string"
                                },
                                "instanceArn": {
                                    "description": "The Amazon Resource Name (ARN) of the instance.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "interactionMode": {
                                    "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                                    "enum": [
                                        "INTERACTIVE",
                                        "NO_VIDEO",
                                        "VIDEO_ONLY"
                                    ],
                                    "maxLength": 64,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "message": {
                                    "description": "A message about the remote access session.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the remote access session.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "remoteDebugEnabled": {
                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                                    "type": "boolean"
                                },
                                "remoteRecordAppArn": {
                                    "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "remoteRecordEnabled": {
                                    "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                                    "type": "boolean"
                                },
                                "result": {
                                    "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PASSED",
                                        "WARNED",
                                        "FAILED",
                                        "SKIPPED",
                                        "ERRORED",
                                        "STOPPED"
                                    ],
                                    "type": "string"
                                },
                                "skipAppResign": {
                                    "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                    "type": "boolean"
                                },
                                "started": {
                                    "description": "The date and time the remote access session was started.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PENDING_CONCURRENCY",
                                        "PENDING_DEVICE",
                                        "PROCESSING",
                                        "SCHEDULING",
                                        "PREPARING",
                                        "RUNNING",
                                        "COMPLETED",
                                        "STOPPING"
                                    ],
                                    "type": "string"
                                },
                                "stopped": {
                                    "description": "The date and time the remote access session was stopped.",
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListRunsRequest": {
                "description": "Represents a request to the list runs operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE",
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the project for which you want to list runs.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListRunsResult": {
                "description": "Represents the result of a list runs request.",
                "example": {
                    "runs": [
                        {
                            "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE",
                            "billingMethod": "METERED",
                            "completedJobs": 0,
                            "counters": {
                                "errored": 0,
                                "failed": 0,
                                "passed": 0,
                                "skipped": 0,
                                "stopped": 0,
                                "total": 0,
                                "warned": 0
                            },
                            "created": "1472667509.852",
                            "deviceMinutes": {
                                "metered": 0,
                                "total": 0,
                                "unmetered": 0
                            },
                            "name": "My Test Run",
                            "platform": "ANDROID",
                            "result": "PENDING",
                            "status": "RUNNING",
                            "totalJobs": 3,
                            "type": "BUILTIN_EXPLORER"
                        }
                    ]
                },
                "properties": {
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "runs": {
                        "description": "Information about the runs.",
                        "items": {
                            "description": "Represents a test run on a set of devices with a given app package, test parameters, etc.",
                            "properties": {
                                "appUpload": {
                                    "description": "An app to upload or that has been uploaded.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "arn": {
                                    "description": "The run's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "billingMethod": {
                                    "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                    "enum": [
                                        "METERED",
                                        "UNMETERED"
                                    ],
                                    "type": "string"
                                },
                                "completedJobs": {
                                    "description": "The total number of completed jobs.",
                                    "type": "integer"
                                },
                                "counters": {
                                    "description": "The run's result counters.",
                                    "properties": {
                                        "errored": {
                                            "description": "The number of errored entities.",
                                            "type": "integer"
                                        },
                                        "failed": {
                                            "description": "The number of failed entities.",
                                            "type": "integer"
                                        },
                                        "passed": {
                                            "description": "The number of passed entities.",
                                            "type": "integer"
                                        },
                                        "skipped": {
                                            "description": "The number of skipped entities.",
                                            "type": "integer"
                                        },
                                        "stopped": {
                                            "description": "The number of stopped entities.",
                                            "type": "integer"
                                        },
                                        "total": {
                                            "description": "The total number of entities.",
                                            "type": "integer"
                                        },
                                        "warned": {
                                            "description": "The number of warned entities.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "created": {
                                    "description": "When the run was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "customerArtifactPaths": {
                                    "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                                    "properties": {
                                        "androidPaths": {
                                            "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "deviceHostPaths": {
                                            "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "iosPaths": {
                                            "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "deviceMinutes": {
                                    "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                                    "properties": {
                                        "metered": {
                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "total": {
                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "unmetered": {
                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "devicePoolArn": {
                                    "description": "The ARN of the device pool for the run.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "deviceSelectionResult": {
                                    "description": "The results of a device filter used to select the devices for a test run.",
                                    "properties": {
                                        "filters": {
                                            "description": "The filters in a device selection result.",
                                            "items": {
                                                "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                                "properties": {
                                                    "attribute": {
                                                        "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                        "enum": [
                                                            "ARN",
                                                            "PLATFORM",
                                                            "OS_VERSION",
                                                            "MODEL",
                                                            "AVAILABILITY",
                                                            "FORM_FACTOR",
                                                            "MANUFACTURER",
                                                            "REMOTE_ACCESS_ENABLED",
                                                            "REMOTE_DEBUG_ENABLED",
                                                            "INSTANCE_ARN",
                                                            "INSTANCE_LABELS",
                                                            "FLEET_TYPE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "operator": {
                                                        "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                        "enum": [
                                                            "EQUALS",
                                                            "LESS_THAN",
                                                            "LESS_THAN_OR_EQUALS",
                                                            "GREATER_THAN",
                                                            "GREATER_THAN_OR_EQUALS",
                                                            "IN",
                                                            "NOT_IN",
                                                            "CONTAINS"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "values": {
                                                        "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "matchedDevicesCount": {
                                            "description": "The number of devices that matched the device filter selection criteria.",
                                            "type": "integer"
                                        },
                                        "maxDevices": {
                                            "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "eventCount": {
                                    "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                                    "type": "integer"
                                },
                                "jobTimeoutMinutes": {
                                    "description": "The number of minutes the job will execute before it times out.",
                                    "type": "integer"
                                },
                                "locale": {
                                    "description": "Information about the locale that is used for the run.",
                                    "type": "string"
                                },
                                "location": {
                                    "description": "Information about the location that is used for the run.",
                                    "properties": {
                                        "latitude": {
                                            "description": "The latitude.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "longitude": {
                                            "description": "The longitude.",
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "latitude",
                                        "longitude"
                                    ],
                                    "type": "object"
                                },
                                "message": {
                                    "description": "A message about the run's result.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The run's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "networkProfile": {
                                    "description": "The network profile being used for a test run.",
                                    "properties": {
                                        "arn": {
                                            "description": "The Amazon Resource Name (ARN) of the network profile.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "description": {
                                            "description": "The description of the network profile.",
                                            "maxLength": 16384,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "downlinkBandwidthBits": {
                                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                            "type": "integer"
                                        },
                                        "downlinkDelayMs": {
                                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                            "type": "integer"
                                        },
                                        "downlinkJitterMs": {
                                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                            "type": "integer"
                                        },
                                        "downlinkLossPercent": {
                                            "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "name": {
                                            "description": "The name of the network profile.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "The type of network profile. Valid values are listed below.",
                                            "enum": [
                                                "CURATED",
                                                "PRIVATE"
                                            ],
                                            "type": "string"
                                        },
                                        "uplinkBandwidthBits": {
                                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                            "type": "integer"
                                        },
                                        "uplinkDelayMs": {
                                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                            "type": "integer"
                                        },
                                        "uplinkJitterMs": {
                                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                            "type": "integer"
                                        },
                                        "uplinkLossPercent": {
                                            "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                            "maximum": 100,
                                            "minimum": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "parsingResultUrl": {
                                    "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                                    "type": "string"
                                },
                                "platform": {
                                    "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                    "enum": [
                                        "ANDROID",
                                        "IOS"
                                    ],
                                    "type": "string"
                                },
                                "radios": {
                                    "description": "Information about the radio states for the run.",
                                    "properties": {
                                        "bluetooth": {
                                            "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                            "type": "boolean"
                                        },
                                        "gps": {
                                            "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                            "type": "boolean"
                                        },
                                        "nfc": {
                                            "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                            "type": "boolean"
                                        },
                                        "wifi": {
                                            "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "result": {
                                    "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PASSED",
                                        "WARNED",
                                        "FAILED",
                                        "SKIPPED",
                                        "ERRORED",
                                        "STOPPED"
                                    ],
                                    "type": "string"
                                },
                                "resultCode": {
                                    "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                                    "enum": [
                                        "PARSING_FAILED",
                                        "VPC_ENDPOINT_SETUP_FAILED"
                                    ],
                                    "type": "string"
                                },
                                "seed": {
                                    "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                                    "type": "integer"
                                },
                                "skipAppResign": {
                                    "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                    "type": "boolean"
                                },
                                "started": {
                                    "description": "The run's start time.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PENDING_CONCURRENCY",
                                        "PENDING_DEVICE",
                                        "PROCESSING",
                                        "SCHEDULING",
                                        "PREPARING",
                                        "RUNNING",
                                        "COMPLETED",
                                        "STOPPING"
                                    ],
                                    "type": "string"
                                },
                                "stopped": {
                                    "description": "The run's stop time.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "testSpecArn": {
                                    "description": "The ARN of the YAML-formatted test specification for the run.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "totalJobs": {
                                    "description": "The total number of jobs for the run.",
                                    "type": "integer"
                                },
                                "type": {
                                    "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                    "enum": [
                                        "BUILTIN_FUZZ",
                                        "BUILTIN_EXPLORER",
                                        "WEB_PERFORMANCE_PROFILE",
                                        "APPIUM_JAVA_JUNIT",
                                        "APPIUM_JAVA_TESTNG",
                                        "APPIUM_PYTHON",
                                        "APPIUM_NODE",
                                        "APPIUM_RUBY",
                                        "APPIUM_WEB_JAVA_JUNIT",
                                        "APPIUM_WEB_JAVA_TESTNG",
                                        "APPIUM_WEB_PYTHON",
                                        "APPIUM_WEB_NODE",
                                        "APPIUM_WEB_RUBY",
                                        "CALABASH",
                                        "INSTRUMENTATION",
                                        "UIAUTOMATION",
                                        "UIAUTOMATOR",
                                        "XCTEST",
                                        "XCTEST_UI",
                                        "REMOTE_ACCESS_RECORD",
                                        "REMOTE_ACCESS_REPLAY"
                                    ],
                                    "type": "string"
                                },
                                "webUrl": {
                                    "description": "The Device Farm console URL for the recording of the run.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListSamplesRequest": {
                "description": "Represents a request to the list samples operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the job used to list samples.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListSamplesResult": {
                "description": "Represents the result of a list samples request.",
                "example": {
                    "samples": []
                },
                "properties": {
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "samples": {
                        "description": "Information about the samples.",
                        "items": {
                            "description": "Represents a sample of performance data.",
                            "properties": {
                                "arn": {
                                    "description": "The sample's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "type": {
                                    "description": "<p>The sample's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>CPU: A CPU sample type. This is expressed as the app processing CPU time (including child processes) as reported by process, as a percentage.</p> </li> <li> <p>MEMORY: A memory usage sample type. This is expressed as the total proportional set size of an app process, in kilobytes.</p> </li> <li> <p>NATIVE_AVG_DRAWTIME</p> </li> <li> <p>NATIVE_FPS</p> </li> <li> <p>NATIVE_FRAMES</p> </li> <li> <p>NATIVE_MAX_DRAWTIME</p> </li> <li> <p>NATIVE_MIN_DRAWTIME</p> </li> <li> <p>OPENGL_AVG_DRAWTIME</p> </li> <li> <p>OPENGL_FPS</p> </li> <li> <p>OPENGL_FRAMES</p> </li> <li> <p>OPENGL_MAX_DRAWTIME</p> </li> <li> <p>OPENGL_MIN_DRAWTIME</p> </li> <li> <p>RX</p> </li> <li> <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app process.</p> </li> <li> <p>THREADS: A threads sample type. This is expressed as the total number of threads per app process.</p> </li> <li> <p>TX</p> </li> <li> <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are received, by app process.</p> </li> </ul>",
                                    "enum": [
                                        "CPU",
                                        "MEMORY",
                                        "THREADS",
                                        "RX_RATE",
                                        "TX_RATE",
                                        "RX",
                                        "TX",
                                        "NATIVE_FRAMES",
                                        "NATIVE_FPS",
                                        "NATIVE_MIN_DRAWTIME",
                                        "NATIVE_AVG_DRAWTIME",
                                        "NATIVE_MAX_DRAWTIME",
                                        "OPENGL_FRAMES",
                                        "OPENGL_FPS",
                                        "OPENGL_MIN_DRAWTIME",
                                        "OPENGL_AVG_DRAWTIME",
                                        "OPENGL_MAX_DRAWTIME"
                                    ],
                                    "type": "string"
                                },
                                "url": {
                                    "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the sample's file.",
                                    "maxLength": 2048,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListSuitesRequest": {
                "description": "Represents a request to the list suites operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "The job's Amazon Resource Name (ARN).",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListSuitesResult": {
                "description": "Represents the result of a list suites request.",
                "example": {
                    "suites": []
                },
                "properties": {
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "suites": {
                        "description": "Information about the suites.",
                        "items": {
                            "description": "Represents a collection of one or more tests.",
                            "properties": {
                                "arn": {
                                    "description": "The suite's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "counters": {
                                    "description": "The suite's result counters.",
                                    "properties": {
                                        "errored": {
                                            "description": "The number of errored entities.",
                                            "type": "integer"
                                        },
                                        "failed": {
                                            "description": "The number of failed entities.",
                                            "type": "integer"
                                        },
                                        "passed": {
                                            "description": "The number of passed entities.",
                                            "type": "integer"
                                        },
                                        "skipped": {
                                            "description": "The number of skipped entities.",
                                            "type": "integer"
                                        },
                                        "stopped": {
                                            "description": "The number of stopped entities.",
                                            "type": "integer"
                                        },
                                        "total": {
                                            "description": "The total number of entities.",
                                            "type": "integer"
                                        },
                                        "warned": {
                                            "description": "The number of warned entities.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "created": {
                                    "description": "When the suite was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "deviceMinutes": {
                                    "description": "Represents the total (metered or unmetered) minutes used by the test suite.",
                                    "properties": {
                                        "metered": {
                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "total": {
                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "unmetered": {
                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "message": {
                                    "description": "A message about the suite's result.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The suite's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "result": {
                                    "description": "<p>The suite's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PASSED",
                                        "WARNED",
                                        "FAILED",
                                        "SKIPPED",
                                        "ERRORED",
                                        "STOPPED"
                                    ],
                                    "type": "string"
                                },
                                "started": {
                                    "description": "The suite's start time.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "<p>The suite's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PENDING_CONCURRENCY",
                                        "PENDING_DEVICE",
                                        "PROCESSING",
                                        "SCHEDULING",
                                        "PREPARING",
                                        "RUNNING",
                                        "COMPLETED",
                                        "STOPPING"
                                    ],
                                    "type": "string"
                                },
                                "stopped": {
                                    "description": "The suite's stop time.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "<p>The suite's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                    "enum": [
                                        "BUILTIN_FUZZ",
                                        "BUILTIN_EXPLORER",
                                        "WEB_PERFORMANCE_PROFILE",
                                        "APPIUM_JAVA_JUNIT",
                                        "APPIUM_JAVA_TESTNG",
                                        "APPIUM_PYTHON",
                                        "APPIUM_NODE",
                                        "APPIUM_RUBY",
                                        "APPIUM_WEB_JAVA_JUNIT",
                                        "APPIUM_WEB_JAVA_TESTNG",
                                        "APPIUM_WEB_PYTHON",
                                        "APPIUM_WEB_NODE",
                                        "APPIUM_WEB_RUBY",
                                        "CALABASH",
                                        "INSTRUMENTATION",
                                        "UIAUTOMATION",
                                        "UIAUTOMATOR",
                                        "XCTEST",
                                        "XCTEST_UI",
                                        "REMOTE_ACCESS_RECORD",
                                        "REMOTE_ACCESS_REPLAY"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListTestsRequest": {
                "description": "Represents a request to the list tests operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "The test suite's Amazon Resource Name (ARN).",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListTestsResult": {
                "description": "Represents the result of a list tests request.",
                "example": {
                    "tests": []
                },
                "properties": {
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "tests": {
                        "description": "Information about the tests.",
                        "items": {
                            "description": "Represents a condition that is evaluated.",
                            "properties": {
                                "arn": {
                                    "description": "The test's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "counters": {
                                    "description": "The test's result counters.",
                                    "properties": {
                                        "errored": {
                                            "description": "The number of errored entities.",
                                            "type": "integer"
                                        },
                                        "failed": {
                                            "description": "The number of failed entities.",
                                            "type": "integer"
                                        },
                                        "passed": {
                                            "description": "The number of passed entities.",
                                            "type": "integer"
                                        },
                                        "skipped": {
                                            "description": "The number of skipped entities.",
                                            "type": "integer"
                                        },
                                        "stopped": {
                                            "description": "The number of stopped entities.",
                                            "type": "integer"
                                        },
                                        "total": {
                                            "description": "The total number of entities.",
                                            "type": "integer"
                                        },
                                        "warned": {
                                            "description": "The number of warned entities.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "created": {
                                    "description": "When the test was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "deviceMinutes": {
                                    "description": "Represents the total (metered or unmetered) minutes used by the test.",
                                    "properties": {
                                        "metered": {
                                            "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "total": {
                                            "description": "When specified, represents the total minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "unmetered": {
                                            "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "message": {
                                    "description": "A message about the test's result.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The test's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "result": {
                                    "description": "<p>The test's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PASSED",
                                        "WARNED",
                                        "FAILED",
                                        "SKIPPED",
                                        "ERRORED",
                                        "STOPPED"
                                    ],
                                    "type": "string"
                                },
                                "started": {
                                    "description": "The test's start time.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "status": {
                                    "description": "<p>The test's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PENDING_CONCURRENCY",
                                        "PENDING_DEVICE",
                                        "PROCESSING",
                                        "SCHEDULING",
                                        "PREPARING",
                                        "RUNNING",
                                        "COMPLETED",
                                        "STOPPING"
                                    ],
                                    "type": "string"
                                },
                                "stopped": {
                                    "description": "The test's stop time.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                    "enum": [
                                        "BUILTIN_FUZZ",
                                        "BUILTIN_EXPLORER",
                                        "WEB_PERFORMANCE_PROFILE",
                                        "APPIUM_JAVA_JUNIT",
                                        "APPIUM_JAVA_TESTNG",
                                        "APPIUM_PYTHON",
                                        "APPIUM_NODE",
                                        "APPIUM_RUBY",
                                        "APPIUM_WEB_JAVA_JUNIT",
                                        "APPIUM_WEB_JAVA_TESTNG",
                                        "APPIUM_WEB_PYTHON",
                                        "APPIUM_WEB_NODE",
                                        "APPIUM_WEB_RUBY",
                                        "CALABASH",
                                        "INSTRUMENTATION",
                                        "UIAUTOMATION",
                                        "UIAUTOMATOR",
                                        "XCTEST",
                                        "XCTEST_UI",
                                        "REMOTE_ACCESS_RECORD",
                                        "REMOTE_ACCESS_REPLAY"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListUniqueProblemsRequest": {
                "description": "Represents a request to the list unique problems operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "The unique problems' ARNs.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListUniqueProblemsResult": {
                "description": "Represents the result of a list unique problems request.",
                "example": {
                    "uniqueProblems": {}
                },
                "properties": {
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "uniqueProblems": {
                        "description": "<p>Information about the unique problems.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                        "items": {
                            "properties": {
                                "key": {
                                    "enum": [
                                        "PENDING",
                                        "PASSED",
                                        "WARNED",
                                        "FAILED",
                                        "SKIPPED",
                                        "ERRORED",
                                        "STOPPED"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "items": {
                                        "description": "A collection of one or more problems, grouped by their result.",
                                        "properties": {
                                            "message": {
                                                "description": "A message about the unique problems' result.",
                                                "maxLength": 16384,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "problems": {
                                                "description": "Information about the problems.",
                                                "items": {
                                                    "description": "Represents a specific warning or failure.",
                                                    "properties": {
                                                        "device": {
                                                            "description": "Information about the associated device.",
                                                            "properties": {
                                                                "arn": {
                                                                    "description": "The device's ARN.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "availability": {
                                                                    "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                                    "enum": [
                                                                        "TEMPORARY_NOT_AVAILABLE",
                                                                        "BUSY",
                                                                        "AVAILABLE",
                                                                        "HIGHLY_AVAILABLE"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "carrier": {
                                                                    "description": "The device's carrier.",
                                                                    "type": "string"
                                                                },
                                                                "cpu": {
                                                                    "description": "Information about the device's CPU.",
                                                                    "properties": {
                                                                        "architecture": {
                                                                            "description": "The CPU's architecture, for example x86 or ARM.",
                                                                            "type": "string"
                                                                        },
                                                                        "clock": {
                                                                            "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                            "format": "double",
                                                                            "type": "number"
                                                                        },
                                                                        "frequency": {
                                                                            "description": "The CPU's frequency.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "fleetName": {
                                                                    "description": "The name of the fleet to which this device belongs.",
                                                                    "type": "string"
                                                                },
                                                                "fleetType": {
                                                                    "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                                    "type": "string"
                                                                },
                                                                "formFactor": {
                                                                    "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                                    "enum": [
                                                                        "PHONE",
                                                                        "TABLET"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "heapSize": {
                                                                    "description": "The device's heap size, expressed in bytes.",
                                                                    "type": "integer"
                                                                },
                                                                "image": {
                                                                    "description": "The device's image name.",
                                                                    "type": "string"
                                                                },
                                                                "instances": {
                                                                    "description": "The instances belonging to this device.",
                                                                    "items": {
                                                                        "description": "Represents the device instance.",
                                                                        "properties": {
                                                                            "arn": {
                                                                                "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                                "minLength": 32,
                                                                                "type": "string"
                                                                            },
                                                                            "deviceArn": {
                                                                                "description": "The Amazon Resource Name (ARN) of the device.",
                                                                                "minLength": 32,
                                                                                "type": "string"
                                                                            },
                                                                            "instanceProfile": {
                                                                                "description": "A object containing information about the instance profile.",
                                                                                "properties": {
                                                                                    "arn": {
                                                                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                        "minLength": 32,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": {
                                                                                        "description": "The description of the instance profile.",
                                                                                        "maxLength": 16384,
                                                                                        "minLength": 0,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "excludeAppPackagesFromCleanup": {
                                                                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "The name of the instance profile.",
                                                                                        "maxLength": 256,
                                                                                        "minLength": 0,
                                                                                        "type": "string"
                                                                                    },
                                                                                    "packageCleanup": {
                                                                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "rebootAfterUse": {
                                                                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "An array of strings describing the device instance.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "status": {
                                                                                "description": "The status of the device instance. Valid values are listed below.",
                                                                                "enum": [
                                                                                    "IN_USE",
                                                                                    "PREPARING",
                                                                                    "AVAILABLE",
                                                                                    "NOT_AVAILABLE"
                                                                                ],
                                                                                "type": "string"
                                                                            },
                                                                            "udid": {
                                                                                "description": "Unique device identifier for the device instance.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "manufacturer": {
                                                                    "description": "The device's manufacturer name.",
                                                                    "type": "string"
                                                                },
                                                                "memory": {
                                                                    "description": "The device's total memory size, expressed in bytes.",
                                                                    "type": "integer"
                                                                },
                                                                "model": {
                                                                    "description": "The device's model name.",
                                                                    "type": "string"
                                                                },
                                                                "modelId": {
                                                                    "description": "The device's model ID.",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "The device's display name.",
                                                                    "maxLength": 256,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "os": {
                                                                    "description": "The device's operating system type.",
                                                                    "type": "string"
                                                                },
                                                                "platform": {
                                                                    "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                                    "enum": [
                                                                        "ANDROID",
                                                                        "IOS"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "radio": {
                                                                    "description": "The device's radio.",
                                                                    "type": "string"
                                                                },
                                                                "remoteAccessEnabled": {
                                                                    "description": "Specifies whether remote access has been enabled for the specified device.",
                                                                    "type": "boolean"
                                                                },
                                                                "remoteDebugEnabled": {
                                                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                                    "type": "boolean"
                                                                },
                                                                "resolution": {
                                                                    "description": "The resolution of the device.",
                                                                    "properties": {
                                                                        "height": {
                                                                            "description": "The screen resolution's height, expressed in pixels.",
                                                                            "type": "integer"
                                                                        },
                                                                        "width": {
                                                                            "description": "The screen resolution's width, expressed in pixels.",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "job": {
                                                            "description": "Information about the associated job.",
                                                            "properties": {
                                                                "arn": {
                                                                    "description": "The problem detail's ARN.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "The problem detail's name.",
                                                                    "maxLength": 256,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "message": {
                                                            "description": "A message about the problem's result.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "result": {
                                                            "description": "<p>The problem's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                            "enum": [
                                                                "PENDING",
                                                                "PASSED",
                                                                "WARNED",
                                                                "FAILED",
                                                                "SKIPPED",
                                                                "ERRORED",
                                                                "STOPPED"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "run": {
                                                            "description": "Information about the associated run.",
                                                            "properties": {
                                                                "arn": {
                                                                    "description": "The problem detail's ARN.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "The problem detail's name.",
                                                                    "maxLength": 256,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "suite": {
                                                            "description": "Information about the associated suite.",
                                                            "properties": {
                                                                "arn": {
                                                                    "description": "The problem detail's ARN.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "The problem detail's name.",
                                                                    "maxLength": 256,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "test": {
                                                            "description": "Information about the associated test.",
                                                            "properties": {
                                                                "arn": {
                                                                    "description": "The problem detail's ARN.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "The problem detail's name.",
                                                                    "maxLength": 256,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListUploadsRequest": {
                "description": "Represents a request to the list uploads operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                    "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the project for which you want to list uploads.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The type of upload.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for a web app.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p> APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                        "enum": [
                            "ANDROID_APP",
                            "IOS_APP",
                            "WEB_APP",
                            "EXTERNAL_DATA",
                            "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                            "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                            "APPIUM_PYTHON_TEST_PACKAGE",
                            "APPIUM_NODE_TEST_PACKAGE",
                            "APPIUM_RUBY_TEST_PACKAGE",
                            "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                            "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                            "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                            "APPIUM_WEB_NODE_TEST_PACKAGE",
                            "APPIUM_WEB_RUBY_TEST_PACKAGE",
                            "CALABASH_TEST_PACKAGE",
                            "INSTRUMENTATION_TEST_PACKAGE",
                            "UIAUTOMATION_TEST_PACKAGE",
                            "UIAUTOMATOR_TEST_PACKAGE",
                            "XCTEST_TEST_PACKAGE",
                            "XCTEST_UI_TEST_PACKAGE",
                            "APPIUM_JAVA_JUNIT_TEST_SPEC",
                            "APPIUM_JAVA_TESTNG_TEST_SPEC",
                            "APPIUM_PYTHON_TEST_SPEC",
                            "APPIUM_NODE_TEST_SPEC",
                            "APPIUM_RUBY_TEST_SPEC",
                            "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                            "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                            "APPIUM_WEB_PYTHON_TEST_SPEC",
                            "APPIUM_WEB_NODE_TEST_SPEC",
                            "APPIUM_WEB_RUBY_TEST_SPEC",
                            "INSTRUMENTATION_TEST_SPEC",
                            "XCTEST_UI_TEST_SPEC"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "ListUploadsResult": {
                "description": "Represents the result of a list uploads request.",
                "example": {
                    "uploads": []
                },
                "properties": {
                    "nextToken": {
                        "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "uploads": {
                        "description": "Information about the uploads.",
                        "items": {
                            "description": "An app or a set of one or more tests to upload or that have been uploaded.",
                            "properties": {
                                "arn": {
                                    "description": "The upload's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "category": {
                                    "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                    "enum": [
                                        "CURATED",
                                        "PRIVATE"
                                    ],
                                    "type": "string"
                                },
                                "contentType": {
                                    "description": "The upload's content type (for example, \"application/octet-stream\").",
                                    "maxLength": 64,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "created": {
                                    "description": "When the upload was created.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "message": {
                                    "description": "A message about the upload's result.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "metadata": {
                                    "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                    "maxLength": 8192,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The upload's file name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "status": {
                                    "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                    "enum": [
                                        "INITIALIZED",
                                        "PROCESSING",
                                        "SUCCEEDED",
                                        "FAILED"
                                    ],
                                    "type": "string"
                                },
                                "type": {
                                    "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                    "enum": [
                                        "ANDROID_APP",
                                        "IOS_APP",
                                        "WEB_APP",
                                        "EXTERNAL_DATA",
                                        "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                        "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                        "APPIUM_PYTHON_TEST_PACKAGE",
                                        "APPIUM_NODE_TEST_PACKAGE",
                                        "APPIUM_RUBY_TEST_PACKAGE",
                                        "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                        "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                        "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                        "APPIUM_WEB_NODE_TEST_PACKAGE",
                                        "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                        "CALABASH_TEST_PACKAGE",
                                        "INSTRUMENTATION_TEST_PACKAGE",
                                        "UIAUTOMATION_TEST_PACKAGE",
                                        "UIAUTOMATOR_TEST_PACKAGE",
                                        "XCTEST_TEST_PACKAGE",
                                        "XCTEST_UI_TEST_PACKAGE",
                                        "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                        "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                        "APPIUM_PYTHON_TEST_SPEC",
                                        "APPIUM_NODE_TEST_SPEC",
                                        "APPIUM_RUBY_TEST_SPEC",
                                        "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                        "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                        "APPIUM_WEB_PYTHON_TEST_SPEC",
                                        "APPIUM_WEB_NODE_TEST_SPEC",
                                        "APPIUM_WEB_RUBY_TEST_SPEC",
                                        "INSTRUMENTATION_TEST_SPEC",
                                        "XCTEST_UI_TEST_SPEC"
                                    ],
                                    "type": "string"
                                },
                                "url": {
                                    "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                    "maxLength": 2048,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ListVPCEConfigurationsRequest": {
                "properties": {
                    "maxResults": {
                        "description": "An integer specifying the maximum number of items you want to return in the API response.",
                        "type": "integer"
                    },
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ListVPCEConfigurationsResult": {
                "properties": {
                    "nextToken": {
                        "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string"
                    },
                    "vpceConfigurations": {
                        "description": "An array of <code>VPCEConfiguration</code> objects containing information about your VPC endpoint configuration.",
                        "items": {
                            "description": "Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.",
                            "properties": {
                                "arn": {
                                    "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "serviceDnsName": {
                                    "description": "The DNS name that maps to the private IP address of the service you want to access.",
                                    "maxLength": 2048,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "vpceConfigurationDescription": {
                                    "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                    "maxLength": 2048,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "vpceConfigurationName": {
                                    "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                    "maxLength": 1024,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "vpceServiceName": {
                                    "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                    "maxLength": 2048,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Location": {
                "description": "<p>Represents a latitude and longitude pair, expressed in geographic coordinate system degrees (for example 47.6204, -122.3491).</p> <p>Elevation is currently not supported.</p>",
                "properties": {
                    "latitude": {
                        "description": "The latitude.",
                        "format": "double",
                        "type": "number"
                    },
                    "longitude": {
                        "description": "The longitude.",
                        "format": "double",
                        "type": "number"
                    }
                },
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object"
            },
            "Long": {
                "type": "integer"
            },
            "MaxSlotMap": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Message": {
                "maxLength": 16384,
                "minLength": 0,
                "type": "string"
            },
            "Metadata": {
                "maxLength": 8192,
                "minLength": 0,
                "type": "string"
            },
            "MonetaryAmount": {
                "description": "A number representing the monetary amount for an offering or transaction.",
                "properties": {
                    "amount": {
                        "description": "The numerical amount of an offering or transaction.",
                        "format": "double",
                        "type": "number"
                    },
                    "currencyCode": {
                        "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                        "enum": [
                            "USD"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Name": {
                "maxLength": 256,
                "minLength": 0,
                "type": "string"
            },
            "NetworkProfile": {
                "description": "An array of settings that describes characteristics of a network profile.",
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the network profile.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the network profile.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "downlinkBandwidthBits": {
                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                        "type": "integer"
                    },
                    "downlinkDelayMs": {
                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "downlinkJitterMs": {
                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "downlinkLossPercent": {
                        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the network profile.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of network profile. Valid values are listed below.",
                        "enum": [
                            "CURATED",
                            "PRIVATE"
                        ],
                        "type": "string"
                    },
                    "uplinkBandwidthBits": {
                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                        "type": "integer"
                    },
                    "uplinkDelayMs": {
                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "uplinkJitterMs": {
                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "uplinkLossPercent": {
                        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "NetworkProfileType": {
                "enum": [
                    "CURATED",
                    "PRIVATE"
                ],
                "type": "string"
            },
            "NetworkProfiles": {
                "items": {
                    "description": "An array of settings that describes characteristics of a network profile.",
                    "properties": {
                        "arn": {
                            "description": "The Amazon Resource Name (ARN) of the network profile.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "description": {
                            "description": "The description of the network profile.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "downlinkBandwidthBits": {
                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                            "type": "integer"
                        },
                        "downlinkDelayMs": {
                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                            "type": "integer"
                        },
                        "downlinkJitterMs": {
                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                            "type": "integer"
                        },
                        "downlinkLossPercent": {
                            "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "name": {
                            "description": "The name of the network profile.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "type": {
                            "description": "The type of network profile. Valid values are listed below.",
                            "enum": [
                                "CURATED",
                                "PRIVATE"
                            ],
                            "type": "string"
                        },
                        "uplinkBandwidthBits": {
                            "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                            "type": "integer"
                        },
                        "uplinkDelayMs": {
                            "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                            "type": "integer"
                        },
                        "uplinkJitterMs": {
                            "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                            "type": "integer"
                        },
                        "uplinkLossPercent": {
                            "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "NotEligibleException": {},
            "NotFoundException": {},
            "Offering": {
                "description": "Represents the metadata of a device offering.",
                "properties": {
                    "description": {
                        "description": "A string describing the offering.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID that corresponds to a device offering.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "platform": {
                        "description": "The platform of the device (e.g., ANDROID or IOS).",
                        "enum": [
                            "ANDROID",
                            "IOS"
                        ],
                        "type": "string"
                    },
                    "recurringCharges": {
                        "description": "Specifies whether there are recurring charges for the offering.",
                        "items": {
                            "description": "Specifies whether charges for devices will be recurring.",
                            "properties": {
                                "cost": {
                                    "description": "The cost of the recurring charge.",
                                    "properties": {
                                        "amount": {
                                            "description": "The numerical amount of an offering or transaction.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "currencyCode": {
                                            "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                            "enum": [
                                                "USD"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "frequency": {
                                    "description": "The frequency in which charges will recur.",
                                    "enum": [
                                        "MONTHLY"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "type": {
                        "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                        "enum": [
                            "RECURRING"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OfferingIdentifier": {
                "minLength": 32,
                "type": "string"
            },
            "OfferingPromotion": {
                "description": "Represents information about an offering promotion.",
                "properties": {
                    "description": {
                        "description": "A string describing the offering promotion.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the offering promotion.",
                        "minLength": 4,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OfferingPromotionIdentifier": {
                "minLength": 4,
                "type": "string"
            },
            "OfferingPromotions": {
                "items": {
                    "description": "Represents information about an offering promotion.",
                    "properties": {
                        "description": {
                            "description": "A string describing the offering promotion.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "id": {
                            "description": "The ID of the offering promotion.",
                            "minLength": 4,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "OfferingStatus": {
                "description": "The status of the offering.",
                "properties": {
                    "effectiveOn": {
                        "description": "The date on which the offering is effective.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "offering": {
                        "description": "Represents the metadata of an offering status.",
                        "properties": {
                            "description": {
                                "description": "A string describing the offering.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "id": {
                                "description": "The ID that corresponds to a device offering.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "platform": {
                                "description": "The platform of the device (e.g., ANDROID or IOS).",
                                "enum": [
                                    "ANDROID",
                                    "IOS"
                                ],
                                "type": "string"
                            },
                            "recurringCharges": {
                                "description": "Specifies whether there are recurring charges for the offering.",
                                "items": {
                                    "description": "Specifies whether charges for devices will be recurring.",
                                    "properties": {
                                        "cost": {
                                            "description": "The cost of the recurring charge.",
                                            "properties": {
                                                "amount": {
                                                    "description": "The numerical amount of an offering or transaction.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "currencyCode": {
                                                    "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                    "enum": [
                                                        "USD"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "frequency": {
                                            "description": "The frequency in which charges will recur.",
                                            "enum": [
                                                "MONTHLY"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "type": {
                                "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                "enum": [
                                    "RECURRING"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "quantity": {
                        "description": "The number of available devices in the offering.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "The type specified for the offering status.",
                        "enum": [
                            "PURCHASE",
                            "RENEW",
                            "SYSTEM"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OfferingStatusMap": {
                "items": {
                    "properties": {
                        "key": {
                            "minLength": 32,
                            "type": "string"
                        },
                        "value": {
                            "description": "The status of the offering.",
                            "properties": {
                                "effectiveOn": {
                                    "description": "The date on which the offering is effective.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "offering": {
                                    "description": "Represents the metadata of an offering status.",
                                    "properties": {
                                        "description": {
                                            "description": "A string describing the offering.",
                                            "maxLength": 16384,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "The ID that corresponds to a device offering.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "platform": {
                                            "description": "The platform of the device (e.g., ANDROID or IOS).",
                                            "enum": [
                                                "ANDROID",
                                                "IOS"
                                            ],
                                            "type": "string"
                                        },
                                        "recurringCharges": {
                                            "description": "Specifies whether there are recurring charges for the offering.",
                                            "items": {
                                                "description": "Specifies whether charges for devices will be recurring.",
                                                "properties": {
                                                    "cost": {
                                                        "description": "The cost of the recurring charge.",
                                                        "properties": {
                                                            "amount": {
                                                                "description": "The numerical amount of an offering or transaction.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "currencyCode": {
                                                                "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                "enum": [
                                                                    "USD"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "frequency": {
                                                        "description": "The frequency in which charges will recur.",
                                                        "enum": [
                                                            "MONTHLY"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                            "enum": [
                                                "RECURRING"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "quantity": {
                                    "description": "The number of available devices in the offering.",
                                    "type": "integer"
                                },
                                "type": {
                                    "description": "The type specified for the offering status.",
                                    "enum": [
                                        "PURCHASE",
                                        "RENEW",
                                        "SYSTEM"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "OfferingTransaction": {
                "description": "Represents the metadata of an offering transaction.",
                "properties": {
                    "cost": {
                        "description": "The cost of an offering transaction.",
                        "properties": {
                            "amount": {
                                "description": "The numerical amount of an offering or transaction.",
                                "format": "double",
                                "type": "number"
                            },
                            "currencyCode": {
                                "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                "enum": [
                                    "USD"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "createdOn": {
                        "description": "The date on which an offering transaction was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "offeringPromotionId": {
                        "description": "The ID that corresponds to a device offering promotion.",
                        "minLength": 4,
                        "type": "string"
                    },
                    "offeringStatus": {
                        "description": "The status of an offering transaction.",
                        "properties": {
                            "effectiveOn": {
                                "description": "The date on which the offering is effective.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "offering": {
                                "description": "Represents the metadata of an offering status.",
                                "properties": {
                                    "description": {
                                        "description": "A string describing the offering.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "The ID that corresponds to a device offering.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "platform": {
                                        "description": "The platform of the device (e.g., ANDROID or IOS).",
                                        "enum": [
                                            "ANDROID",
                                            "IOS"
                                        ],
                                        "type": "string"
                                    },
                                    "recurringCharges": {
                                        "description": "Specifies whether there are recurring charges for the offering.",
                                        "items": {
                                            "description": "Specifies whether charges for devices will be recurring.",
                                            "properties": {
                                                "cost": {
                                                    "description": "The cost of the recurring charge.",
                                                    "properties": {
                                                        "amount": {
                                                            "description": "The numerical amount of an offering or transaction.",
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "currencyCode": {
                                                            "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                            "enum": [
                                                                "USD"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "frequency": {
                                                    "description": "The frequency in which charges will recur.",
                                                    "enum": [
                                                        "MONTHLY"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                        "enum": [
                                            "RECURRING"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "quantity": {
                                "description": "The number of available devices in the offering.",
                                "type": "integer"
                            },
                            "type": {
                                "description": "The type specified for the offering status.",
                                "enum": [
                                    "PURCHASE",
                                    "RENEW",
                                    "SYSTEM"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "transactionId": {
                        "description": "The transaction ID of the offering transaction.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OfferingTransactionType": {
                "enum": [
                    "PURCHASE",
                    "RENEW",
                    "SYSTEM"
                ],
                "type": "string"
            },
            "OfferingTransactions": {
                "items": {
                    "description": "Represents the metadata of an offering transaction.",
                    "properties": {
                        "cost": {
                            "description": "The cost of an offering transaction.",
                            "properties": {
                                "amount": {
                                    "description": "The numerical amount of an offering or transaction.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "currencyCode": {
                                    "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                    "enum": [
                                        "USD"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "createdOn": {
                            "description": "The date on which an offering transaction was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "offeringPromotionId": {
                            "description": "The ID that corresponds to a device offering promotion.",
                            "minLength": 4,
                            "type": "string"
                        },
                        "offeringStatus": {
                            "description": "The status of an offering transaction.",
                            "properties": {
                                "effectiveOn": {
                                    "description": "The date on which the offering is effective.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "offering": {
                                    "description": "Represents the metadata of an offering status.",
                                    "properties": {
                                        "description": {
                                            "description": "A string describing the offering.",
                                            "maxLength": 16384,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "The ID that corresponds to a device offering.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "platform": {
                                            "description": "The platform of the device (e.g., ANDROID or IOS).",
                                            "enum": [
                                                "ANDROID",
                                                "IOS"
                                            ],
                                            "type": "string"
                                        },
                                        "recurringCharges": {
                                            "description": "Specifies whether there are recurring charges for the offering.",
                                            "items": {
                                                "description": "Specifies whether charges for devices will be recurring.",
                                                "properties": {
                                                    "cost": {
                                                        "description": "The cost of the recurring charge.",
                                                        "properties": {
                                                            "amount": {
                                                                "description": "The numerical amount of an offering or transaction.",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "currencyCode": {
                                                                "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                "enum": [
                                                                    "USD"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "frequency": {
                                                        "description": "The frequency in which charges will recur.",
                                                        "enum": [
                                                            "MONTHLY"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                            "enum": [
                                                "RECURRING"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "quantity": {
                                    "description": "The number of available devices in the offering.",
                                    "type": "integer"
                                },
                                "type": {
                                    "description": "The type specified for the offering status.",
                                    "enum": [
                                        "PURCHASE",
                                        "RENEW",
                                        "SYSTEM"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "transactionId": {
                            "description": "The transaction ID of the offering transaction.",
                            "minLength": 32,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "OfferingType": {
                "enum": [
                    "RECURRING"
                ],
                "type": "string"
            },
            "Offerings": {
                "items": {
                    "description": "Represents the metadata of a device offering.",
                    "properties": {
                        "description": {
                            "description": "A string describing the offering.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "id": {
                            "description": "The ID that corresponds to a device offering.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "platform": {
                            "description": "The platform of the device (e.g., ANDROID or IOS).",
                            "enum": [
                                "ANDROID",
                                "IOS"
                            ],
                            "type": "string"
                        },
                        "recurringCharges": {
                            "description": "Specifies whether there are recurring charges for the offering.",
                            "items": {
                                "description": "Specifies whether charges for devices will be recurring.",
                                "properties": {
                                    "cost": {
                                        "description": "The cost of the recurring charge.",
                                        "properties": {
                                            "amount": {
                                                "description": "The numerical amount of an offering or transaction.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "currencyCode": {
                                                "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                "enum": [
                                                    "USD"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "frequency": {
                                        "description": "The frequency in which charges will recur.",
                                        "enum": [
                                            "MONTHLY"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "type": {
                            "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                            "enum": [
                                "RECURRING"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PackageIds": {
                "items": {
                    "type": "string"
                },
                "type": "array"
            },
            "PaginationToken": {
                "maxLength": 1024,
                "minLength": 4,
                "type": "string"
            },
            "PercentInteger": {
                "maximum": 100,
                "minimum": 0,
                "type": "integer"
            },
            "Problem": {
                "description": "Represents a specific warning or failure.",
                "properties": {
                    "device": {
                        "description": "Information about the associated device.",
                        "properties": {
                            "arn": {
                                "description": "The device's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "availability": {
                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                "enum": [
                                    "TEMPORARY_NOT_AVAILABLE",
                                    "BUSY",
                                    "AVAILABLE",
                                    "HIGHLY_AVAILABLE"
                                ],
                                "type": "string"
                            },
                            "carrier": {
                                "description": "The device's carrier.",
                                "type": "string"
                            },
                            "cpu": {
                                "description": "Information about the device's CPU.",
                                "properties": {
                                    "architecture": {
                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                        "type": "string"
                                    },
                                    "clock": {
                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "frequency": {
                                        "description": "The CPU's frequency.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "fleetName": {
                                "description": "The name of the fleet to which this device belongs.",
                                "type": "string"
                            },
                            "fleetType": {
                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                "type": "string"
                            },
                            "formFactor": {
                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                "enum": [
                                    "PHONE",
                                    "TABLET"
                                ],
                                "type": "string"
                            },
                            "heapSize": {
                                "description": "The device's heap size, expressed in bytes.",
                                "type": "integer"
                            },
                            "image": {
                                "description": "The device's image name.",
                                "type": "string"
                            },
                            "instances": {
                                "description": "The instances belonging to this device.",
                                "items": {
                                    "description": "Represents the device instance.",
                                    "properties": {
                                        "arn": {
                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "deviceArn": {
                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "instanceProfile": {
                                            "description": "A object containing information about the instance profile.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the instance profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "excludeAppPackagesFromCleanup": {
                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the instance profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "packageCleanup": {
                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                    "type": "boolean"
                                                },
                                                "rebootAfterUse": {
                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "labels": {
                                            "description": "An array of strings describing the device instance.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "description": "The status of the device instance. Valid values are listed below.",
                                            "enum": [
                                                "IN_USE",
                                                "PREPARING",
                                                "AVAILABLE",
                                                "NOT_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "udid": {
                                            "description": "Unique device identifier for the device instance.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "manufacturer": {
                                "description": "The device's manufacturer name.",
                                "type": "string"
                            },
                            "memory": {
                                "description": "The device's total memory size, expressed in bytes.",
                                "type": "integer"
                            },
                            "model": {
                                "description": "The device's model name.",
                                "type": "string"
                            },
                            "modelId": {
                                "description": "The device's model ID.",
                                "type": "string"
                            },
                            "name": {
                                "description": "The device's display name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "os": {
                                "description": "The device's operating system type.",
                                "type": "string"
                            },
                            "platform": {
                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID",
                                    "IOS"
                                ],
                                "type": "string"
                            },
                            "radio": {
                                "description": "The device's radio.",
                                "type": "string"
                            },
                            "remoteAccessEnabled": {
                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                "type": "boolean"
                            },
                            "remoteDebugEnabled": {
                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                "type": "boolean"
                            },
                            "resolution": {
                                "description": "The resolution of the device.",
                                "properties": {
                                    "height": {
                                        "description": "The screen resolution's height, expressed in pixels.",
                                        "type": "integer"
                                    },
                                    "width": {
                                        "description": "The screen resolution's width, expressed in pixels.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "job": {
                        "description": "Information about the associated job.",
                        "properties": {
                            "arn": {
                                "description": "The problem detail's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "name": {
                                "description": "The problem detail's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "A message about the problem's result.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "result": {
                        "description": "<p>The problem's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PASSED",
                            "WARNED",
                            "FAILED",
                            "SKIPPED",
                            "ERRORED",
                            "STOPPED"
                        ],
                        "type": "string"
                    },
                    "run": {
                        "description": "Information about the associated run.",
                        "properties": {
                            "arn": {
                                "description": "The problem detail's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "name": {
                                "description": "The problem detail's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "suite": {
                        "description": "Information about the associated suite.",
                        "properties": {
                            "arn": {
                                "description": "The problem detail's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "name": {
                                "description": "The problem detail's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "test": {
                        "description": "Information about the associated test.",
                        "properties": {
                            "arn": {
                                "description": "The problem detail's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "name": {
                                "description": "The problem detail's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProblemDetail": {
                "description": "Information about a problem detail.",
                "properties": {
                    "arn": {
                        "description": "The problem detail's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "name": {
                        "description": "The problem detail's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Problems": {
                "items": {
                    "description": "Represents a specific warning or failure.",
                    "properties": {
                        "device": {
                            "description": "Information about the associated device.",
                            "properties": {
                                "arn": {
                                    "description": "The device's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "availability": {
                                    "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                    "enum": [
                                        "TEMPORARY_NOT_AVAILABLE",
                                        "BUSY",
                                        "AVAILABLE",
                                        "HIGHLY_AVAILABLE"
                                    ],
                                    "type": "string"
                                },
                                "carrier": {
                                    "description": "The device's carrier.",
                                    "type": "string"
                                },
                                "cpu": {
                                    "description": "Information about the device's CPU.",
                                    "properties": {
                                        "architecture": {
                                            "description": "The CPU's architecture, for example x86 or ARM.",
                                            "type": "string"
                                        },
                                        "clock": {
                                            "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "frequency": {
                                            "description": "The CPU's frequency.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "fleetName": {
                                    "description": "The name of the fleet to which this device belongs.",
                                    "type": "string"
                                },
                                "fleetType": {
                                    "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                    "type": "string"
                                },
                                "formFactor": {
                                    "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                    "enum": [
                                        "PHONE",
                                        "TABLET"
                                    ],
                                    "type": "string"
                                },
                                "heapSize": {
                                    "description": "The device's heap size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "image": {
                                    "description": "The device's image name.",
                                    "type": "string"
                                },
                                "instances": {
                                    "description": "The instances belonging to this device.",
                                    "items": {
                                        "description": "Represents the device instance.",
                                        "properties": {
                                            "arn": {
                                                "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "deviceArn": {
                                                "description": "The Amazon Resource Name (ARN) of the device.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "instanceProfile": {
                                                "description": "A object containing information about the instance profile.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "The description of the instance profile.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "excludeAppPackagesFromCleanup": {
                                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "description": "The name of the instance profile.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "packageCleanup": {
                                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                        "type": "boolean"
                                                    },
                                                    "rebootAfterUse": {
                                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "labels": {
                                                "description": "An array of strings describing the device instance.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "status": {
                                                "description": "The status of the device instance. Valid values are listed below.",
                                                "enum": [
                                                    "IN_USE",
                                                    "PREPARING",
                                                    "AVAILABLE",
                                                    "NOT_AVAILABLE"
                                                ],
                                                "type": "string"
                                            },
                                            "udid": {
                                                "description": "Unique device identifier for the device instance.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "manufacturer": {
                                    "description": "The device's manufacturer name.",
                                    "type": "string"
                                },
                                "memory": {
                                    "description": "The device's total memory size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "model": {
                                    "description": "The device's model name.",
                                    "type": "string"
                                },
                                "modelId": {
                                    "description": "The device's model ID.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The device's display name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "os": {
                                    "description": "The device's operating system type.",
                                    "type": "string"
                                },
                                "platform": {
                                    "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                    "enum": [
                                        "ANDROID",
                                        "IOS"
                                    ],
                                    "type": "string"
                                },
                                "radio": {
                                    "description": "The device's radio.",
                                    "type": "string"
                                },
                                "remoteAccessEnabled": {
                                    "description": "Specifies whether remote access has been enabled for the specified device.",
                                    "type": "boolean"
                                },
                                "remoteDebugEnabled": {
                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                    "type": "boolean"
                                },
                                "resolution": {
                                    "description": "The resolution of the device.",
                                    "properties": {
                                        "height": {
                                            "description": "The screen resolution's height, expressed in pixels.",
                                            "type": "integer"
                                        },
                                        "width": {
                                            "description": "The screen resolution's width, expressed in pixels.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "job": {
                            "description": "Information about the associated job.",
                            "properties": {
                                "arn": {
                                    "description": "The problem detail's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The problem detail's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "message": {
                            "description": "A message about the problem's result.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "result": {
                            "description": "<p>The problem's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PASSED",
                                "WARNED",
                                "FAILED",
                                "SKIPPED",
                                "ERRORED",
                                "STOPPED"
                            ],
                            "type": "string"
                        },
                        "run": {
                            "description": "Information about the associated run.",
                            "properties": {
                                "arn": {
                                    "description": "The problem detail's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The problem detail's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "suite": {
                            "description": "Information about the associated suite.",
                            "properties": {
                                "arn": {
                                    "description": "The problem detail's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The problem detail's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "test": {
                            "description": "Information about the associated test.",
                            "properties": {
                                "arn": {
                                    "description": "The problem detail's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The problem detail's name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Project": {
                "description": "Represents an operating-system neutral workspace for running and managing tests.",
                "properties": {
                    "arn": {
                        "description": "The project's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "created": {
                        "description": "When the project was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "defaultJobTimeoutMinutes": {
                        "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The project's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Projects": {
                "items": {
                    "description": "Represents an operating-system neutral workspace for running and managing tests.",
                    "properties": {
                        "arn": {
                            "description": "The project's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "created": {
                            "description": "When the project was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "defaultJobTimeoutMinutes": {
                            "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                            "type": "integer"
                        },
                        "name": {
                            "description": "The project's name.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "PurchaseOfferingRequest": {
                "description": "Represents a request for a purchase offering.",
                "example": {
                    "offeringId": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                    "quantity": 1
                },
                "properties": {
                    "offeringId": {
                        "description": "The ID of the offering.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "offeringPromotionId": {
                        "description": "The ID of the offering promotion to be applied to the purchase.",
                        "minLength": 4,
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The number of device slots you wish to purchase in an offering request.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PurchaseOfferingResult": {
                "description": "The result of the purchase offering (e.g., success or failure).",
                "example": {
                    "offeringTransaction": {
                        "cost": {
                            "amount": 8.07,
                            "currencyCode": "USD"
                        },
                        "createdOn": "1472648340",
                        "offeringStatus": {
                            "effectiveOn": "1472648340",
                            "offering": {
                                "description": "Android Remote Access Unmetered Device Slot",
                                "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                "platform": "ANDROID",
                                "type": "RECURRING"
                            },
                            "quantity": 1,
                            "type": "PURCHASE"
                        },
                        "transactionId": "d30614ed-1b03-404c-9893-12345EXAMPLE"
                    }
                },
                "properties": {
                    "offeringTransaction": {
                        "description": "Represents the offering transaction for the purchase result.",
                        "properties": {
                            "cost": {
                                "description": "The cost of an offering transaction.",
                                "properties": {
                                    "amount": {
                                        "description": "The numerical amount of an offering or transaction.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "currencyCode": {
                                        "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                        "enum": [
                                            "USD"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "createdOn": {
                                "description": "The date on which an offering transaction was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "offeringPromotionId": {
                                "description": "The ID that corresponds to a device offering promotion.",
                                "minLength": 4,
                                "type": "string"
                            },
                            "offeringStatus": {
                                "description": "The status of an offering transaction.",
                                "properties": {
                                    "effectiveOn": {
                                        "description": "The date on which the offering is effective.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "offering": {
                                        "description": "Represents the metadata of an offering status.",
                                        "properties": {
                                            "description": {
                                                "description": "A string describing the offering.",
                                                "maxLength": 16384,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "id": {
                                                "description": "The ID that corresponds to a device offering.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "platform": {
                                                "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                "enum": [
                                                    "ANDROID",
                                                    "IOS"
                                                ],
                                                "type": "string"
                                            },
                                            "recurringCharges": {
                                                "description": "Specifies whether there are recurring charges for the offering.",
                                                "items": {
                                                    "description": "Specifies whether charges for devices will be recurring.",
                                                    "properties": {
                                                        "cost": {
                                                            "description": "The cost of the recurring charge.",
                                                            "properties": {
                                                                "amount": {
                                                                    "description": "The numerical amount of an offering or transaction.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "currencyCode": {
                                                                    "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                    "enum": [
                                                                        "USD"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "frequency": {
                                                            "description": "The frequency in which charges will recur.",
                                                            "enum": [
                                                                "MONTHLY"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "type": {
                                                "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                "enum": [
                                                    "RECURRING"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "quantity": {
                                        "description": "The number of available devices in the offering.",
                                        "type": "integer"
                                    },
                                    "type": {
                                        "description": "The type specified for the offering status.",
                                        "enum": [
                                            "PURCHASE",
                                            "RENEW",
                                            "SYSTEM"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "transactionId": {
                                "description": "The transaction ID of the offering transaction.",
                                "minLength": 32,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PurchasedDevicesMap": {
                "items": {
                    "properties": {
                        "key": {
                            "enum": [
                                "ANDROID",
                                "IOS"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Radios": {
                "description": "Represents the set of radios and their states on a device. Examples of radios include Wi-Fi, GPS, Bluetooth, and NFC.",
                "properties": {
                    "bluetooth": {
                        "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                        "type": "boolean"
                    },
                    "gps": {
                        "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                        "type": "boolean"
                    },
                    "nfc": {
                        "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                        "type": "boolean"
                    },
                    "wifi": {
                        "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "RecurringCharge": {
                "description": "Specifies whether charges for devices will be recurring.",
                "properties": {
                    "cost": {
                        "description": "The cost of the recurring charge.",
                        "properties": {
                            "amount": {
                                "description": "The numerical amount of an offering or transaction.",
                                "format": "double",
                                "type": "number"
                            },
                            "currencyCode": {
                                "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                "enum": [
                                    "USD"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "frequency": {
                        "description": "The frequency in which charges will recur.",
                        "enum": [
                            "MONTHLY"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RecurringChargeFrequency": {
                "enum": [
                    "MONTHLY"
                ],
                "type": "string"
            },
            "RecurringCharges": {
                "items": {
                    "description": "Specifies whether charges for devices will be recurring.",
                    "properties": {
                        "cost": {
                            "description": "The cost of the recurring charge.",
                            "properties": {
                                "amount": {
                                    "description": "The numerical amount of an offering or transaction.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "currencyCode": {
                                    "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                    "enum": [
                                        "USD"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "frequency": {
                            "description": "The frequency in which charges will recur.",
                            "enum": [
                                "MONTHLY"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "RemoteAccessSession": {
                "description": "Represents information about the remote access session.",
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the remote access session.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "billingMethod": {
                        "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                        "enum": [
                            "METERED",
                            "UNMETERED"
                        ],
                        "type": "string"
                    },
                    "clientId": {
                        "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "created": {
                        "description": "The date and time the remote access session was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "device": {
                        "description": "The device (phone or tablet) used in the remote access session.",
                        "properties": {
                            "arn": {
                                "description": "The device's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "availability": {
                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                "enum": [
                                    "TEMPORARY_NOT_AVAILABLE",
                                    "BUSY",
                                    "AVAILABLE",
                                    "HIGHLY_AVAILABLE"
                                ],
                                "type": "string"
                            },
                            "carrier": {
                                "description": "The device's carrier.",
                                "type": "string"
                            },
                            "cpu": {
                                "description": "Information about the device's CPU.",
                                "properties": {
                                    "architecture": {
                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                        "type": "string"
                                    },
                                    "clock": {
                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "frequency": {
                                        "description": "The CPU's frequency.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "fleetName": {
                                "description": "The name of the fleet to which this device belongs.",
                                "type": "string"
                            },
                            "fleetType": {
                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                "type": "string"
                            },
                            "formFactor": {
                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                "enum": [
                                    "PHONE",
                                    "TABLET"
                                ],
                                "type": "string"
                            },
                            "heapSize": {
                                "description": "The device's heap size, expressed in bytes.",
                                "type": "integer"
                            },
                            "image": {
                                "description": "The device's image name.",
                                "type": "string"
                            },
                            "instances": {
                                "description": "The instances belonging to this device.",
                                "items": {
                                    "description": "Represents the device instance.",
                                    "properties": {
                                        "arn": {
                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "deviceArn": {
                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "instanceProfile": {
                                            "description": "A object containing information about the instance profile.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "description": "The description of the instance profile.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "excludeAppPackagesFromCleanup": {
                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "name": {
                                                    "description": "The name of the instance profile.",
                                                    "maxLength": 256,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "packageCleanup": {
                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                    "type": "boolean"
                                                },
                                                "rebootAfterUse": {
                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "labels": {
                                            "description": "An array of strings describing the device instance.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "status": {
                                            "description": "The status of the device instance. Valid values are listed below.",
                                            "enum": [
                                                "IN_USE",
                                                "PREPARING",
                                                "AVAILABLE",
                                                "NOT_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "udid": {
                                            "description": "Unique device identifier for the device instance.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "manufacturer": {
                                "description": "The device's manufacturer name.",
                                "type": "string"
                            },
                            "memory": {
                                "description": "The device's total memory size, expressed in bytes.",
                                "type": "integer"
                            },
                            "model": {
                                "description": "The device's model name.",
                                "type": "string"
                            },
                            "modelId": {
                                "description": "The device's model ID.",
                                "type": "string"
                            },
                            "name": {
                                "description": "The device's display name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "os": {
                                "description": "The device's operating system type.",
                                "type": "string"
                            },
                            "platform": {
                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID",
                                    "IOS"
                                ],
                                "type": "string"
                            },
                            "radio": {
                                "description": "The device's radio.",
                                "type": "string"
                            },
                            "remoteAccessEnabled": {
                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                "type": "boolean"
                            },
                            "remoteDebugEnabled": {
                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                "type": "boolean"
                            },
                            "resolution": {
                                "description": "The resolution of the device.",
                                "properties": {
                                    "height": {
                                        "description": "The screen resolution's height, expressed in pixels.",
                                        "type": "integer"
                                    },
                                    "width": {
                                        "description": "The screen resolution's width, expressed in pixels.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "deviceMinutes": {
                        "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                        "properties": {
                            "metered": {
                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "total": {
                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "unmetered": {
                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "deviceUdid": {
                        "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                        "type": "string"
                    },
                    "endpoint": {
                        "description": "The endpoint for the remote access sesssion.",
                        "type": "string"
                    },
                    "hostAddress": {
                        "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "instanceArn": {
                        "description": "The Amazon Resource Name (ARN) of the instance.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "interactionMode": {
                        "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                        "enum": [
                            "INTERACTIVE",
                            "NO_VIDEO",
                            "VIDEO_ONLY"
                        ],
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "message": {
                        "description": "A message about the remote access session.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the remote access session.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "remoteDebugEnabled": {
                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                        "type": "boolean"
                    },
                    "remoteRecordAppArn": {
                        "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "remoteRecordEnabled": {
                        "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                        "type": "boolean"
                    },
                    "result": {
                        "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PASSED",
                            "WARNED",
                            "FAILED",
                            "SKIPPED",
                            "ERRORED",
                            "STOPPED"
                        ],
                        "type": "string"
                    },
                    "skipAppResign": {
                        "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                        "type": "boolean"
                    },
                    "started": {
                        "description": "The date and time the remote access session was started.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PENDING_CONCURRENCY",
                            "PENDING_DEVICE",
                            "PROCESSING",
                            "SCHEDULING",
                            "PREPARING",
                            "RUNNING",
                            "COMPLETED",
                            "STOPPING"
                        ],
                        "type": "string"
                    },
                    "stopped": {
                        "description": "The date and time the remote access session was stopped.",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RemoteAccessSessions": {
                "items": {
                    "description": "Represents information about the remote access session.",
                    "properties": {
                        "arn": {
                            "description": "The Amazon Resource Name (ARN) of the remote access session.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "billingMethod": {
                            "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                            "enum": [
                                "METERED",
                                "UNMETERED"
                            ],
                            "type": "string"
                        },
                        "clientId": {
                            "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                            "maxLength": 64,
                            "minLength": 0,
                            "type": "string"
                        },
                        "created": {
                            "description": "The date and time the remote access session was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "device": {
                            "description": "The device (phone or tablet) used in the remote access session.",
                            "properties": {
                                "arn": {
                                    "description": "The device's ARN.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "availability": {
                                    "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                    "enum": [
                                        "TEMPORARY_NOT_AVAILABLE",
                                        "BUSY",
                                        "AVAILABLE",
                                        "HIGHLY_AVAILABLE"
                                    ],
                                    "type": "string"
                                },
                                "carrier": {
                                    "description": "The device's carrier.",
                                    "type": "string"
                                },
                                "cpu": {
                                    "description": "Information about the device's CPU.",
                                    "properties": {
                                        "architecture": {
                                            "description": "The CPU's architecture, for example x86 or ARM.",
                                            "type": "string"
                                        },
                                        "clock": {
                                            "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "frequency": {
                                            "description": "The CPU's frequency.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "fleetName": {
                                    "description": "The name of the fleet to which this device belongs.",
                                    "type": "string"
                                },
                                "fleetType": {
                                    "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                    "type": "string"
                                },
                                "formFactor": {
                                    "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                    "enum": [
                                        "PHONE",
                                        "TABLET"
                                    ],
                                    "type": "string"
                                },
                                "heapSize": {
                                    "description": "The device's heap size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "image": {
                                    "description": "The device's image name.",
                                    "type": "string"
                                },
                                "instances": {
                                    "description": "The instances belonging to this device.",
                                    "items": {
                                        "description": "Represents the device instance.",
                                        "properties": {
                                            "arn": {
                                                "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "deviceArn": {
                                                "description": "The Amazon Resource Name (ARN) of the device.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "instanceProfile": {
                                                "description": "A object containing information about the instance profile.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "description": "The description of the instance profile.",
                                                        "maxLength": 16384,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "excludeAppPackagesFromCleanup": {
                                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "description": "The name of the instance profile.",
                                                        "maxLength": 256,
                                                        "minLength": 0,
                                                        "type": "string"
                                                    },
                                                    "packageCleanup": {
                                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                        "type": "boolean"
                                                    },
                                                    "rebootAfterUse": {
                                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "labels": {
                                                "description": "An array of strings describing the device instance.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "status": {
                                                "description": "The status of the device instance. Valid values are listed below.",
                                                "enum": [
                                                    "IN_USE",
                                                    "PREPARING",
                                                    "AVAILABLE",
                                                    "NOT_AVAILABLE"
                                                ],
                                                "type": "string"
                                            },
                                            "udid": {
                                                "description": "Unique device identifier for the device instance.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "manufacturer": {
                                    "description": "The device's manufacturer name.",
                                    "type": "string"
                                },
                                "memory": {
                                    "description": "The device's total memory size, expressed in bytes.",
                                    "type": "integer"
                                },
                                "model": {
                                    "description": "The device's model name.",
                                    "type": "string"
                                },
                                "modelId": {
                                    "description": "The device's model ID.",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The device's display name.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "os": {
                                    "description": "The device's operating system type.",
                                    "type": "string"
                                },
                                "platform": {
                                    "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                    "enum": [
                                        "ANDROID",
                                        "IOS"
                                    ],
                                    "type": "string"
                                },
                                "radio": {
                                    "description": "The device's radio.",
                                    "type": "string"
                                },
                                "remoteAccessEnabled": {
                                    "description": "Specifies whether remote access has been enabled for the specified device.",
                                    "type": "boolean"
                                },
                                "remoteDebugEnabled": {
                                    "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                    "type": "boolean"
                                },
                                "resolution": {
                                    "description": "The resolution of the device.",
                                    "properties": {
                                        "height": {
                                            "description": "The screen resolution's height, expressed in pixels.",
                                            "type": "integer"
                                        },
                                        "width": {
                                            "description": "The screen resolution's width, expressed in pixels.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "deviceMinutes": {
                            "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                            "properties": {
                                "metered": {
                                    "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "total": {
                                    "description": "When specified, represents the total minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "unmetered": {
                                    "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "deviceUdid": {
                            "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                            "type": "string"
                        },
                        "endpoint": {
                            "description": "The endpoint for the remote access sesssion.",
                            "type": "string"
                        },
                        "hostAddress": {
                            "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                            "maxLength": 1024,
                            "type": "string"
                        },
                        "instanceArn": {
                            "description": "The Amazon Resource Name (ARN) of the instance.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "interactionMode": {
                            "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                            "enum": [
                                "INTERACTIVE",
                                "NO_VIDEO",
                                "VIDEO_ONLY"
                            ],
                            "maxLength": 64,
                            "minLength": 0,
                            "type": "string"
                        },
                        "message": {
                            "description": "A message about the remote access session.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "name": {
                            "description": "The name of the remote access session.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "remoteDebugEnabled": {
                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                            "type": "boolean"
                        },
                        "remoteRecordAppArn": {
                            "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "remoteRecordEnabled": {
                            "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                            "type": "boolean"
                        },
                        "result": {
                            "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PASSED",
                                "WARNED",
                                "FAILED",
                                "SKIPPED",
                                "ERRORED",
                                "STOPPED"
                            ],
                            "type": "string"
                        },
                        "skipAppResign": {
                            "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                            "type": "boolean"
                        },
                        "started": {
                            "description": "The date and time the remote access session was started.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "status": {
                            "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PENDING_CONCURRENCY",
                                "PENDING_DEVICE",
                                "PROCESSING",
                                "SCHEDULING",
                                "PREPARING",
                                "RUNNING",
                                "COMPLETED",
                                "STOPPING"
                            ],
                            "type": "string"
                        },
                        "stopped": {
                            "description": "The date and time the remote access session was stopped.",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "RenewOfferingRequest": {
                "description": "A request representing an offering renewal.",
                "example": {
                    "offeringId": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                    "quantity": 1
                },
                "properties": {
                    "offeringId": {
                        "description": "The ID of a request to renew an offering.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The quantity requested in an offering renewal.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RenewOfferingResult": {
                "description": "The result of a renewal offering.",
                "example": {
                    "offeringTransaction": {
                        "cost": {
                            "amount": 250,
                            "currencyCode": "USD"
                        },
                        "createdOn": "1472648880",
                        "offeringStatus": {
                            "effectiveOn": "1472688000",
                            "offering": {
                                "description": "Android Remote Access Unmetered Device Slot",
                                "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                                "platform": "ANDROID",
                                "type": "RECURRING"
                            },
                            "quantity": 1,
                            "type": "RENEW"
                        },
                        "transactionId": "e90f1405-8c35-4561-be43-12345EXAMPLE"
                    }
                },
                "properties": {
                    "offeringTransaction": {
                        "description": "Represents the status of the offering transaction for the renewal.",
                        "properties": {
                            "cost": {
                                "description": "The cost of an offering transaction.",
                                "properties": {
                                    "amount": {
                                        "description": "The numerical amount of an offering or transaction.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "currencyCode": {
                                        "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                        "enum": [
                                            "USD"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "createdOn": {
                                "description": "The date on which an offering transaction was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "offeringPromotionId": {
                                "description": "The ID that corresponds to a device offering promotion.",
                                "minLength": 4,
                                "type": "string"
                            },
                            "offeringStatus": {
                                "description": "The status of an offering transaction.",
                                "properties": {
                                    "effectiveOn": {
                                        "description": "The date on which the offering is effective.",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "offering": {
                                        "description": "Represents the metadata of an offering status.",
                                        "properties": {
                                            "description": {
                                                "description": "A string describing the offering.",
                                                "maxLength": 16384,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "id": {
                                                "description": "The ID that corresponds to a device offering.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "platform": {
                                                "description": "The platform of the device (e.g., ANDROID or IOS).",
                                                "enum": [
                                                    "ANDROID",
                                                    "IOS"
                                                ],
                                                "type": "string"
                                            },
                                            "recurringCharges": {
                                                "description": "Specifies whether there are recurring charges for the offering.",
                                                "items": {
                                                    "description": "Specifies whether charges for devices will be recurring.",
                                                    "properties": {
                                                        "cost": {
                                                            "description": "The cost of the recurring charge.",
                                                            "properties": {
                                                                "amount": {
                                                                    "description": "The numerical amount of an offering or transaction.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "currencyCode": {
                                                                    "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\"",
                                                                    "enum": [
                                                                        "USD"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "frequency": {
                                                            "description": "The frequency in which charges will recur.",
                                                            "enum": [
                                                                "MONTHLY"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "type": {
                                                "description": "The type of offering (e.g., \"RECURRING\") for a device.",
                                                "enum": [
                                                    "RECURRING"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "quantity": {
                                        "description": "The number of available devices in the offering.",
                                        "type": "integer"
                                    },
                                    "type": {
                                        "description": "The type specified for the offering status.",
                                        "enum": [
                                            "PURCHASE",
                                            "RENEW",
                                            "SYSTEM"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "transactionId": {
                                "description": "The transaction ID of the offering transaction.",
                                "minLength": 32,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Resolution": {
                "description": "Represents the screen resolution of a device in height and width, expressed in pixels.",
                "properties": {
                    "height": {
                        "description": "The screen resolution's height, expressed in pixels.",
                        "type": "integer"
                    },
                    "width": {
                        "description": "The screen resolution's width, expressed in pixels.",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Rule": {
                "description": "Represents a condition for a device pool.",
                "properties": {
                    "attribute": {
                        "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                        "enum": [
                            "ARN",
                            "PLATFORM",
                            "FORM_FACTOR",
                            "MANUFACTURER",
                            "REMOTE_ACCESS_ENABLED",
                            "REMOTE_DEBUG_ENABLED",
                            "APPIUM_VERSION",
                            "INSTANCE_ARN",
                            "INSTANCE_LABELS",
                            "FLEET_TYPE",
                            "OS_VERSION",
                            "MODEL",
                            "AVAILABILITY"
                        ],
                        "type": "string"
                    },
                    "operator": {
                        "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                        "enum": [
                            "EQUALS",
                            "LESS_THAN",
                            "LESS_THAN_OR_EQUALS",
                            "GREATER_THAN",
                            "GREATER_THAN_OR_EQUALS",
                            "IN",
                            "NOT_IN",
                            "CONTAINS"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "description": "The rule's value.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RuleOperator": {
                "enum": [
                    "EQUALS",
                    "LESS_THAN",
                    "LESS_THAN_OR_EQUALS",
                    "GREATER_THAN",
                    "GREATER_THAN_OR_EQUALS",
                    "IN",
                    "NOT_IN",
                    "CONTAINS"
                ],
                "type": "string"
            },
            "Rules": {
                "items": {
                    "description": "Represents a condition for a device pool.",
                    "properties": {
                        "attribute": {
                            "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                            "enum": [
                                "ARN",
                                "PLATFORM",
                                "FORM_FACTOR",
                                "MANUFACTURER",
                                "REMOTE_ACCESS_ENABLED",
                                "REMOTE_DEBUG_ENABLED",
                                "APPIUM_VERSION",
                                "INSTANCE_ARN",
                                "INSTANCE_LABELS",
                                "FLEET_TYPE",
                                "OS_VERSION",
                                "MODEL",
                                "AVAILABILITY"
                            ],
                            "type": "string"
                        },
                        "operator": {
                            "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                            "enum": [
                                "EQUALS",
                                "LESS_THAN",
                                "LESS_THAN_OR_EQUALS",
                                "GREATER_THAN",
                                "GREATER_THAN_OR_EQUALS",
                                "IN",
                                "NOT_IN",
                                "CONTAINS"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "description": "The rule's value.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Run": {
                "description": "Represents a test run on a set of devices with a given app package, test parameters, etc.",
                "properties": {
                    "appUpload": {
                        "description": "An app to upload or that has been uploaded.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "arn": {
                        "description": "The run's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "billingMethod": {
                        "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                        "enum": [
                            "METERED",
                            "UNMETERED"
                        ],
                        "type": "string"
                    },
                    "completedJobs": {
                        "description": "The total number of completed jobs.",
                        "type": "integer"
                    },
                    "counters": {
                        "description": "The run's result counters.",
                        "properties": {
                            "errored": {
                                "description": "The number of errored entities.",
                                "type": "integer"
                            },
                            "failed": {
                                "description": "The number of failed entities.",
                                "type": "integer"
                            },
                            "passed": {
                                "description": "The number of passed entities.",
                                "type": "integer"
                            },
                            "skipped": {
                                "description": "The number of skipped entities.",
                                "type": "integer"
                            },
                            "stopped": {
                                "description": "The number of stopped entities.",
                                "type": "integer"
                            },
                            "total": {
                                "description": "The total number of entities.",
                                "type": "integer"
                            },
                            "warned": {
                                "description": "The number of warned entities.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "created": {
                        "description": "When the run was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "customerArtifactPaths": {
                        "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                        "properties": {
                            "androidPaths": {
                                "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "deviceHostPaths": {
                                "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "iosPaths": {
                                "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "deviceMinutes": {
                        "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                        "properties": {
                            "metered": {
                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "total": {
                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "unmetered": {
                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "devicePoolArn": {
                        "description": "The ARN of the device pool for the run.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "deviceSelectionResult": {
                        "description": "The results of a device filter used to select the devices for a test run.",
                        "properties": {
                            "filters": {
                                "description": "The filters in a device selection result.",
                                "items": {
                                    "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                    "properties": {
                                        "attribute": {
                                            "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                            "enum": [
                                                "ARN",
                                                "PLATFORM",
                                                "OS_VERSION",
                                                "MODEL",
                                                "AVAILABILITY",
                                                "FORM_FACTOR",
                                                "MANUFACTURER",
                                                "REMOTE_ACCESS_ENABLED",
                                                "REMOTE_DEBUG_ENABLED",
                                                "INSTANCE_ARN",
                                                "INSTANCE_LABELS",
                                                "FLEET_TYPE"
                                            ],
                                            "type": "string"
                                        },
                                        "operator": {
                                            "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                            "enum": [
                                                "EQUALS",
                                                "LESS_THAN",
                                                "LESS_THAN_OR_EQUALS",
                                                "GREATER_THAN",
                                                "GREATER_THAN_OR_EQUALS",
                                                "IN",
                                                "NOT_IN",
                                                "CONTAINS"
                                            ],
                                            "type": "string"
                                        },
                                        "values": {
                                            "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "matchedDevicesCount": {
                                "description": "The number of devices that matched the device filter selection criteria.",
                                "type": "integer"
                            },
                            "maxDevices": {
                                "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "eventCount": {
                        "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                        "type": "integer"
                    },
                    "jobTimeoutMinutes": {
                        "description": "The number of minutes the job will execute before it times out.",
                        "type": "integer"
                    },
                    "locale": {
                        "description": "Information about the locale that is used for the run.",
                        "type": "string"
                    },
                    "location": {
                        "description": "Information about the location that is used for the run.",
                        "properties": {
                            "latitude": {
                                "description": "The latitude.",
                                "format": "double",
                                "type": "number"
                            },
                            "longitude": {
                                "description": "The longitude.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "required": [
                            "latitude",
                            "longitude"
                        ],
                        "type": "object"
                    },
                    "message": {
                        "description": "A message about the run's result.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "name": {
                        "description": "The run's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "networkProfile": {
                        "description": "The network profile being used for a test run.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the network profile.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The description of the network profile.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "downlinkBandwidthBits": {
                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                "type": "integer"
                            },
                            "downlinkDelayMs": {
                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "downlinkJitterMs": {
                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "downlinkLossPercent": {
                                "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "name": {
                                "description": "The name of the network profile.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "type": {
                                "description": "The type of network profile. Valid values are listed below.",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            },
                            "uplinkBandwidthBits": {
                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                "type": "integer"
                            },
                            "uplinkDelayMs": {
                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "uplinkJitterMs": {
                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "uplinkLossPercent": {
                                "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "parsingResultUrl": {
                        "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                        "type": "string"
                    },
                    "platform": {
                        "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                        "enum": [
                            "ANDROID",
                            "IOS"
                        ],
                        "type": "string"
                    },
                    "radios": {
                        "description": "Information about the radio states for the run.",
                        "properties": {
                            "bluetooth": {
                                "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            },
                            "gps": {
                                "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            },
                            "nfc": {
                                "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            },
                            "wifi": {
                                "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "result": {
                        "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PASSED",
                            "WARNED",
                            "FAILED",
                            "SKIPPED",
                            "ERRORED",
                            "STOPPED"
                        ],
                        "type": "string"
                    },
                    "resultCode": {
                        "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                        "enum": [
                            "PARSING_FAILED",
                            "VPC_ENDPOINT_SETUP_FAILED"
                        ],
                        "type": "string"
                    },
                    "seed": {
                        "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                        "type": "integer"
                    },
                    "skipAppResign": {
                        "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                        "type": "boolean"
                    },
                    "started": {
                        "description": "The run's start time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PENDING_CONCURRENCY",
                            "PENDING_DEVICE",
                            "PROCESSING",
                            "SCHEDULING",
                            "PREPARING",
                            "RUNNING",
                            "COMPLETED",
                            "STOPPING"
                        ],
                        "type": "string"
                    },
                    "stopped": {
                        "description": "The run's stop time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "testSpecArn": {
                        "description": "The ARN of the YAML-formatted test specification for the run.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "totalJobs": {
                        "description": "The total number of jobs for the run.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                        "enum": [
                            "BUILTIN_FUZZ",
                            "BUILTIN_EXPLORER",
                            "WEB_PERFORMANCE_PROFILE",
                            "APPIUM_JAVA_JUNIT",
                            "APPIUM_JAVA_TESTNG",
                            "APPIUM_PYTHON",
                            "APPIUM_NODE",
                            "APPIUM_RUBY",
                            "APPIUM_WEB_JAVA_JUNIT",
                            "APPIUM_WEB_JAVA_TESTNG",
                            "APPIUM_WEB_PYTHON",
                            "APPIUM_WEB_NODE",
                            "APPIUM_WEB_RUBY",
                            "CALABASH",
                            "INSTRUMENTATION",
                            "UIAUTOMATION",
                            "UIAUTOMATOR",
                            "XCTEST",
                            "XCTEST_UI",
                            "REMOTE_ACCESS_RECORD",
                            "REMOTE_ACCESS_REPLAY"
                        ],
                        "type": "string"
                    },
                    "webUrl": {
                        "description": "The Device Farm console URL for the recording of the run.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Runs": {
                "items": {
                    "description": "Represents a test run on a set of devices with a given app package, test parameters, etc.",
                    "properties": {
                        "appUpload": {
                            "description": "An app to upload or that has been uploaded.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "arn": {
                            "description": "The run's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "billingMethod": {
                            "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                            "enum": [
                                "METERED",
                                "UNMETERED"
                            ],
                            "type": "string"
                        },
                        "completedJobs": {
                            "description": "The total number of completed jobs.",
                            "type": "integer"
                        },
                        "counters": {
                            "description": "The run's result counters.",
                            "properties": {
                                "errored": {
                                    "description": "The number of errored entities.",
                                    "type": "integer"
                                },
                                "failed": {
                                    "description": "The number of failed entities.",
                                    "type": "integer"
                                },
                                "passed": {
                                    "description": "The number of passed entities.",
                                    "type": "integer"
                                },
                                "skipped": {
                                    "description": "The number of skipped entities.",
                                    "type": "integer"
                                },
                                "stopped": {
                                    "description": "The number of stopped entities.",
                                    "type": "integer"
                                },
                                "total": {
                                    "description": "The total number of entities.",
                                    "type": "integer"
                                },
                                "warned": {
                                    "description": "The number of warned entities.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "created": {
                            "description": "When the run was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "customerArtifactPaths": {
                            "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                            "properties": {
                                "androidPaths": {
                                    "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "deviceHostPaths": {
                                    "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "iosPaths": {
                                    "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "deviceMinutes": {
                            "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                            "properties": {
                                "metered": {
                                    "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "total": {
                                    "description": "When specified, represents the total minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "unmetered": {
                                    "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "devicePoolArn": {
                            "description": "The ARN of the device pool for the run.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "deviceSelectionResult": {
                            "description": "The results of a device filter used to select the devices for a test run.",
                            "properties": {
                                "filters": {
                                    "description": "The filters in a device selection result.",
                                    "items": {
                                        "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                        "properties": {
                                            "attribute": {
                                                "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                "enum": [
                                                    "ARN",
                                                    "PLATFORM",
                                                    "OS_VERSION",
                                                    "MODEL",
                                                    "AVAILABILITY",
                                                    "FORM_FACTOR",
                                                    "MANUFACTURER",
                                                    "REMOTE_ACCESS_ENABLED",
                                                    "REMOTE_DEBUG_ENABLED",
                                                    "INSTANCE_ARN",
                                                    "INSTANCE_LABELS",
                                                    "FLEET_TYPE"
                                                ],
                                                "type": "string"
                                            },
                                            "operator": {
                                                "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                "enum": [
                                                    "EQUALS",
                                                    "LESS_THAN",
                                                    "LESS_THAN_OR_EQUALS",
                                                    "GREATER_THAN",
                                                    "GREATER_THAN_OR_EQUALS",
                                                    "IN",
                                                    "NOT_IN",
                                                    "CONTAINS"
                                                ],
                                                "type": "string"
                                            },
                                            "values": {
                                                "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "matchedDevicesCount": {
                                    "description": "The number of devices that matched the device filter selection criteria.",
                                    "type": "integer"
                                },
                                "maxDevices": {
                                    "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "eventCount": {
                            "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                            "type": "integer"
                        },
                        "jobTimeoutMinutes": {
                            "description": "The number of minutes the job will execute before it times out.",
                            "type": "integer"
                        },
                        "locale": {
                            "description": "Information about the locale that is used for the run.",
                            "type": "string"
                        },
                        "location": {
                            "description": "Information about the location that is used for the run.",
                            "properties": {
                                "latitude": {
                                    "description": "The latitude.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "longitude": {
                                    "description": "The longitude.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "latitude",
                                "longitude"
                            ],
                            "type": "object"
                        },
                        "message": {
                            "description": "A message about the run's result.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "name": {
                            "description": "The run's name.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "networkProfile": {
                            "description": "The network profile being used for a test run.",
                            "properties": {
                                "arn": {
                                    "description": "The Amazon Resource Name (ARN) of the network profile.",
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "description": {
                                    "description": "The description of the network profile.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "downlinkBandwidthBits": {
                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                    "type": "integer"
                                },
                                "downlinkDelayMs": {
                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                    "type": "integer"
                                },
                                "downlinkJitterMs": {
                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                    "type": "integer"
                                },
                                "downlinkLossPercent": {
                                    "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                    "maximum": 100,
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "The name of the network profile.",
                                    "maxLength": 256,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "type": {
                                    "description": "The type of network profile. Valid values are listed below.",
                                    "enum": [
                                        "CURATED",
                                        "PRIVATE"
                                    ],
                                    "type": "string"
                                },
                                "uplinkBandwidthBits": {
                                    "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                    "type": "integer"
                                },
                                "uplinkDelayMs": {
                                    "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                    "type": "integer"
                                },
                                "uplinkJitterMs": {
                                    "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                    "type": "integer"
                                },
                                "uplinkLossPercent": {
                                    "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                    "maximum": 100,
                                    "minimum": 0,
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "parsingResultUrl": {
                            "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                            "type": "string"
                        },
                        "platform": {
                            "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                            "enum": [
                                "ANDROID",
                                "IOS"
                            ],
                            "type": "string"
                        },
                        "radios": {
                            "description": "Information about the radio states for the run.",
                            "properties": {
                                "bluetooth": {
                                    "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                    "type": "boolean"
                                },
                                "gps": {
                                    "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                    "type": "boolean"
                                },
                                "nfc": {
                                    "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                    "type": "boolean"
                                },
                                "wifi": {
                                    "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "result": {
                            "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PASSED",
                                "WARNED",
                                "FAILED",
                                "SKIPPED",
                                "ERRORED",
                                "STOPPED"
                            ],
                            "type": "string"
                        },
                        "resultCode": {
                            "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                            "enum": [
                                "PARSING_FAILED",
                                "VPC_ENDPOINT_SETUP_FAILED"
                            ],
                            "type": "string"
                        },
                        "seed": {
                            "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                            "type": "integer"
                        },
                        "skipAppResign": {
                            "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                            "type": "boolean"
                        },
                        "started": {
                            "description": "The run's start time.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "status": {
                            "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PENDING_CONCURRENCY",
                                "PENDING_DEVICE",
                                "PROCESSING",
                                "SCHEDULING",
                                "PREPARING",
                                "RUNNING",
                                "COMPLETED",
                                "STOPPING"
                            ],
                            "type": "string"
                        },
                        "stopped": {
                            "description": "The run's stop time.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "testSpecArn": {
                            "description": "The ARN of the YAML-formatted test specification for the run.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "totalJobs": {
                            "description": "The total number of jobs for the run.",
                            "type": "integer"
                        },
                        "type": {
                            "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                            "enum": [
                                "BUILTIN_FUZZ",
                                "BUILTIN_EXPLORER",
                                "WEB_PERFORMANCE_PROFILE",
                                "APPIUM_JAVA_JUNIT",
                                "APPIUM_JAVA_TESTNG",
                                "APPIUM_PYTHON",
                                "APPIUM_NODE",
                                "APPIUM_RUBY",
                                "APPIUM_WEB_JAVA_JUNIT",
                                "APPIUM_WEB_JAVA_TESTNG",
                                "APPIUM_WEB_PYTHON",
                                "APPIUM_WEB_NODE",
                                "APPIUM_WEB_RUBY",
                                "CALABASH",
                                "INSTRUMENTATION",
                                "UIAUTOMATION",
                                "UIAUTOMATOR",
                                "XCTEST",
                                "XCTEST_UI",
                                "REMOTE_ACCESS_RECORD",
                                "REMOTE_ACCESS_REPLAY"
                            ],
                            "type": "string"
                        },
                        "webUrl": {
                            "description": "The Device Farm console URL for the recording of the run.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Sample": {
                "description": "Represents a sample of performance data.",
                "properties": {
                    "arn": {
                        "description": "The sample's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The sample's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>CPU: A CPU sample type. This is expressed as the app processing CPU time (including child processes) as reported by process, as a percentage.</p> </li> <li> <p>MEMORY: A memory usage sample type. This is expressed as the total proportional set size of an app process, in kilobytes.</p> </li> <li> <p>NATIVE_AVG_DRAWTIME</p> </li> <li> <p>NATIVE_FPS</p> </li> <li> <p>NATIVE_FRAMES</p> </li> <li> <p>NATIVE_MAX_DRAWTIME</p> </li> <li> <p>NATIVE_MIN_DRAWTIME</p> </li> <li> <p>OPENGL_AVG_DRAWTIME</p> </li> <li> <p>OPENGL_FPS</p> </li> <li> <p>OPENGL_FRAMES</p> </li> <li> <p>OPENGL_MAX_DRAWTIME</p> </li> <li> <p>OPENGL_MIN_DRAWTIME</p> </li> <li> <p>RX</p> </li> <li> <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app process.</p> </li> <li> <p>THREADS: A threads sample type. This is expressed as the total number of threads per app process.</p> </li> <li> <p>TX</p> </li> <li> <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are received, by app process.</p> </li> </ul>",
                        "enum": [
                            "CPU",
                            "MEMORY",
                            "THREADS",
                            "RX_RATE",
                            "TX_RATE",
                            "RX",
                            "TX",
                            "NATIVE_FRAMES",
                            "NATIVE_FPS",
                            "NATIVE_MIN_DRAWTIME",
                            "NATIVE_AVG_DRAWTIME",
                            "NATIVE_MAX_DRAWTIME",
                            "OPENGL_FRAMES",
                            "OPENGL_FPS",
                            "OPENGL_MIN_DRAWTIME",
                            "OPENGL_AVG_DRAWTIME",
                            "OPENGL_MAX_DRAWTIME"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the sample's file.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SampleType": {
                "enum": [
                    "CPU",
                    "MEMORY",
                    "THREADS",
                    "RX_RATE",
                    "TX_RATE",
                    "RX",
                    "TX",
                    "NATIVE_FRAMES",
                    "NATIVE_FPS",
                    "NATIVE_MIN_DRAWTIME",
                    "NATIVE_AVG_DRAWTIME",
                    "NATIVE_MAX_DRAWTIME",
                    "OPENGL_FRAMES",
                    "OPENGL_FPS",
                    "OPENGL_MIN_DRAWTIME",
                    "OPENGL_AVG_DRAWTIME",
                    "OPENGL_MAX_DRAWTIME"
                ],
                "type": "string"
            },
            "Samples": {
                "items": {
                    "description": "Represents a sample of performance data.",
                    "properties": {
                        "arn": {
                            "description": "The sample's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "type": {
                            "description": "<p>The sample's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>CPU: A CPU sample type. This is expressed as the app processing CPU time (including child processes) as reported by process, as a percentage.</p> </li> <li> <p>MEMORY: A memory usage sample type. This is expressed as the total proportional set size of an app process, in kilobytes.</p> </li> <li> <p>NATIVE_AVG_DRAWTIME</p> </li> <li> <p>NATIVE_FPS</p> </li> <li> <p>NATIVE_FRAMES</p> </li> <li> <p>NATIVE_MAX_DRAWTIME</p> </li> <li> <p>NATIVE_MIN_DRAWTIME</p> </li> <li> <p>OPENGL_AVG_DRAWTIME</p> </li> <li> <p>OPENGL_FPS</p> </li> <li> <p>OPENGL_FRAMES</p> </li> <li> <p>OPENGL_MAX_DRAWTIME</p> </li> <li> <p>OPENGL_MIN_DRAWTIME</p> </li> <li> <p>RX</p> </li> <li> <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app process.</p> </li> <li> <p>THREADS: A threads sample type. This is expressed as the total number of threads per app process.</p> </li> <li> <p>TX</p> </li> <li> <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are received, by app process.</p> </li> </ul>",
                            "enum": [
                                "CPU",
                                "MEMORY",
                                "THREADS",
                                "RX_RATE",
                                "TX_RATE",
                                "RX",
                                "TX",
                                "NATIVE_FRAMES",
                                "NATIVE_FPS",
                                "NATIVE_MIN_DRAWTIME",
                                "NATIVE_AVG_DRAWTIME",
                                "NATIVE_MAX_DRAWTIME",
                                "OPENGL_FRAMES",
                                "OPENGL_FPS",
                                "OPENGL_MIN_DRAWTIME",
                                "OPENGL_AVG_DRAWTIME",
                                "OPENGL_MAX_DRAWTIME"
                            ],
                            "type": "string"
                        },
                        "url": {
                            "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the sample's file.",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "ScheduleRunConfiguration": {
                "description": "Represents the settings for a run. Includes things like location, radio states, auxiliary apps, and network profiles.",
                "properties": {
                    "auxiliaryApps": {
                        "description": "A list of auxiliary apps for the run.",
                        "items": {
                            "minLength": 32,
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "billingMethod": {
                        "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                        "enum": [
                            "METERED",
                            "UNMETERED"
                        ],
                        "type": "string"
                    },
                    "customerArtifactPaths": {
                        "description": "Input <code>CustomerArtifactPaths</code> object for the scheduled run configuration.",
                        "properties": {
                            "androidPaths": {
                                "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "deviceHostPaths": {
                                "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "iosPaths": {
                                "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "extraDataPackageArn": {
                        "description": "The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm will extract to external data for Android or the app's sandbox for iOS.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "locale": {
                        "description": "Information about the locale that is used for the run.",
                        "type": "string"
                    },
                    "location": {
                        "description": "Information about the location that is used for the run.",
                        "properties": {
                            "latitude": {
                                "description": "The latitude.",
                                "format": "double",
                                "type": "number"
                            },
                            "longitude": {
                                "description": "The longitude.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "required": [
                            "latitude",
                            "longitude"
                        ],
                        "type": "object"
                    },
                    "networkProfileArn": {
                        "description": "Reserved for internal use.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "radios": {
                        "description": "Information about the radio states for the run.",
                        "properties": {
                            "bluetooth": {
                                "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            },
                            "gps": {
                                "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            },
                            "nfc": {
                                "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            },
                            "wifi": {
                                "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "vpceConfigurationArns": {
                        "description": "An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.",
                        "items": {
                            "minLength": 32,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ScheduleRunRequest": {
                "description": "Represents a request to the schedule run operation.",
                "example": {
                    "devicePoolArn": "arn:aws:devicefarm:us-west-2:123456789101:pool:EXAMPLE-GUID-123-456",
                    "name": "MyRun",
                    "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
                    "test": {
                        "testPackageArn": "arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456",
                        "type": "APPIUM_JAVA_JUNIT"
                    }
                },
                "properties": {
                    "appArn": {
                        "description": "The ARN of the app to schedule a run.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "configuration": {
                        "description": "Information about the settings for the run to be scheduled.",
                        "properties": {
                            "auxiliaryApps": {
                                "description": "A list of auxiliary apps for the run.",
                                "items": {
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "billingMethod": {
                                "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                "enum": [
                                    "METERED",
                                    "UNMETERED"
                                ],
                                "type": "string"
                            },
                            "customerArtifactPaths": {
                                "description": "Input <code>CustomerArtifactPaths</code> object for the scheduled run configuration.",
                                "properties": {
                                    "androidPaths": {
                                        "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "deviceHostPaths": {
                                        "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "iosPaths": {
                                        "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "extraDataPackageArn": {
                                "description": "The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm will extract to external data for Android or the app's sandbox for iOS.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "locale": {
                                "description": "Information about the locale that is used for the run.",
                                "type": "string"
                            },
                            "location": {
                                "description": "Information about the location that is used for the run.",
                                "properties": {
                                    "latitude": {
                                        "description": "The latitude.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "longitude": {
                                        "description": "The longitude.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "latitude",
                                    "longitude"
                                ],
                                "type": "object"
                            },
                            "networkProfileArn": {
                                "description": "Reserved for internal use.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "radios": {
                                "description": "Information about the radio states for the run.",
                                "properties": {
                                    "bluetooth": {
                                        "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "gps": {
                                        "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "nfc": {
                                        "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "wifi": {
                                        "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "vpceConfigurationArns": {
                                "description": "An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.",
                                "items": {
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "devicePoolArn": {
                        "description": "The ARN of the device pool for the run to be scheduled.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "deviceSelectionConfiguration": {
                        "description": "<p>The filter criteria used to dynamically select a set of devices for a test run, as well as the maximum number of devices to be included in the run.</p> <p>Either <b> <code>devicePoolArn</code> </b> or <b> <code>deviceSelectionConfiguration</code> </b> is required in a request.</p>",
                        "properties": {
                            "filters": {
                                "description": "<p>Used to dynamically select a set of devices for a test run. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p> <b>Attribute</b> </p> <p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> </li> <li> <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> </li> <li> <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p> </li> <li> <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> </li> <li> <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> <li> <p> <b>Operator</b> </p> <p>The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p> <b>Values</b> </p> <p>An array of one or more filter values.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul> </li> </ul>",
                                "items": {
                                    "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                    "properties": {
                                        "attribute": {
                                            "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                            "enum": [
                                                "ARN",
                                                "PLATFORM",
                                                "OS_VERSION",
                                                "MODEL",
                                                "AVAILABILITY",
                                                "FORM_FACTOR",
                                                "MANUFACTURER",
                                                "REMOTE_ACCESS_ENABLED",
                                                "REMOTE_DEBUG_ENABLED",
                                                "INSTANCE_ARN",
                                                "INSTANCE_LABELS",
                                                "FLEET_TYPE"
                                            ],
                                            "type": "string"
                                        },
                                        "operator": {
                                            "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                            "enum": [
                                                "EQUALS",
                                                "LESS_THAN",
                                                "LESS_THAN_OR_EQUALS",
                                                "GREATER_THAN",
                                                "GREATER_THAN_OR_EQUALS",
                                                "IN",
                                                "NOT_IN",
                                                "CONTAINS"
                                            ],
                                            "type": "string"
                                        },
                                        "values": {
                                            "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "maxDevices": {
                                "description": "The maximum number of devices to be included in a test run.",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "filters",
                            "maxDevices"
                        ],
                        "type": "object"
                    },
                    "executionConfiguration": {
                        "description": "Specifies configuration information about a test run, such as the execution timeout (in minutes).",
                        "properties": {
                            "accountsCleanup": {
                                "description": "True if account cleanup is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            },
                            "appPackagesCleanup": {
                                "description": "True if app package cleanup is enabled at the beginning of the test; otherwise, false.",
                                "type": "boolean"
                            },
                            "jobTimeoutMinutes": {
                                "description": "The number of minutes a test run will execute before it times out.",
                                "type": "integer"
                            },
                            "skipAppResign": {
                                "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                "type": "boolean"
                            },
                            "videoCapture": {
                                "description": "Set to true to enable video capture; otherwise, set to false. The default is true.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "name": {
                        "description": "The name for the run to be scheduled.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "projectArn": {
                        "description": "The ARN of the project for the run to be scheduled.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "test": {
                        "description": "Information about the test for the run to be scheduled.",
                        "properties": {
                            "filter": {
                                "description": "The test's filter.",
                                "maxLength": 8192,
                                "minLength": 0,
                                "type": "string"
                            },
                            "parameters": {
                                "description": "<p>The test's parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.</p> <p>For all tests:</p> <ul> <li> <p>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to \"false\" to disable it.</p> </li> </ul> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile, for example, \"my_profile_name\".</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don't have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are \"1.6.5\" (and higher), \"latest\", and \"default\".</p> <ul> <li> <p>“latest” will run the latest Appium version supported by Device Farm (1.9.1).</p> </li> <li> <p>For “default”, Device Farm will choose a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For Fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A username to use if the Explorer encounters a login form. If not supplied, no username will be inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password will be inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: \"LoginTests\"</p> </li> <li> <p>Running a multiple test classes: \"LoginTests,SmokeTests\"</p> </li> <li> <p>Running a single test: \"LoginTests/testValid\"</p> </li> <li> <p>Running multiple tests: \"LoginTests/testValid,LoginTests/testInvalid\"</p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul>",
                                "items": {
                                    "properties": {
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "testPackageArn": {
                                "description": "The ARN of the uploaded test that will be run.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "testSpecArn": {
                                "description": "The ARN of the YAML-formatted test specification.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                "enum": [
                                    "BUILTIN_FUZZ",
                                    "BUILTIN_EXPLORER",
                                    "WEB_PERFORMANCE_PROFILE",
                                    "APPIUM_JAVA_JUNIT",
                                    "APPIUM_JAVA_TESTNG",
                                    "APPIUM_PYTHON",
                                    "APPIUM_NODE",
                                    "APPIUM_RUBY",
                                    "APPIUM_WEB_JAVA_JUNIT",
                                    "APPIUM_WEB_JAVA_TESTNG",
                                    "APPIUM_WEB_PYTHON",
                                    "APPIUM_WEB_NODE",
                                    "APPIUM_WEB_RUBY",
                                    "CALABASH",
                                    "INSTRUMENTATION",
                                    "UIAUTOMATION",
                                    "UIAUTOMATOR",
                                    "XCTEST",
                                    "XCTEST_UI",
                                    "REMOTE_ACCESS_RECORD",
                                    "REMOTE_ACCESS_REPLAY"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "type"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "projectArn",
                    "test"
                ],
                "type": "object"
            },
            "ScheduleRunResult": {
                "description": "Represents the result of a schedule run request.",
                "example": {
                    "run": {}
                },
                "properties": {
                    "run": {
                        "description": "Information about the scheduled run.",
                        "properties": {
                            "appUpload": {
                                "description": "An app to upload or that has been uploaded.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "arn": {
                                "description": "The run's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "billingMethod": {
                                "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                "enum": [
                                    "METERED",
                                    "UNMETERED"
                                ],
                                "type": "string"
                            },
                            "completedJobs": {
                                "description": "The total number of completed jobs.",
                                "type": "integer"
                            },
                            "counters": {
                                "description": "The run's result counters.",
                                "properties": {
                                    "errored": {
                                        "description": "The number of errored entities.",
                                        "type": "integer"
                                    },
                                    "failed": {
                                        "description": "The number of failed entities.",
                                        "type": "integer"
                                    },
                                    "passed": {
                                        "description": "The number of passed entities.",
                                        "type": "integer"
                                    },
                                    "skipped": {
                                        "description": "The number of skipped entities.",
                                        "type": "integer"
                                    },
                                    "stopped": {
                                        "description": "The number of stopped entities.",
                                        "type": "integer"
                                    },
                                    "total": {
                                        "description": "The total number of entities.",
                                        "type": "integer"
                                    },
                                    "warned": {
                                        "description": "The number of warned entities.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "created": {
                                "description": "When the run was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "customerArtifactPaths": {
                                "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                                "properties": {
                                    "androidPaths": {
                                        "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "deviceHostPaths": {
                                        "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "iosPaths": {
                                        "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceMinutes": {
                                "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "devicePoolArn": {
                                "description": "The ARN of the device pool for the run.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "deviceSelectionResult": {
                                "description": "The results of a device filter used to select the devices for a test run.",
                                "properties": {
                                    "filters": {
                                        "description": "The filters in a device selection result.",
                                        "items": {
                                            "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                            "properties": {
                                                "attribute": {
                                                    "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                    "enum": [
                                                        "ARN",
                                                        "PLATFORM",
                                                        "OS_VERSION",
                                                        "MODEL",
                                                        "AVAILABILITY",
                                                        "FORM_FACTOR",
                                                        "MANUFACTURER",
                                                        "REMOTE_ACCESS_ENABLED",
                                                        "REMOTE_DEBUG_ENABLED",
                                                        "INSTANCE_ARN",
                                                        "INSTANCE_LABELS",
                                                        "FLEET_TYPE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "operator": {
                                                    "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                    "enum": [
                                                        "EQUALS",
                                                        "LESS_THAN",
                                                        "LESS_THAN_OR_EQUALS",
                                                        "GREATER_THAN",
                                                        "GREATER_THAN_OR_EQUALS",
                                                        "IN",
                                                        "NOT_IN",
                                                        "CONTAINS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "values": {
                                                    "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "matchedDevicesCount": {
                                        "description": "The number of devices that matched the device filter selection criteria.",
                                        "type": "integer"
                                    },
                                    "maxDevices": {
                                        "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "eventCount": {
                                "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                                "type": "integer"
                            },
                            "jobTimeoutMinutes": {
                                "description": "The number of minutes the job will execute before it times out.",
                                "type": "integer"
                            },
                            "locale": {
                                "description": "Information about the locale that is used for the run.",
                                "type": "string"
                            },
                            "location": {
                                "description": "Information about the location that is used for the run.",
                                "properties": {
                                    "latitude": {
                                        "description": "The latitude.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "longitude": {
                                        "description": "The longitude.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "latitude",
                                    "longitude"
                                ],
                                "type": "object"
                            },
                            "message": {
                                "description": "A message about the run's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The run's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "networkProfile": {
                                "description": "The network profile being used for a test run.",
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the network profile.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the network profile.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "downlinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "downlinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkLossPercent": {
                                        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "The name of the network profile.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "The type of network profile. Valid values are listed below.",
                                        "enum": [
                                            "CURATED",
                                            "PRIVATE"
                                        ],
                                        "type": "string"
                                    },
                                    "uplinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "uplinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkLossPercent": {
                                        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "parsingResultUrl": {
                                "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                                "type": "string"
                            },
                            "platform": {
                                "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID",
                                    "IOS"
                                ],
                                "type": "string"
                            },
                            "radios": {
                                "description": "Information about the radio states for the run.",
                                "properties": {
                                    "bluetooth": {
                                        "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "gps": {
                                        "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "nfc": {
                                        "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "wifi": {
                                        "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "result": {
                                "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "resultCode": {
                                "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                                "enum": [
                                    "PARSING_FAILED",
                                    "VPC_ENDPOINT_SETUP_FAILED"
                                ],
                                "type": "string"
                            },
                            "seed": {
                                "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                                "type": "integer"
                            },
                            "skipAppResign": {
                                "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                "type": "boolean"
                            },
                            "started": {
                                "description": "The run's start time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The run's stop time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "testSpecArn": {
                                "description": "The ARN of the YAML-formatted test specification for the run.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "totalJobs": {
                                "description": "The total number of jobs for the run.",
                                "type": "integer"
                            },
                            "type": {
                                "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                "enum": [
                                    "BUILTIN_FUZZ",
                                    "BUILTIN_EXPLORER",
                                    "WEB_PERFORMANCE_PROFILE",
                                    "APPIUM_JAVA_JUNIT",
                                    "APPIUM_JAVA_TESTNG",
                                    "APPIUM_PYTHON",
                                    "APPIUM_NODE",
                                    "APPIUM_RUBY",
                                    "APPIUM_WEB_JAVA_JUNIT",
                                    "APPIUM_WEB_JAVA_TESTNG",
                                    "APPIUM_WEB_PYTHON",
                                    "APPIUM_WEB_NODE",
                                    "APPIUM_WEB_RUBY",
                                    "CALABASH",
                                    "INSTRUMENTATION",
                                    "UIAUTOMATION",
                                    "UIAUTOMATOR",
                                    "XCTEST",
                                    "XCTEST_UI",
                                    "REMOTE_ACCESS_RECORD",
                                    "REMOTE_ACCESS_REPLAY"
                                ],
                                "type": "string"
                            },
                            "webUrl": {
                                "description": "The Device Farm console URL for the recording of the run.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ScheduleRunTest": {
                "description": "Represents test settings. This data structure is passed in as the \"test\" parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.",
                "properties": {
                    "filter": {
                        "description": "The test's filter.",
                        "maxLength": 8192,
                        "minLength": 0,
                        "type": "string"
                    },
                    "parameters": {
                        "description": "<p>The test's parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.</p> <p>For all tests:</p> <ul> <li> <p>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to \"false\" to disable it.</p> </li> </ul> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile, for example, \"my_profile_name\".</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don't have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are \"1.6.5\" (and higher), \"latest\", and \"default\".</p> <ul> <li> <p>“latest” will run the latest Appium version supported by Device Farm (1.9.1).</p> </li> <li> <p>For “default”, Device Farm will choose a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For Fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A username to use if the Explorer encounters a login form. If not supplied, no username will be inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password will be inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: \"LoginTests\"</p> </li> <li> <p>Running a multiple test classes: \"LoginTests,SmokeTests\"</p> </li> <li> <p>Running a single test: \"LoginTests/testValid\"</p> </li> <li> <p>Running multiple tests: \"LoginTests/testValid,LoginTests/testInvalid\"</p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul>",
                        "items": {
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "testPackageArn": {
                        "description": "The ARN of the uploaded test that will be run.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "testSpecArn": {
                        "description": "The ARN of the YAML-formatted test specification.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                        "enum": [
                            "BUILTIN_FUZZ",
                            "BUILTIN_EXPLORER",
                            "WEB_PERFORMANCE_PROFILE",
                            "APPIUM_JAVA_JUNIT",
                            "APPIUM_JAVA_TESTNG",
                            "APPIUM_PYTHON",
                            "APPIUM_NODE",
                            "APPIUM_RUBY",
                            "APPIUM_WEB_JAVA_JUNIT",
                            "APPIUM_WEB_JAVA_TESTNG",
                            "APPIUM_WEB_PYTHON",
                            "APPIUM_WEB_NODE",
                            "APPIUM_WEB_RUBY",
                            "CALABASH",
                            "INSTRUMENTATION",
                            "UIAUTOMATION",
                            "UIAUTOMATOR",
                            "XCTEST",
                            "XCTEST_UI",
                            "REMOTE_ACCESS_RECORD",
                            "REMOTE_ACCESS_REPLAY"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "ServiceAccountException": {},
            "ServiceDnsName": {
                "maxLength": 2048,
                "minLength": 0,
                "type": "string"
            },
            "SkipAppResign": {
                "type": "boolean"
            },
            "SshPublicKey": {
                "maxLength": 8192,
                "minLength": 0,
                "type": "string"
            },
            "StopJobRequest": {
                "properties": {
                    "arn": {
                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm job you wish to stop.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "StopJobResult": {
                "properties": {
                    "job": {
                        "description": "The job that was stopped.",
                        "properties": {
                            "arn": {
                                "description": "The job's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "counters": {
                                "description": "The job's result counters.",
                                "properties": {
                                    "errored": {
                                        "description": "The number of errored entities.",
                                        "type": "integer"
                                    },
                                    "failed": {
                                        "description": "The number of failed entities.",
                                        "type": "integer"
                                    },
                                    "passed": {
                                        "description": "The number of passed entities.",
                                        "type": "integer"
                                    },
                                    "skipped": {
                                        "description": "The number of skipped entities.",
                                        "type": "integer"
                                    },
                                    "stopped": {
                                        "description": "The number of stopped entities.",
                                        "type": "integer"
                                    },
                                    "total": {
                                        "description": "The total number of entities.",
                                        "type": "integer"
                                    },
                                    "warned": {
                                        "description": "The number of warned entities.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "created": {
                                "description": "When the job was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "device": {
                                "description": "The device (phone or tablet).",
                                "properties": {
                                    "arn": {
                                        "description": "The device's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "availability": {
                                        "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                        "enum": [
                                            "TEMPORARY_NOT_AVAILABLE",
                                            "BUSY",
                                            "AVAILABLE",
                                            "HIGHLY_AVAILABLE"
                                        ],
                                        "type": "string"
                                    },
                                    "carrier": {
                                        "description": "The device's carrier.",
                                        "type": "string"
                                    },
                                    "cpu": {
                                        "description": "Information about the device's CPU.",
                                        "properties": {
                                            "architecture": {
                                                "description": "The CPU's architecture, for example x86 or ARM.",
                                                "type": "string"
                                            },
                                            "clock": {
                                                "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "frequency": {
                                                "description": "The CPU's frequency.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "fleetName": {
                                        "description": "The name of the fleet to which this device belongs.",
                                        "type": "string"
                                    },
                                    "fleetType": {
                                        "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                        "type": "string"
                                    },
                                    "formFactor": {
                                        "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                        "enum": [
                                            "PHONE",
                                            "TABLET"
                                        ],
                                        "type": "string"
                                    },
                                    "heapSize": {
                                        "description": "The device's heap size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "The device's image name.",
                                        "type": "string"
                                    },
                                    "instances": {
                                        "description": "The instances belonging to this device.",
                                        "items": {
                                            "description": "Represents the device instance.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "instanceProfile": {
                                                    "description": "A object containing information about the instance profile.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the instance profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "excludeAppPackagesFromCleanup": {
                                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the instance profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "packageCleanup": {
                                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                            "type": "boolean"
                                                        },
                                                        "rebootAfterUse": {
                                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "labels": {
                                                    "description": "An array of strings describing the device instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "status": {
                                                    "description": "The status of the device instance. Valid values are listed below.",
                                                    "enum": [
                                                        "IN_USE",
                                                        "PREPARING",
                                                        "AVAILABLE",
                                                        "NOT_AVAILABLE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "udid": {
                                                    "description": "Unique device identifier for the device instance.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "manufacturer": {
                                        "description": "The device's manufacturer name.",
                                        "type": "string"
                                    },
                                    "memory": {
                                        "description": "The device's total memory size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "model": {
                                        "description": "The device's model name.",
                                        "type": "string"
                                    },
                                    "modelId": {
                                        "description": "The device's model ID.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The device's display name.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "os": {
                                        "description": "The device's operating system type.",
                                        "type": "string"
                                    },
                                    "platform": {
                                        "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                        "enum": [
                                            "ANDROID",
                                            "IOS"
                                        ],
                                        "type": "string"
                                    },
                                    "radio": {
                                        "description": "The device's radio.",
                                        "type": "string"
                                    },
                                    "remoteAccessEnabled": {
                                        "description": "Specifies whether remote access has been enabled for the specified device.",
                                        "type": "boolean"
                                    },
                                    "remoteDebugEnabled": {
                                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                        "type": "boolean"
                                    },
                                    "resolution": {
                                        "description": "The resolution of the device.",
                                        "properties": {
                                            "height": {
                                                "description": "The screen resolution's height, expressed in pixels.",
                                                "type": "integer"
                                            },
                                            "width": {
                                                "description": "The screen resolution's width, expressed in pixels.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceMinutes": {
                                "description": "Represents the total (metered or unmetered) minutes used by the job.",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "instanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the instance.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "message": {
                                "description": "A message about the job's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The job's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "result": {
                                "description": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "started": {
                                "description": "The job's start time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The job's stop time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby test type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                "enum": [
                                    "BUILTIN_FUZZ",
                                    "BUILTIN_EXPLORER",
                                    "WEB_PERFORMANCE_PROFILE",
                                    "APPIUM_JAVA_JUNIT",
                                    "APPIUM_JAVA_TESTNG",
                                    "APPIUM_PYTHON",
                                    "APPIUM_NODE",
                                    "APPIUM_RUBY",
                                    "APPIUM_WEB_JAVA_JUNIT",
                                    "APPIUM_WEB_JAVA_TESTNG",
                                    "APPIUM_WEB_PYTHON",
                                    "APPIUM_WEB_NODE",
                                    "APPIUM_WEB_RUBY",
                                    "CALABASH",
                                    "INSTRUMENTATION",
                                    "UIAUTOMATION",
                                    "UIAUTOMATOR",
                                    "XCTEST",
                                    "XCTEST_UI",
                                    "REMOTE_ACCESS_RECORD",
                                    "REMOTE_ACCESS_REPLAY"
                                ],
                                "type": "string"
                            },
                            "videoCapture": {
                                "description": "This value is set to true if video capture is enabled; otherwise, it is set to false.",
                                "type": "boolean"
                            },
                            "videoEndpoint": {
                                "description": "The endpoint for streaming device video.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "StopRemoteAccessSessionRequest": {
                "description": "Represents the request to stop the remote access session.",
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the remote access session you wish to stop.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "StopRemoteAccessSessionResult": {
                "description": "Represents the response from the server that describes the remote access session when AWS Device Farm stops the session.",
                "properties": {
                    "remoteAccessSession": {
                        "description": "A container representing the metadata from the service about the remote access session you are stopping.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the remote access session.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "billingMethod": {
                                "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\"",
                                "enum": [
                                    "METERED",
                                    "UNMETERED"
                                ],
                                "type": "string"
                            },
                            "clientId": {
                                "description": "Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "created": {
                                "description": "The date and time the remote access session was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "device": {
                                "description": "The device (phone or tablet) used in the remote access session.",
                                "properties": {
                                    "arn": {
                                        "description": "The device's ARN.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "availability": {
                                        "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                        "enum": [
                                            "TEMPORARY_NOT_AVAILABLE",
                                            "BUSY",
                                            "AVAILABLE",
                                            "HIGHLY_AVAILABLE"
                                        ],
                                        "type": "string"
                                    },
                                    "carrier": {
                                        "description": "The device's carrier.",
                                        "type": "string"
                                    },
                                    "cpu": {
                                        "description": "Information about the device's CPU.",
                                        "properties": {
                                            "architecture": {
                                                "description": "The CPU's architecture, for example x86 or ARM.",
                                                "type": "string"
                                            },
                                            "clock": {
                                                "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "frequency": {
                                                "description": "The CPU's frequency.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "fleetName": {
                                        "description": "The name of the fleet to which this device belongs.",
                                        "type": "string"
                                    },
                                    "fleetType": {
                                        "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                        "type": "string"
                                    },
                                    "formFactor": {
                                        "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                        "enum": [
                                            "PHONE",
                                            "TABLET"
                                        ],
                                        "type": "string"
                                    },
                                    "heapSize": {
                                        "description": "The device's heap size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "The device's image name.",
                                        "type": "string"
                                    },
                                    "instances": {
                                        "description": "The instances belonging to this device.",
                                        "items": {
                                            "description": "Represents the device instance.",
                                            "properties": {
                                                "arn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "deviceArn": {
                                                    "description": "The Amazon Resource Name (ARN) of the device.",
                                                    "minLength": 32,
                                                    "type": "string"
                                                },
                                                "instanceProfile": {
                                                    "description": "A object containing information about the instance profile.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "description": "The description of the instance profile.",
                                                            "maxLength": 16384,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "excludeAppPackagesFromCleanup": {
                                                            "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "name": {
                                                            "description": "The name of the instance profile.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "packageCleanup": {
                                                            "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                            "type": "boolean"
                                                        },
                                                        "rebootAfterUse": {
                                                            "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "labels": {
                                                    "description": "An array of strings describing the device instance.",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "status": {
                                                    "description": "The status of the device instance. Valid values are listed below.",
                                                    "enum": [
                                                        "IN_USE",
                                                        "PREPARING",
                                                        "AVAILABLE",
                                                        "NOT_AVAILABLE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "udid": {
                                                    "description": "Unique device identifier for the device instance.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "manufacturer": {
                                        "description": "The device's manufacturer name.",
                                        "type": "string"
                                    },
                                    "memory": {
                                        "description": "The device's total memory size, expressed in bytes.",
                                        "type": "integer"
                                    },
                                    "model": {
                                        "description": "The device's model name.",
                                        "type": "string"
                                    },
                                    "modelId": {
                                        "description": "The device's model ID.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The device's display name.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "os": {
                                        "description": "The device's operating system type.",
                                        "type": "string"
                                    },
                                    "platform": {
                                        "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                        "enum": [
                                            "ANDROID",
                                            "IOS"
                                        ],
                                        "type": "string"
                                    },
                                    "radio": {
                                        "description": "The device's radio.",
                                        "type": "string"
                                    },
                                    "remoteAccessEnabled": {
                                        "description": "Specifies whether remote access has been enabled for the specified device.",
                                        "type": "boolean"
                                    },
                                    "remoteDebugEnabled": {
                                        "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                        "type": "boolean"
                                    },
                                    "resolution": {
                                        "description": "The resolution of the device.",
                                        "properties": {
                                            "height": {
                                                "description": "The screen resolution's height, expressed in pixels.",
                                                "type": "integer"
                                            },
                                            "width": {
                                                "description": "The screen resolution's width, expressed in pixels.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceMinutes": {
                                "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes).",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceUdid": {
                                "description": "Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.",
                                "type": "string"
                            },
                            "endpoint": {
                                "description": "The endpoint for the remote access sesssion.",
                                "type": "string"
                            },
                            "hostAddress": {
                                "description": "IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.",
                                "maxLength": 1024,
                                "type": "string"
                            },
                            "instanceArn": {
                                "description": "The Amazon Resource Name (ARN) of the instance.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "interactionMode": {
                                "description": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You <b>cannot</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device but cannot interact with it or view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You <b>can</b> run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
                                "enum": [
                                    "INTERACTIVE",
                                    "NO_VIDEO",
                                    "VIDEO_ONLY"
                                ],
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "message": {
                                "description": "A message about the remote access session.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the remote access session.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "remoteDebugEnabled": {
                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.",
                                "type": "boolean"
                            },
                            "remoteRecordAppArn": {
                                "description": "The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "remoteRecordEnabled": {
                                "description": "This flag is set to <code>true</code> if remote recording is enabled for the remote access session.",
                                "type": "boolean"
                            },
                            "result": {
                                "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "skipAppResign": {
                                "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                "type": "boolean"
                            },
                            "started": {
                                "description": "The date and time the remote access session was started.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The date and time the remote access session was stopped.",
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "StopRunRequest": {
                "description": "Represents the request to stop a specific run.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456"
                },
                "properties": {
                    "arn": {
                        "description": "Represents the Amazon Resource Name (ARN) of the Device Farm run you wish to stop.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "StopRunResult": {
                "description": "Represents the results of your stop run attempt.",
                "example": {
                    "run": {}
                },
                "properties": {
                    "run": {
                        "description": "The run that was stopped.",
                        "properties": {
                            "appUpload": {
                                "description": "An app to upload or that has been uploaded.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "arn": {
                                "description": "The run's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "billingMethod": {
                                "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.",
                                "enum": [
                                    "METERED",
                                    "UNMETERED"
                                ],
                                "type": "string"
                            },
                            "completedJobs": {
                                "description": "The total number of completed jobs.",
                                "type": "integer"
                            },
                            "counters": {
                                "description": "The run's result counters.",
                                "properties": {
                                    "errored": {
                                        "description": "The number of errored entities.",
                                        "type": "integer"
                                    },
                                    "failed": {
                                        "description": "The number of failed entities.",
                                        "type": "integer"
                                    },
                                    "passed": {
                                        "description": "The number of passed entities.",
                                        "type": "integer"
                                    },
                                    "skipped": {
                                        "description": "The number of skipped entities.",
                                        "type": "integer"
                                    },
                                    "stopped": {
                                        "description": "The number of stopped entities.",
                                        "type": "integer"
                                    },
                                    "total": {
                                        "description": "The total number of entities.",
                                        "type": "integer"
                                    },
                                    "warned": {
                                        "description": "The number of warned entities.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "created": {
                                "description": "When the run was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "customerArtifactPaths": {
                                "description": "Output <code>CustomerArtifactPaths</code> object for the test run.",
                                "properties": {
                                    "androidPaths": {
                                        "description": "Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "deviceHostPaths": {
                                        "description": "Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "iosPaths": {
                                        "description": "Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests will be pulled from.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "deviceMinutes": {
                                "description": "Represents the total (metered or unmetered) minutes used by the test run.",
                                "properties": {
                                    "metered": {
                                        "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "total": {
                                        "description": "When specified, represents the total minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "unmetered": {
                                        "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            },
                            "devicePoolArn": {
                                "description": "The ARN of the device pool for the run.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "deviceSelectionResult": {
                                "description": "The results of a device filter used to select the devices for a test run.",
                                "properties": {
                                    "filters": {
                                        "description": "The filters in a device selection result.",
                                        "items": {
                                            "description": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to ListDevices. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
                                            "properties": {
                                                "attribute": {
                                                    "description": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model. For example, \"iPad 5th Gen\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                                    "enum": [
                                                        "ARN",
                                                        "PLATFORM",
                                                        "OS_VERSION",
                                                        "MODEL",
                                                        "AVAILABILITY",
                                                        "FORM_FACTOR",
                                                        "MANUFACTURER",
                                                        "REMOTE_ACCESS_ENABLED",
                                                        "REMOTE_DEBUG_ENABLED",
                                                        "INSTANCE_ARN",
                                                        "INSTANCE_LABELS",
                                                        "FLEET_TYPE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "operator": {
                                                    "description": "Specifies how Device Farm compares the filter's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                                    "enum": [
                                                        "EQUALS",
                                                        "LESS_THAN",
                                                        "LESS_THAN_OR_EQUALS",
                                                        "GREATER_THAN",
                                                        "GREATER_THAN_OR_EQUALS",
                                                        "IN",
                                                        "NOT_IN",
                                                        "CONTAINS"
                                                    ],
                                                    "type": "string"
                                                },
                                                "values": {
                                                    "description": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p> </li> <li> <p>The AVAILABILITY attribute can be set to \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> </li> <li> <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p> </li> <li> <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p> </li> </ul>",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "matchedDevicesCount": {
                                        "description": "The number of devices that matched the device filter selection criteria.",
                                        "type": "integer"
                                    },
                                    "maxDevices": {
                                        "description": "The maximum number of devices to be selected by a device filter and included in a test run.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "eventCount": {
                                "description": "For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.",
                                "type": "integer"
                            },
                            "jobTimeoutMinutes": {
                                "description": "The number of minutes the job will execute before it times out.",
                                "type": "integer"
                            },
                            "locale": {
                                "description": "Information about the locale that is used for the run.",
                                "type": "string"
                            },
                            "location": {
                                "description": "Information about the location that is used for the run.",
                                "properties": {
                                    "latitude": {
                                        "description": "The latitude.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "longitude": {
                                        "description": "The longitude.",
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "latitude",
                                    "longitude"
                                ],
                                "type": "object"
                            },
                            "message": {
                                "description": "A message about the run's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The run's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "networkProfile": {
                                "description": "The network profile being used for a test run.",
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the network profile.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the network profile.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "downlinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "downlinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "downlinkLossPercent": {
                                        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "The name of the network profile.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "The type of network profile. Valid values are listed below.",
                                        "enum": [
                                            "CURATED",
                                            "PRIVATE"
                                        ],
                                        "type": "string"
                                    },
                                    "uplinkBandwidthBits": {
                                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                        "type": "integer"
                                    },
                                    "uplinkDelayMs": {
                                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkJitterMs": {
                                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                        "type": "integer"
                                    },
                                    "uplinkLossPercent": {
                                        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                        "maximum": 100,
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "parsingResultUrl": {
                                "description": "Read-only URL for an object in S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.",
                                "type": "string"
                            },
                            "platform": {
                                "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID",
                                    "IOS"
                                ],
                                "type": "string"
                            },
                            "radios": {
                                "description": "Information about the radio states for the run.",
                                "properties": {
                                    "bluetooth": {
                                        "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "gps": {
                                        "description": "True if GPS is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "nfc": {
                                        "description": "True if NFC is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    },
                                    "wifi": {
                                        "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "result": {
                                "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PASSED",
                                    "WARNED",
                                    "FAILED",
                                    "SKIPPED",
                                    "ERRORED",
                                    "STOPPED"
                                ],
                                "type": "string"
                            },
                            "resultCode": {
                                "description": "Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.",
                                "enum": [
                                    "PARSING_FAILED",
                                    "VPC_ENDPOINT_SETUP_FAILED"
                                ],
                                "type": "string"
                            },
                            "seed": {
                                "description": "For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.",
                                "type": "integer"
                            },
                            "skipAppResign": {
                                "description": "<p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p> <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
                                "type": "boolean"
                            },
                            "started": {
                                "description": "The run's start time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                                "enum": [
                                    "PENDING",
                                    "PENDING_CONCURRENCY",
                                    "PENDING_DEVICE",
                                    "PROCESSING",
                                    "SCHEDULING",
                                    "PREPARING",
                                    "RUNNING",
                                    "COMPLETED",
                                    "STOPPING"
                                ],
                                "type": "string"
                            },
                            "stopped": {
                                "description": "The run's stop time.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "testSpecArn": {
                                "description": "The ARN of the YAML-formatted test specification for the run.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "totalJobs": {
                                "description": "The total number of jobs for the run.",
                                "type": "integer"
                            },
                            "type": {
                                "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                                "enum": [
                                    "BUILTIN_FUZZ",
                                    "BUILTIN_EXPLORER",
                                    "WEB_PERFORMANCE_PROFILE",
                                    "APPIUM_JAVA_JUNIT",
                                    "APPIUM_JAVA_TESTNG",
                                    "APPIUM_PYTHON",
                                    "APPIUM_NODE",
                                    "APPIUM_RUBY",
                                    "APPIUM_WEB_JAVA_JUNIT",
                                    "APPIUM_WEB_JAVA_TESTNG",
                                    "APPIUM_WEB_PYTHON",
                                    "APPIUM_WEB_NODE",
                                    "APPIUM_WEB_RUBY",
                                    "CALABASH",
                                    "INSTRUMENTATION",
                                    "UIAUTOMATION",
                                    "UIAUTOMATOR",
                                    "XCTEST",
                                    "XCTEST_UI",
                                    "REMOTE_ACCESS_RECORD",
                                    "REMOTE_ACCESS_REPLAY"
                                ],
                                "type": "string"
                            },
                            "webUrl": {
                                "description": "The Device Farm console URL for the recording of the run.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "String": {
                "type": "string"
            },
            "Suite": {
                "description": "Represents a collection of one or more tests.",
                "properties": {
                    "arn": {
                        "description": "The suite's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "counters": {
                        "description": "The suite's result counters.",
                        "properties": {
                            "errored": {
                                "description": "The number of errored entities.",
                                "type": "integer"
                            },
                            "failed": {
                                "description": "The number of failed entities.",
                                "type": "integer"
                            },
                            "passed": {
                                "description": "The number of passed entities.",
                                "type": "integer"
                            },
                            "skipped": {
                                "description": "The number of skipped entities.",
                                "type": "integer"
                            },
                            "stopped": {
                                "description": "The number of stopped entities.",
                                "type": "integer"
                            },
                            "total": {
                                "description": "The total number of entities.",
                                "type": "integer"
                            },
                            "warned": {
                                "description": "The number of warned entities.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "created": {
                        "description": "When the suite was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "deviceMinutes": {
                        "description": "Represents the total (metered or unmetered) minutes used by the test suite.",
                        "properties": {
                            "metered": {
                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "total": {
                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "unmetered": {
                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "A message about the suite's result.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "name": {
                        "description": "The suite's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "result": {
                        "description": "<p>The suite's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PASSED",
                            "WARNED",
                            "FAILED",
                            "SKIPPED",
                            "ERRORED",
                            "STOPPED"
                        ],
                        "type": "string"
                    },
                    "started": {
                        "description": "The suite's start time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "<p>The suite's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PENDING_CONCURRENCY",
                            "PENDING_DEVICE",
                            "PROCESSING",
                            "SCHEDULING",
                            "PREPARING",
                            "RUNNING",
                            "COMPLETED",
                            "STOPPING"
                        ],
                        "type": "string"
                    },
                    "stopped": {
                        "description": "The suite's stop time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The suite's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                        "enum": [
                            "BUILTIN_FUZZ",
                            "BUILTIN_EXPLORER",
                            "WEB_PERFORMANCE_PROFILE",
                            "APPIUM_JAVA_JUNIT",
                            "APPIUM_JAVA_TESTNG",
                            "APPIUM_PYTHON",
                            "APPIUM_NODE",
                            "APPIUM_RUBY",
                            "APPIUM_WEB_JAVA_JUNIT",
                            "APPIUM_WEB_JAVA_TESTNG",
                            "APPIUM_WEB_PYTHON",
                            "APPIUM_WEB_NODE",
                            "APPIUM_WEB_RUBY",
                            "CALABASH",
                            "INSTRUMENTATION",
                            "UIAUTOMATION",
                            "UIAUTOMATOR",
                            "XCTEST",
                            "XCTEST_UI",
                            "REMOTE_ACCESS_RECORD",
                            "REMOTE_ACCESS_REPLAY"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Suites": {
                "items": {
                    "description": "Represents a collection of one or more tests.",
                    "properties": {
                        "arn": {
                            "description": "The suite's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "counters": {
                            "description": "The suite's result counters.",
                            "properties": {
                                "errored": {
                                    "description": "The number of errored entities.",
                                    "type": "integer"
                                },
                                "failed": {
                                    "description": "The number of failed entities.",
                                    "type": "integer"
                                },
                                "passed": {
                                    "description": "The number of passed entities.",
                                    "type": "integer"
                                },
                                "skipped": {
                                    "description": "The number of skipped entities.",
                                    "type": "integer"
                                },
                                "stopped": {
                                    "description": "The number of stopped entities.",
                                    "type": "integer"
                                },
                                "total": {
                                    "description": "The total number of entities.",
                                    "type": "integer"
                                },
                                "warned": {
                                    "description": "The number of warned entities.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "created": {
                            "description": "When the suite was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "deviceMinutes": {
                            "description": "Represents the total (metered or unmetered) minutes used by the test suite.",
                            "properties": {
                                "metered": {
                                    "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "total": {
                                    "description": "When specified, represents the total minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "unmetered": {
                                    "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "message": {
                            "description": "A message about the suite's result.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "name": {
                            "description": "The suite's name.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "result": {
                            "description": "<p>The suite's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PASSED",
                                "WARNED",
                                "FAILED",
                                "SKIPPED",
                                "ERRORED",
                                "STOPPED"
                            ],
                            "type": "string"
                        },
                        "started": {
                            "description": "The suite's start time.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "status": {
                            "description": "<p>The suite's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PENDING_CONCURRENCY",
                                "PENDING_DEVICE",
                                "PROCESSING",
                                "SCHEDULING",
                                "PREPARING",
                                "RUNNING",
                                "COMPLETED",
                                "STOPPING"
                            ],
                            "type": "string"
                        },
                        "stopped": {
                            "description": "The suite's stop time.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "type": {
                            "description": "<p>The suite's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                            "enum": [
                                "BUILTIN_FUZZ",
                                "BUILTIN_EXPLORER",
                                "WEB_PERFORMANCE_PROFILE",
                                "APPIUM_JAVA_JUNIT",
                                "APPIUM_JAVA_TESTNG",
                                "APPIUM_PYTHON",
                                "APPIUM_NODE",
                                "APPIUM_RUBY",
                                "APPIUM_WEB_JAVA_JUNIT",
                                "APPIUM_WEB_JAVA_TESTNG",
                                "APPIUM_WEB_PYTHON",
                                "APPIUM_WEB_NODE",
                                "APPIUM_WEB_RUBY",
                                "CALABASH",
                                "INSTRUMENTATION",
                                "UIAUTOMATION",
                                "UIAUTOMATOR",
                                "XCTEST",
                                "XCTEST_UI",
                                "REMOTE_ACCESS_RECORD",
                                "REMOTE_ACCESS_REPLAY"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Test": {
                "description": "Represents a condition that is evaluated.",
                "properties": {
                    "arn": {
                        "description": "The test's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "counters": {
                        "description": "The test's result counters.",
                        "properties": {
                            "errored": {
                                "description": "The number of errored entities.",
                                "type": "integer"
                            },
                            "failed": {
                                "description": "The number of failed entities.",
                                "type": "integer"
                            },
                            "passed": {
                                "description": "The number of passed entities.",
                                "type": "integer"
                            },
                            "skipped": {
                                "description": "The number of skipped entities.",
                                "type": "integer"
                            },
                            "stopped": {
                                "description": "The number of stopped entities.",
                                "type": "integer"
                            },
                            "total": {
                                "description": "The total number of entities.",
                                "type": "integer"
                            },
                            "warned": {
                                "description": "The number of warned entities.",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "created": {
                        "description": "When the test was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "deviceMinutes": {
                        "description": "Represents the total (metered or unmetered) minutes used by the test.",
                        "properties": {
                            "metered": {
                                "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "total": {
                                "description": "When specified, represents the total minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            },
                            "unmetered": {
                                "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                "format": "double",
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "description": "A message about the test's result.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "name": {
                        "description": "The test's name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "result": {
                        "description": "<p>The test's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PASSED",
                            "WARNED",
                            "FAILED",
                            "SKIPPED",
                            "ERRORED",
                            "STOPPED"
                        ],
                        "type": "string"
                    },
                    "started": {
                        "description": "The test's start time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "description": "<p>The test's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                        "enum": [
                            "PENDING",
                            "PENDING_CONCURRENCY",
                            "PENDING_DEVICE",
                            "PROCESSING",
                            "SCHEDULING",
                            "PREPARING",
                            "RUNNING",
                            "COMPLETED",
                            "STOPPING"
                        ],
                        "type": "string"
                    },
                    "stopped": {
                        "description": "The test's stop time.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                        "enum": [
                            "BUILTIN_FUZZ",
                            "BUILTIN_EXPLORER",
                            "WEB_PERFORMANCE_PROFILE",
                            "APPIUM_JAVA_JUNIT",
                            "APPIUM_JAVA_TESTNG",
                            "APPIUM_PYTHON",
                            "APPIUM_NODE",
                            "APPIUM_RUBY",
                            "APPIUM_WEB_JAVA_JUNIT",
                            "APPIUM_WEB_JAVA_TESTNG",
                            "APPIUM_WEB_PYTHON",
                            "APPIUM_WEB_NODE",
                            "APPIUM_WEB_RUBY",
                            "CALABASH",
                            "INSTRUMENTATION",
                            "UIAUTOMATION",
                            "UIAUTOMATOR",
                            "XCTEST",
                            "XCTEST_UI",
                            "REMOTE_ACCESS_RECORD",
                            "REMOTE_ACCESS_REPLAY"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TestParameters": {
                "items": {
                    "properties": {
                        "key": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TestType": {
                "enum": [
                    "BUILTIN_FUZZ",
                    "BUILTIN_EXPLORER",
                    "WEB_PERFORMANCE_PROFILE",
                    "APPIUM_JAVA_JUNIT",
                    "APPIUM_JAVA_TESTNG",
                    "APPIUM_PYTHON",
                    "APPIUM_NODE",
                    "APPIUM_RUBY",
                    "APPIUM_WEB_JAVA_JUNIT",
                    "APPIUM_WEB_JAVA_TESTNG",
                    "APPIUM_WEB_PYTHON",
                    "APPIUM_WEB_NODE",
                    "APPIUM_WEB_RUBY",
                    "CALABASH",
                    "INSTRUMENTATION",
                    "UIAUTOMATION",
                    "UIAUTOMATOR",
                    "XCTEST",
                    "XCTEST_UI",
                    "REMOTE_ACCESS_RECORD",
                    "REMOTE_ACCESS_REPLAY"
                ],
                "type": "string"
            },
            "Tests": {
                "items": {
                    "description": "Represents a condition that is evaluated.",
                    "properties": {
                        "arn": {
                            "description": "The test's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "counters": {
                            "description": "The test's result counters.",
                            "properties": {
                                "errored": {
                                    "description": "The number of errored entities.",
                                    "type": "integer"
                                },
                                "failed": {
                                    "description": "The number of failed entities.",
                                    "type": "integer"
                                },
                                "passed": {
                                    "description": "The number of passed entities.",
                                    "type": "integer"
                                },
                                "skipped": {
                                    "description": "The number of skipped entities.",
                                    "type": "integer"
                                },
                                "stopped": {
                                    "description": "The number of stopped entities.",
                                    "type": "integer"
                                },
                                "total": {
                                    "description": "The total number of entities.",
                                    "type": "integer"
                                },
                                "warned": {
                                    "description": "The number of warned entities.",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "created": {
                            "description": "When the test was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "deviceMinutes": {
                            "description": "Represents the total (metered or unmetered) minutes used by the test.",
                            "properties": {
                                "metered": {
                                    "description": "When specified, represents only the sum of metered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "total": {
                                    "description": "When specified, represents the total minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "unmetered": {
                                    "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "message": {
                            "description": "A message about the test's result.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "name": {
                            "description": "The test's name.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "result": {
                            "description": "<p>The test's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PASSED",
                                "WARNED",
                                "FAILED",
                                "SKIPPED",
                                "ERRORED",
                                "STOPPED"
                            ],
                            "type": "string"
                        },
                        "started": {
                            "description": "The test's start time.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "status": {
                            "description": "<p>The test's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>",
                            "enum": [
                                "PENDING",
                                "PENDING_CONCURRENCY",
                                "PENDING_DEVICE",
                                "PROCESSING",
                                "SCHEDULING",
                                "PREPARING",
                                "RUNNING",
                                "COMPLETED",
                                "STOPPING"
                            ],
                            "type": "string"
                        },
                        "stopped": {
                            "description": "The test's stop time.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "type": {
                            "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_NODE: The Appium Node.js type.</p> </li> <li> <p>APPIUM_RUBY: The Appium Ruby type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE: The Appium Node.js type for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY: The Appium Ruby type for web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>",
                            "enum": [
                                "BUILTIN_FUZZ",
                                "BUILTIN_EXPLORER",
                                "WEB_PERFORMANCE_PROFILE",
                                "APPIUM_JAVA_JUNIT",
                                "APPIUM_JAVA_TESTNG",
                                "APPIUM_PYTHON",
                                "APPIUM_NODE",
                                "APPIUM_RUBY",
                                "APPIUM_WEB_JAVA_JUNIT",
                                "APPIUM_WEB_JAVA_TESTNG",
                                "APPIUM_WEB_PYTHON",
                                "APPIUM_WEB_NODE",
                                "APPIUM_WEB_RUBY",
                                "CALABASH",
                                "INSTRUMENTATION",
                                "UIAUTOMATION",
                                "UIAUTOMATOR",
                                "XCTEST",
                                "XCTEST_UI",
                                "REMOTE_ACCESS_RECORD",
                                "REMOTE_ACCESS_REPLAY"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "TransactionIdentifier": {
                "minLength": 32,
                "type": "string"
            },
            "TrialMinutes": {
                "description": "Represents information about free trial device minutes for an AWS account.",
                "properties": {
                    "remaining": {
                        "description": "The number of free trial minutes remaining in the account.",
                        "format": "double",
                        "type": "number"
                    },
                    "total": {
                        "description": "The total number of free trial minutes that the account started with.",
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "URL": {
                "maxLength": 2048,
                "minLength": 0,
                "type": "string"
            },
            "UniqueProblem": {
                "description": "A collection of one or more problems, grouped by their result.",
                "properties": {
                    "message": {
                        "description": "A message about the unique problems' result.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "problems": {
                        "description": "Information about the problems.",
                        "items": {
                            "description": "Represents a specific warning or failure.",
                            "properties": {
                                "device": {
                                    "description": "Information about the associated device.",
                                    "properties": {
                                        "arn": {
                                            "description": "The device's ARN.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "availability": {
                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                            "enum": [
                                                "TEMPORARY_NOT_AVAILABLE",
                                                "BUSY",
                                                "AVAILABLE",
                                                "HIGHLY_AVAILABLE"
                                            ],
                                            "type": "string"
                                        },
                                        "carrier": {
                                            "description": "The device's carrier.",
                                            "type": "string"
                                        },
                                        "cpu": {
                                            "description": "Information about the device's CPU.",
                                            "properties": {
                                                "architecture": {
                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                    "type": "string"
                                                },
                                                "clock": {
                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "frequency": {
                                                    "description": "The CPU's frequency.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "fleetName": {
                                            "description": "The name of the fleet to which this device belongs.",
                                            "type": "string"
                                        },
                                        "fleetType": {
                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                            "type": "string"
                                        },
                                        "formFactor": {
                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                            "enum": [
                                                "PHONE",
                                                "TABLET"
                                            ],
                                            "type": "string"
                                        },
                                        "heapSize": {
                                            "description": "The device's heap size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "image": {
                                            "description": "The device's image name.",
                                            "type": "string"
                                        },
                                        "instances": {
                                            "description": "The instances belonging to this device.",
                                            "items": {
                                                "description": "Represents the device instance.",
                                                "properties": {
                                                    "arn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "deviceArn": {
                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                        "minLength": 32,
                                                        "type": "string"
                                                    },
                                                    "instanceProfile": {
                                                        "description": "A object containing information about the instance profile.",
                                                        "properties": {
                                                            "arn": {
                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                "minLength": 32,
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "description": "The description of the instance profile.",
                                                                "maxLength": 16384,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "excludeAppPackagesFromCleanup": {
                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "description": "The name of the instance profile.",
                                                                "maxLength": 256,
                                                                "minLength": 0,
                                                                "type": "string"
                                                            },
                                                            "packageCleanup": {
                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                "type": "boolean"
                                                            },
                                                            "rebootAfterUse": {
                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "description": "An array of strings describing the device instance.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "status": {
                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                        "enum": [
                                                            "IN_USE",
                                                            "PREPARING",
                                                            "AVAILABLE",
                                                            "NOT_AVAILABLE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "udid": {
                                                        "description": "Unique device identifier for the device instance.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "manufacturer": {
                                            "description": "The device's manufacturer name.",
                                            "type": "string"
                                        },
                                        "memory": {
                                            "description": "The device's total memory size, expressed in bytes.",
                                            "type": "integer"
                                        },
                                        "model": {
                                            "description": "The device's model name.",
                                            "type": "string"
                                        },
                                        "modelId": {
                                            "description": "The device's model ID.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The device's display name.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "os": {
                                            "description": "The device's operating system type.",
                                            "type": "string"
                                        },
                                        "platform": {
                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                            "enum": [
                                                "ANDROID",
                                                "IOS"
                                            ],
                                            "type": "string"
                                        },
                                        "radio": {
                                            "description": "The device's radio.",
                                            "type": "string"
                                        },
                                        "remoteAccessEnabled": {
                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                            "type": "boolean"
                                        },
                                        "remoteDebugEnabled": {
                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                            "type": "boolean"
                                        },
                                        "resolution": {
                                            "description": "The resolution of the device.",
                                            "properties": {
                                                "height": {
                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                    "type": "integer"
                                                },
                                                "width": {
                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "job": {
                                    "description": "Information about the associated job.",
                                    "properties": {
                                        "arn": {
                                            "description": "The problem detail's ARN.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The problem detail's name.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "message": {
                                    "description": "A message about the problem's result.",
                                    "maxLength": 16384,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "result": {
                                    "description": "<p>The problem's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                    "enum": [
                                        "PENDING",
                                        "PASSED",
                                        "WARNED",
                                        "FAILED",
                                        "SKIPPED",
                                        "ERRORED",
                                        "STOPPED"
                                    ],
                                    "type": "string"
                                },
                                "run": {
                                    "description": "Information about the associated run.",
                                    "properties": {
                                        "arn": {
                                            "description": "The problem detail's ARN.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The problem detail's name.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "suite": {
                                    "description": "Information about the associated suite.",
                                    "properties": {
                                        "arn": {
                                            "description": "The problem detail's ARN.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The problem detail's name.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "test": {
                                    "description": "Information about the associated test.",
                                    "properties": {
                                        "arn": {
                                            "description": "The problem detail's ARN.",
                                            "minLength": 32,
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "The problem detail's name.",
                                            "maxLength": 256,
                                            "minLength": 0,
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UniqueProblems": {
                "items": {
                    "description": "A collection of one or more problems, grouped by their result.",
                    "properties": {
                        "message": {
                            "description": "A message about the unique problems' result.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "problems": {
                            "description": "Information about the problems.",
                            "items": {
                                "description": "Represents a specific warning or failure.",
                                "properties": {
                                    "device": {
                                        "description": "Information about the associated device.",
                                        "properties": {
                                            "arn": {
                                                "description": "The device's ARN.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "availability": {
                                                "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                "enum": [
                                                    "TEMPORARY_NOT_AVAILABLE",
                                                    "BUSY",
                                                    "AVAILABLE",
                                                    "HIGHLY_AVAILABLE"
                                                ],
                                                "type": "string"
                                            },
                                            "carrier": {
                                                "description": "The device's carrier.",
                                                "type": "string"
                                            },
                                            "cpu": {
                                                "description": "Information about the device's CPU.",
                                                "properties": {
                                                    "architecture": {
                                                        "description": "The CPU's architecture, for example x86 or ARM.",
                                                        "type": "string"
                                                    },
                                                    "clock": {
                                                        "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "frequency": {
                                                        "description": "The CPU's frequency.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "fleetName": {
                                                "description": "The name of the fleet to which this device belongs.",
                                                "type": "string"
                                            },
                                            "fleetType": {
                                                "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                "type": "string"
                                            },
                                            "formFactor": {
                                                "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                "enum": [
                                                    "PHONE",
                                                    "TABLET"
                                                ],
                                                "type": "string"
                                            },
                                            "heapSize": {
                                                "description": "The device's heap size, expressed in bytes.",
                                                "type": "integer"
                                            },
                                            "image": {
                                                "description": "The device's image name.",
                                                "type": "string"
                                            },
                                            "instances": {
                                                "description": "The instances belonging to this device.",
                                                "items": {
                                                    "description": "Represents the device instance.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "deviceArn": {
                                                            "description": "The Amazon Resource Name (ARN) of the device.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "instanceProfile": {
                                                            "description": "A object containing information about the instance profile.",
                                                            "properties": {
                                                                "arn": {
                                                                    "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                    "minLength": 32,
                                                                    "type": "string"
                                                                },
                                                                "description": {
                                                                    "description": "The description of the instance profile.",
                                                                    "maxLength": 16384,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "excludeAppPackagesFromCleanup": {
                                                                    "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "name": {
                                                                    "description": "The name of the instance profile.",
                                                                    "maxLength": 256,
                                                                    "minLength": 0,
                                                                    "type": "string"
                                                                },
                                                                "packageCleanup": {
                                                                    "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                    "type": "boolean"
                                                                },
                                                                "rebootAfterUse": {
                                                                    "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "labels": {
                                                            "description": "An array of strings describing the device instance.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "status": {
                                                            "description": "The status of the device instance. Valid values are listed below.",
                                                            "enum": [
                                                                "IN_USE",
                                                                "PREPARING",
                                                                "AVAILABLE",
                                                                "NOT_AVAILABLE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "udid": {
                                                            "description": "Unique device identifier for the device instance.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "manufacturer": {
                                                "description": "The device's manufacturer name.",
                                                "type": "string"
                                            },
                                            "memory": {
                                                "description": "The device's total memory size, expressed in bytes.",
                                                "type": "integer"
                                            },
                                            "model": {
                                                "description": "The device's model name.",
                                                "type": "string"
                                            },
                                            "modelId": {
                                                "description": "The device's model ID.",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "The device's display name.",
                                                "maxLength": 256,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "os": {
                                                "description": "The device's operating system type.",
                                                "type": "string"
                                            },
                                            "platform": {
                                                "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                "enum": [
                                                    "ANDROID",
                                                    "IOS"
                                                ],
                                                "type": "string"
                                            },
                                            "radio": {
                                                "description": "The device's radio.",
                                                "type": "string"
                                            },
                                            "remoteAccessEnabled": {
                                                "description": "Specifies whether remote access has been enabled for the specified device.",
                                                "type": "boolean"
                                            },
                                            "remoteDebugEnabled": {
                                                "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                "type": "boolean"
                                            },
                                            "resolution": {
                                                "description": "The resolution of the device.",
                                                "properties": {
                                                    "height": {
                                                        "description": "The screen resolution's height, expressed in pixels.",
                                                        "type": "integer"
                                                    },
                                                    "width": {
                                                        "description": "The screen resolution's width, expressed in pixels.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "job": {
                                        "description": "Information about the associated job.",
                                        "properties": {
                                            "arn": {
                                                "description": "The problem detail's ARN.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "The problem detail's name.",
                                                "maxLength": 256,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "message": {
                                        "description": "A message about the problem's result.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "result": {
                                        "description": "<p>The problem's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                        "enum": [
                                            "PENDING",
                                            "PASSED",
                                            "WARNED",
                                            "FAILED",
                                            "SKIPPED",
                                            "ERRORED",
                                            "STOPPED"
                                        ],
                                        "type": "string"
                                    },
                                    "run": {
                                        "description": "Information about the associated run.",
                                        "properties": {
                                            "arn": {
                                                "description": "The problem detail's ARN.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "The problem detail's name.",
                                                "maxLength": 256,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "suite": {
                                        "description": "Information about the associated suite.",
                                        "properties": {
                                            "arn": {
                                                "description": "The problem detail's ARN.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "The problem detail's name.",
                                                "maxLength": 256,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "test": {
                                        "description": "Information about the associated test.",
                                        "properties": {
                                            "arn": {
                                                "description": "The problem detail's ARN.",
                                                "minLength": 32,
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "The problem detail's name.",
                                                "maxLength": 256,
                                                "minLength": 0,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "UniqueProblemsByExecutionResultMap": {
                "items": {
                    "properties": {
                        "key": {
                            "enum": [
                                "PENDING",
                                "PASSED",
                                "WARNED",
                                "FAILED",
                                "SKIPPED",
                                "ERRORED",
                                "STOPPED"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "items": {
                                "description": "A collection of one or more problems, grouped by their result.",
                                "properties": {
                                    "message": {
                                        "description": "A message about the unique problems' result.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "problems": {
                                        "description": "Information about the problems.",
                                        "items": {
                                            "description": "Represents a specific warning or failure.",
                                            "properties": {
                                                "device": {
                                                    "description": "Information about the associated device.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The device's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "availability": {
                                                            "description": "Reflects how likely a device will be available for a test run. It is currently available in the ListDevices and GetDevice API methods.",
                                                            "enum": [
                                                                "TEMPORARY_NOT_AVAILABLE",
                                                                "BUSY",
                                                                "AVAILABLE",
                                                                "HIGHLY_AVAILABLE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "carrier": {
                                                            "description": "The device's carrier.",
                                                            "type": "string"
                                                        },
                                                        "cpu": {
                                                            "description": "Information about the device's CPU.",
                                                            "properties": {
                                                                "architecture": {
                                                                    "description": "The CPU's architecture, for example x86 or ARM.",
                                                                    "type": "string"
                                                                },
                                                                "clock": {
                                                                    "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.",
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "frequency": {
                                                                    "description": "The CPU's frequency.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "fleetName": {
                                                            "description": "The name of the fleet to which this device belongs.",
                                                            "type": "string"
                                                        },
                                                        "fleetType": {
                                                            "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC.",
                                                            "type": "string"
                                                        },
                                                        "formFactor": {
                                                            "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>",
                                                            "enum": [
                                                                "PHONE",
                                                                "TABLET"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "heapSize": {
                                                            "description": "The device's heap size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "image": {
                                                            "description": "The device's image name.",
                                                            "type": "string"
                                                        },
                                                        "instances": {
                                                            "description": "The instances belonging to this device.",
                                                            "items": {
                                                                "description": "Represents the device instance.",
                                                                "properties": {
                                                                    "arn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "deviceArn": {
                                                                        "description": "The Amazon Resource Name (ARN) of the device.",
                                                                        "minLength": 32,
                                                                        "type": "string"
                                                                    },
                                                                    "instanceProfile": {
                                                                        "description": "A object containing information about the instance profile.",
                                                                        "properties": {
                                                                            "arn": {
                                                                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                                                                "minLength": 32,
                                                                                "type": "string"
                                                                            },
                                                                            "description": {
                                                                                "description": "The description of the instance profile.",
                                                                                "maxLength": 16384,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "excludeAppPackagesFromCleanup": {
                                                                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "name": {
                                                                                "description": "The name of the instance profile.",
                                                                                "maxLength": 256,
                                                                                "minLength": 0,
                                                                                "type": "string"
                                                                            },
                                                                            "packageCleanup": {
                                                                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "rebootAfterUse": {
                                                                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                                                                "type": "boolean"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "An array of strings describing the device instance.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "status": {
                                                                        "description": "The status of the device instance. Valid values are listed below.",
                                                                        "enum": [
                                                                            "IN_USE",
                                                                            "PREPARING",
                                                                            "AVAILABLE",
                                                                            "NOT_AVAILABLE"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "udid": {
                                                                        "description": "Unique device identifier for the device instance.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "manufacturer": {
                                                            "description": "The device's manufacturer name.",
                                                            "type": "string"
                                                        },
                                                        "memory": {
                                                            "description": "The device's total memory size, expressed in bytes.",
                                                            "type": "integer"
                                                        },
                                                        "model": {
                                                            "description": "The device's model name.",
                                                            "type": "string"
                                                        },
                                                        "modelId": {
                                                            "description": "The device's model ID.",
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The device's display name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        },
                                                        "os": {
                                                            "description": "The device's operating system type.",
                                                            "type": "string"
                                                        },
                                                        "platform": {
                                                            "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>",
                                                            "enum": [
                                                                "ANDROID",
                                                                "IOS"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "radio": {
                                                            "description": "The device's radio.",
                                                            "type": "string"
                                                        },
                                                        "remoteAccessEnabled": {
                                                            "description": "Specifies whether remote access has been enabled for the specified device.",
                                                            "type": "boolean"
                                                        },
                                                        "remoteDebugEnabled": {
                                                            "description": "This flag is set to <code>true</code> if remote debugging is enabled for the device.",
                                                            "type": "boolean"
                                                        },
                                                        "resolution": {
                                                            "description": "The resolution of the device.",
                                                            "properties": {
                                                                "height": {
                                                                    "description": "The screen resolution's height, expressed in pixels.",
                                                                    "type": "integer"
                                                                },
                                                                "width": {
                                                                    "description": "The screen resolution's width, expressed in pixels.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "job": {
                                                    "description": "Information about the associated job.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The problem detail's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The problem detail's name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "description": "A message about the problem's result.",
                                                    "maxLength": 16384,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "result": {
                                                    "description": "<p>The problem's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>",
                                                    "enum": [
                                                        "PENDING",
                                                        "PASSED",
                                                        "WARNED",
                                                        "FAILED",
                                                        "SKIPPED",
                                                        "ERRORED",
                                                        "STOPPED"
                                                    ],
                                                    "type": "string"
                                                },
                                                "run": {
                                                    "description": "Information about the associated run.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The problem detail's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The problem detail's name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "suite": {
                                                    "description": "Information about the associated suite.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The problem detail's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The problem detail's name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "test": {
                                                    "description": "Information about the associated test.",
                                                    "properties": {
                                                        "arn": {
                                                            "description": "The problem detail's ARN.",
                                                            "minLength": 32,
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "description": "The problem detail's name.",
                                                            "maxLength": 256,
                                                            "minLength": 0,
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "UpdateDeviceInstanceRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the device instance.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "labels": {
                        "description": "An array of strings that you want to associate with the device instance.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "profileArn": {
                        "description": "The Amazon Resource Name (ARN) of the profile that you want to associate with the device instance.",
                        "minLength": 32,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "UpdateDeviceInstanceResult": {
                "properties": {
                    "deviceInstance": {
                        "description": "An object containing information about your device instance.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the device instance.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "deviceArn": {
                                "description": "The Amazon Resource Name (ARN) of the device.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "instanceProfile": {
                                "description": "A object containing information about the instance profile.",
                                "properties": {
                                    "arn": {
                                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                        "minLength": 32,
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the instance profile.",
                                        "maxLength": 16384,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "excludeAppPackagesFromCleanup": {
                                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "name": {
                                        "description": "The name of the instance profile.",
                                        "maxLength": 256,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "packageCleanup": {
                                        "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                        "type": "boolean"
                                    },
                                    "rebootAfterUse": {
                                        "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "labels": {
                                "description": "An array of strings describing the device instance.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "status": {
                                "description": "The status of the device instance. Valid values are listed below.",
                                "enum": [
                                    "IN_USE",
                                    "PREPARING",
                                    "AVAILABLE",
                                    "NOT_AVAILABLE"
                                ],
                                "type": "string"
                            },
                            "udid": {
                                "description": "Unique device identifier for the device instance.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateDevicePoolRequest": {
                "description": "Represents a request to the update device pool operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE",
                    "description": "NewDescription",
                    "name": "NewName",
                    "rules": [
                        {
                            "attribute": "REMOTE_ACCESS_ENABLED",
                            "operator": "EQUALS",
                            "value": "True"
                        }
                    ]
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resourc Name (ARN) of the Device Farm device pool you wish to update.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "clearMaxDevices": {
                        "description": "<p>Sets whether the <code>maxDevices</code> parameter applies to your device pool. If you set this parameter to <code>true</code>, the <code>maxDevices</code> parameter does not apply, and Device Farm does not limit the number of devices that it adds to your device pool. In this case, Device Farm adds all available devices that meet the criteria that are specified for the <code>rules</code> parameter.</p> <p>If you use this parameter in your request, you cannot use the <code>maxDevices</code> parameter in the same request.</p>",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "A description of the device pool you wish to update.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "maxDevices": {
                        "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p> <p>If you use this parameter in your request, you cannot use the <code>clearMaxDevices</code> parameter in the same request.</p>",
                        "type": "integer"
                    },
                    "name": {
                        "description": "A string representing the name of the device pool you wish to update.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "rules": {
                        "description": "Represents the rules you wish to modify for the device pool. Updating rules is optional; however, if you choose to update rules for your request, the update will replace the existing rules.",
                        "items": {
                            "description": "Represents a condition for a device pool.",
                            "properties": {
                                "attribute": {
                                    "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                    "enum": [
                                        "ARN",
                                        "PLATFORM",
                                        "FORM_FACTOR",
                                        "MANUFACTURER",
                                        "REMOTE_ACCESS_ENABLED",
                                        "REMOTE_DEBUG_ENABLED",
                                        "APPIUM_VERSION",
                                        "INSTANCE_ARN",
                                        "INSTANCE_LABELS",
                                        "FLEET_TYPE",
                                        "OS_VERSION",
                                        "MODEL",
                                        "AVAILABILITY"
                                    ],
                                    "type": "string"
                                },
                                "operator": {
                                    "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                    "enum": [
                                        "EQUALS",
                                        "LESS_THAN",
                                        "LESS_THAN_OR_EQUALS",
                                        "GREATER_THAN",
                                        "GREATER_THAN_OR_EQUALS",
                                        "IN",
                                        "NOT_IN",
                                        "CONTAINS"
                                    ],
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The rule's value.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "UpdateDevicePoolResult": {
                "description": "Represents the result of an update device pool request.",
                "example": {
                    "devicePool": {}
                },
                "properties": {
                    "devicePool": {
                        "description": "The device pool you just updated.",
                        "properties": {
                            "arn": {
                                "description": "The device pool's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The device pool's description.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "maxDevices": {
                                "description": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The device pool's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "rules": {
                                "description": "Information about the device pool's rules.",
                                "items": {
                                    "description": "Represents a condition for a device pool.",
                                    "properties": {
                                        "attribute": {
                                            "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device. For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are \"PHONE\" or \"TABLET\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p> <i>Supported operators</i>: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p> <i>Supported operators</i>: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer. For example, \"Apple\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as \"Apple iPad Air 2\" or \"Google Pixel\".</p> <p> <i>Supported operators</i>: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version. For example, \"10.3.2\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are \"ANDROID\" or \"IOS\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are \"TRUE\" or \"FALSE\".</p> <p> <i>Supported operators</i>: <code>EQUALS</code> </p> </dd> </dl>",
                                            "enum": [
                                                "ARN",
                                                "PLATFORM",
                                                "FORM_FACTOR",
                                                "MANUFACTURER",
                                                "REMOTE_ACCESS_ENABLED",
                                                "REMOTE_DEBUG_ENABLED",
                                                "APPIUM_VERSION",
                                                "INSTANCE_ARN",
                                                "INSTANCE_LABELS",
                                                "FLEET_TYPE",
                                                "OS_VERSION",
                                                "MODEL",
                                                "AVAILABILITY"
                                            ],
                                            "type": "string"
                                        },
                                        "operator": {
                                            "description": "Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.",
                                            "enum": [
                                                "EQUALS",
                                                "LESS_THAN",
                                                "LESS_THAN_OR_EQUALS",
                                                "GREATER_THAN",
                                                "GREATER_THAN_OR_EQUALS",
                                                "IN",
                                                "NOT_IN",
                                                "CONTAINS"
                                            ],
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "The rule's value.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "type": {
                                "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateInstanceProfileRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the instance profile.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "description": {
                        "description": "The updated description for your instance profile.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "excludeAppPackagesFromCleanup": {
                        "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "The updated name for your instance profile.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "packageCleanup": {
                        "description": "The updated choice for whether you want to specify package cleanup. The default value is <code>false</code> for private devices.",
                        "type": "boolean"
                    },
                    "rebootAfterUse": {
                        "description": "The updated choice for whether you want to reboot the device after use. The default value is <code>true</code>.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "UpdateInstanceProfileResult": {
                "properties": {
                    "instanceProfile": {
                        "description": "An object containing information about your instance profile.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the instance profile.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The description of the instance profile.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "excludeAppPackagesFromCleanup": {
                                "description": "<p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "name": {
                                "description": "The name of the instance profile.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "packageCleanup": {
                                "description": "When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.",
                                "type": "boolean"
                            },
                            "rebootAfterUse": {
                                "description": "When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateNetworkProfileRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the project for which you want to update network profile settings.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "description": {
                        "description": "The descriptoin of the network profile about which you are returning information.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "downlinkBandwidthBits": {
                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                        "type": "integer"
                    },
                    "downlinkDelayMs": {
                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "downlinkJitterMs": {
                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "downlinkLossPercent": {
                        "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the network profile about which you are returning information.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of network profile you wish to return information about. Valid values are listed below.",
                        "enum": [
                            "CURATED",
                            "PRIVATE"
                        ],
                        "type": "string"
                    },
                    "uplinkBandwidthBits": {
                        "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                        "type": "integer"
                    },
                    "uplinkDelayMs": {
                        "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "uplinkJitterMs": {
                        "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                        "type": "integer"
                    },
                    "uplinkLossPercent": {
                        "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                        "maximum": 100,
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "UpdateNetworkProfileResult": {
                "properties": {
                    "networkProfile": {
                        "description": "A list of the available network profiles.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the network profile.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "description": {
                                "description": "The description of the network profile.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "downlinkBandwidthBits": {
                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                "type": "integer"
                            },
                            "downlinkDelayMs": {
                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "downlinkJitterMs": {
                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "downlinkLossPercent": {
                                "description": "Proportion of received packets that fail to arrive from 0 to 100 percent.",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "name": {
                                "description": "The name of the network profile.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "type": {
                                "description": "The type of network profile. Valid values are listed below.",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            },
                            "uplinkBandwidthBits": {
                                "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600.",
                                "type": "integer"
                            },
                            "uplinkDelayMs": {
                                "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "uplinkJitterMs": {
                                "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.",
                                "type": "integer"
                            },
                            "uplinkLossPercent": {
                                "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent.",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateProjectRequest": {
                "description": "Represents a request to the update project operation.",
                "example": {
                    "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE",
                    "name": "NewName"
                },
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the project whose name you wish to update.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "defaultJobTimeoutMinutes": {
                        "description": "The number of minutes a test run in the project will execute before it times out.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "A string representing the new name of the project that you are updating.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "UpdateProjectResult": {
                "description": "Represents the result of an update project request.",
                "example": {
                    "project": {
                        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE",
                        "created": "1448400709.927",
                        "name": "NewName"
                    }
                },
                "properties": {
                    "project": {
                        "description": "The project you wish to update.",
                        "properties": {
                            "arn": {
                                "description": "The project's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "created": {
                                "description": "When the project was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "defaultJobTimeoutMinutes": {
                                "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes.",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The project's name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateUploadRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the uploaded test spec.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "contentType": {
                        "description": "The upload's content type (for example, \"application/x-yaml\").",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "editContent": {
                        "description": "Set to true if the YAML file has changed and needs to be updated; otherwise, set to false.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The upload's test spec file name. The name should not contain the '/' character. The test spec file name must end with the <code>.yaml</code> or <code>.yml</code> file extension.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "UpdateUploadResult": {
                "properties": {
                    "upload": {
                        "description": "A test spec uploaded to Device Farm.",
                        "properties": {
                            "arn": {
                                "description": "The upload's ARN.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "category": {
                                "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                                "enum": [
                                    "CURATED",
                                    "PRIVATE"
                                ],
                                "type": "string"
                            },
                            "contentType": {
                                "description": "The upload's content type (for example, \"application/octet-stream\").",
                                "maxLength": 64,
                                "minLength": 0,
                                "type": "string"
                            },
                            "created": {
                                "description": "When the upload was created.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "message": {
                                "description": "A message about the upload's result.",
                                "maxLength": 16384,
                                "minLength": 0,
                                "type": "string"
                            },
                            "metadata": {
                                "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                                "maxLength": 8192,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The upload's file name.",
                                "maxLength": 256,
                                "minLength": 0,
                                "type": "string"
                            },
                            "status": {
                                "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                                "enum": [
                                    "INITIALIZED",
                                    "PROCESSING",
                                    "SUCCEEDED",
                                    "FAILED"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                                "enum": [
                                    "ANDROID_APP",
                                    "IOS_APP",
                                    "WEB_APP",
                                    "EXTERNAL_DATA",
                                    "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                    "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                    "APPIUM_PYTHON_TEST_PACKAGE",
                                    "APPIUM_NODE_TEST_PACKAGE",
                                    "APPIUM_RUBY_TEST_PACKAGE",
                                    "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                    "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                    "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                    "APPIUM_WEB_NODE_TEST_PACKAGE",
                                    "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                    "CALABASH_TEST_PACKAGE",
                                    "INSTRUMENTATION_TEST_PACKAGE",
                                    "UIAUTOMATION_TEST_PACKAGE",
                                    "UIAUTOMATOR_TEST_PACKAGE",
                                    "XCTEST_TEST_PACKAGE",
                                    "XCTEST_UI_TEST_PACKAGE",
                                    "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                    "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                    "APPIUM_PYTHON_TEST_SPEC",
                                    "APPIUM_NODE_TEST_SPEC",
                                    "APPIUM_RUBY_TEST_SPEC",
                                    "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                    "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                    "APPIUM_WEB_PYTHON_TEST_SPEC",
                                    "APPIUM_WEB_NODE_TEST_SPEC",
                                    "APPIUM_WEB_RUBY_TEST_SPEC",
                                    "INSTRUMENTATION_TEST_SPEC",
                                    "XCTEST_UI_TEST_SPEC"
                                ],
                                "type": "string"
                            },
                            "url": {
                                "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateVPCEConfigurationRequest": {
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to update.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "serviceDnsName": {
                        "description": "The DNS (domain) name used to connect to your private service in your Amazon VPC. The DNS name must not already be in use on the Internet.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vpceConfigurationDescription": {
                        "description": "An optional description, providing more details about your VPC endpoint configuration.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vpceConfigurationName": {
                        "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vpceServiceName": {
                        "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "arn"
                ],
                "type": "object"
            },
            "UpdateVPCEConfigurationResult": {
                "properties": {
                    "vpceConfiguration": {
                        "description": "An object containing information about your VPC endpoint configuration.",
                        "properties": {
                            "arn": {
                                "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                                "minLength": 32,
                                "type": "string"
                            },
                            "serviceDnsName": {
                                "description": "The DNS name that maps to the private IP address of the service you want to access.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "vpceConfigurationDescription": {
                                "description": "An optional description, providing more details about your VPC endpoint configuration.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            },
                            "vpceConfigurationName": {
                                "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                                "maxLength": 1024,
                                "minLength": 0,
                                "type": "string"
                            },
                            "vpceServiceName": {
                                "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                                "maxLength": 2048,
                                "minLength": 0,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Upload": {
                "description": "An app or a set of one or more tests to upload or that have been uploaded.",
                "properties": {
                    "arn": {
                        "description": "The upload's ARN.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "category": {
                        "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                        "enum": [
                            "CURATED",
                            "PRIVATE"
                        ],
                        "type": "string"
                    },
                    "contentType": {
                        "description": "The upload's content type (for example, \"application/octet-stream\").",
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "created": {
                        "description": "When the upload was created.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "message": {
                        "description": "A message about the upload's result.",
                        "maxLength": 16384,
                        "minLength": 0,
                        "type": "string"
                    },
                    "metadata": {
                        "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                        "maxLength": 8192,
                        "minLength": 0,
                        "type": "string"
                    },
                    "name": {
                        "description": "The upload's file name.",
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "status": {
                        "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                        "enum": [
                            "INITIALIZED",
                            "PROCESSING",
                            "SUCCEEDED",
                            "FAILED"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                        "enum": [
                            "ANDROID_APP",
                            "IOS_APP",
                            "WEB_APP",
                            "EXTERNAL_DATA",
                            "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                            "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                            "APPIUM_PYTHON_TEST_PACKAGE",
                            "APPIUM_NODE_TEST_PACKAGE",
                            "APPIUM_RUBY_TEST_PACKAGE",
                            "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                            "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                            "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                            "APPIUM_WEB_NODE_TEST_PACKAGE",
                            "APPIUM_WEB_RUBY_TEST_PACKAGE",
                            "CALABASH_TEST_PACKAGE",
                            "INSTRUMENTATION_TEST_PACKAGE",
                            "UIAUTOMATION_TEST_PACKAGE",
                            "UIAUTOMATOR_TEST_PACKAGE",
                            "XCTEST_TEST_PACKAGE",
                            "XCTEST_UI_TEST_PACKAGE",
                            "APPIUM_JAVA_JUNIT_TEST_SPEC",
                            "APPIUM_JAVA_TESTNG_TEST_SPEC",
                            "APPIUM_PYTHON_TEST_SPEC",
                            "APPIUM_NODE_TEST_SPEC",
                            "APPIUM_RUBY_TEST_SPEC",
                            "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                            "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                            "APPIUM_WEB_PYTHON_TEST_SPEC",
                            "APPIUM_WEB_NODE_TEST_SPEC",
                            "APPIUM_WEB_RUBY_TEST_SPEC",
                            "INSTRUMENTATION_TEST_SPEC",
                            "XCTEST_UI_TEST_SPEC"
                        ],
                        "type": "string"
                    },
                    "url": {
                        "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UploadCategory": {
                "enum": [
                    "CURATED",
                    "PRIVATE"
                ],
                "type": "string"
            },
            "UploadStatus": {
                "enum": [
                    "INITIALIZED",
                    "PROCESSING",
                    "SUCCEEDED",
                    "FAILED"
                ],
                "type": "string"
            },
            "UploadType": {
                "enum": [
                    "ANDROID_APP",
                    "IOS_APP",
                    "WEB_APP",
                    "EXTERNAL_DATA",
                    "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                    "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                    "APPIUM_PYTHON_TEST_PACKAGE",
                    "APPIUM_NODE_TEST_PACKAGE",
                    "APPIUM_RUBY_TEST_PACKAGE",
                    "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                    "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                    "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                    "APPIUM_WEB_NODE_TEST_PACKAGE",
                    "APPIUM_WEB_RUBY_TEST_PACKAGE",
                    "CALABASH_TEST_PACKAGE",
                    "INSTRUMENTATION_TEST_PACKAGE",
                    "UIAUTOMATION_TEST_PACKAGE",
                    "UIAUTOMATOR_TEST_PACKAGE",
                    "XCTEST_TEST_PACKAGE",
                    "XCTEST_UI_TEST_PACKAGE",
                    "APPIUM_JAVA_JUNIT_TEST_SPEC",
                    "APPIUM_JAVA_TESTNG_TEST_SPEC",
                    "APPIUM_PYTHON_TEST_SPEC",
                    "APPIUM_NODE_TEST_SPEC",
                    "APPIUM_RUBY_TEST_SPEC",
                    "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                    "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                    "APPIUM_WEB_PYTHON_TEST_SPEC",
                    "APPIUM_WEB_NODE_TEST_SPEC",
                    "APPIUM_WEB_RUBY_TEST_SPEC",
                    "INSTRUMENTATION_TEST_SPEC",
                    "XCTEST_UI_TEST_SPEC"
                ],
                "type": "string"
            },
            "Uploads": {
                "items": {
                    "description": "An app or a set of one or more tests to upload or that have been uploaded.",
                    "properties": {
                        "arn": {
                            "description": "The upload's ARN.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "category": {
                            "description": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
                            "enum": [
                                "CURATED",
                                "PRIVATE"
                            ],
                            "type": "string"
                        },
                        "contentType": {
                            "description": "The upload's content type (for example, \"application/octet-stream\").",
                            "maxLength": 64,
                            "minLength": 0,
                            "type": "string"
                        },
                        "created": {
                            "description": "When the upload was created.",
                            "format": "date-time",
                            "type": "string"
                        },
                        "message": {
                            "description": "A message about the upload's result.",
                            "maxLength": 16384,
                            "minLength": 0,
                            "type": "string"
                        },
                        "metadata": {
                            "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.",
                            "maxLength": 8192,
                            "minLength": 0,
                            "type": "string"
                        },
                        "name": {
                            "description": "The upload's file name.",
                            "maxLength": 256,
                            "minLength": 0,
                            "type": "string"
                        },
                        "status": {
                            "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>",
                            "enum": [
                                "INITIALIZED",
                                "PROCESSING",
                                "SUCCEEDED",
                                "FAILED"
                            ],
                            "type": "string"
                        },
                        "type": {
                            "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE: An Appium Node.js test package upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE: An Appium Ruby test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE: An Appium Node.js test package upload for web apps.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE: An Appium Ruby test package upload for web apps.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC: An Appium Node.js test spec upload.</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC: An Appium Ruby test spec upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC: An Appium Node.js test spec upload for a web app.</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC: An Appium Ruby test spec upload for a web app.</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p> </li> <li> <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p> </li> </ul>",
                            "enum": [
                                "ANDROID_APP",
                                "IOS_APP",
                                "WEB_APP",
                                "EXTERNAL_DATA",
                                "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                                "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                                "APPIUM_PYTHON_TEST_PACKAGE",
                                "APPIUM_NODE_TEST_PACKAGE",
                                "APPIUM_RUBY_TEST_PACKAGE",
                                "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                                "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                                "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                                "APPIUM_WEB_NODE_TEST_PACKAGE",
                                "APPIUM_WEB_RUBY_TEST_PACKAGE",
                                "CALABASH_TEST_PACKAGE",
                                "INSTRUMENTATION_TEST_PACKAGE",
                                "UIAUTOMATION_TEST_PACKAGE",
                                "UIAUTOMATOR_TEST_PACKAGE",
                                "XCTEST_TEST_PACKAGE",
                                "XCTEST_UI_TEST_PACKAGE",
                                "APPIUM_JAVA_JUNIT_TEST_SPEC",
                                "APPIUM_JAVA_TESTNG_TEST_SPEC",
                                "APPIUM_PYTHON_TEST_SPEC",
                                "APPIUM_NODE_TEST_SPEC",
                                "APPIUM_RUBY_TEST_SPEC",
                                "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                                "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                                "APPIUM_WEB_PYTHON_TEST_SPEC",
                                "APPIUM_WEB_NODE_TEST_SPEC",
                                "APPIUM_WEB_RUBY_TEST_SPEC",
                                "INSTRUMENTATION_TEST_SPEC",
                                "XCTEST_UI_TEST_SPEC"
                            ],
                            "type": "string"
                        },
                        "url": {
                            "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request.",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "VPCEConfiguration": {
                "description": "Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.",
                "properties": {
                    "arn": {
                        "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                        "minLength": 32,
                        "type": "string"
                    },
                    "serviceDnsName": {
                        "description": "The DNS name that maps to the private IP address of the service you want to access.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vpceConfigurationDescription": {
                        "description": "An optional description, providing more details about your VPC endpoint configuration.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vpceConfigurationName": {
                        "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "vpceServiceName": {
                        "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VPCEConfigurationDescription": {
                "maxLength": 2048,
                "minLength": 0,
                "type": "string"
            },
            "VPCEConfigurationName": {
                "maxLength": 1024,
                "minLength": 0,
                "type": "string"
            },
            "VPCEConfigurations": {
                "items": {
                    "description": "Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.",
                    "properties": {
                        "arn": {
                            "description": "The Amazon Resource Name (ARN) of the VPC endpoint configuration.",
                            "minLength": 32,
                            "type": "string"
                        },
                        "serviceDnsName": {
                            "description": "The DNS name that maps to the private IP address of the service you want to access.",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                        },
                        "vpceConfigurationDescription": {
                            "description": "An optional description, providing more details about your VPC endpoint configuration.",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                        },
                        "vpceConfigurationName": {
                            "description": "The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.",
                            "maxLength": 1024,
                            "minLength": 0,
                            "type": "string"
                        },
                        "vpceServiceName": {
                            "description": "The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "VPCEServiceName": {
                "maxLength": 2048,
                "minLength": 0,
                "type": "string"
            },
            "VideoCapture": {
                "type": "boolean"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "ListDeviceInstancesBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "maxResults": {
                                    "description": "An integer specifying the maximum number of items you want to return in the API response.",
                                    "type": "integer"
                                },
                                "nextToken": {
                                    "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.",
                                    "maxLength": 1024,
                                    "minLength": 4,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}